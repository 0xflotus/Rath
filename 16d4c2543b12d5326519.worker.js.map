{"version":3,"sources":["../webpack/bootstrap","../../../node_modules/cube-core/built/utils/aggregation.js","../../../node_modules/cube-core/built/index.js","../../../node_modules/cube-core/built/core/index.js","../../../node_modules/cube-core/built/core/periodCube.js","../../../node_modules/cube-core/built/core/momentCube.js","../../../node_modules/cube-core/built/utils/transform.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../visual-insights/build/esm/statistics/correlation.js","../../visual-insights/build/esm/statistics/utils.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../visual-insights/build/esm/statistics/linearRegression.js","../../visual-insights/build/esm/insights/config.js","../../visual-insights/build/esm/ml/cluster/kruskal.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../visual-insights/build/esm/ml/classification/knn.js","../../visual-insights/build/esm/sampling/index.js","../../visual-insights/build/esm/ml/outlier/isolationForest.js","../../visual-insights/build/esm/ml/index.js","../../visual-insights/build/esm/constant.js","../../visual-insights/build/esm/insights/subspaces.js","../../visual-insights/build/esm/insights/intention/groups.js","../../visual-insights/build/esm/insights/dev.js","../../visual-insights/build/esm/utils/common.js","workers/timer.js","workers/dev.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sum_unsafe","subset","measures","sums","forEach","mea","_loop_1","len","length","sum","_loop_2","Number","count","MEASURES","cnts","mean","_loop_3","this","__assign","index_1","require","transform_1","aggregation_1","operatorMap","createCube","_a","type","_b","aggFunc","_c","factTable","_d","dimensions","_e","periodCube","momentCube","default","props","asFields","operator","dataSource","cube","table","tree2Table","row","as","__export","periodCube_1","momentCube_1","__read","iterator","e","ar","next","done","push","error","__spread","arguments","concat","__values","TypeError","Node","children","Map","_rawData","cache","params","_i","apply","aggData","_aggData","rawData","clearCache","e_1","size","values","children_1","children_1_1","child","data","e_1_1","return","configurable","getNode","search","node","level","e_2","entries","children_2","children_2_1","childName","e_2_1","tree","e_3","children_3","children_3_1","e_3_1","buildTree","insertNode","record","member","has","set","aggTree","e_4","children_4","children_4_1","e_4_1","aggNode","e_5","children_5","children_5_1","e_5_1","setData","assign","dfs","_toConsumableArray","arr","Array","isArray","arr2","iter","toString","from","_slicedToArray","_arr","_n","undefined","_s","err","crammersV","fieldX","fieldY","xSet","Set","ySet","nestTree","add","chis","rowSums","colSums","totalSum","x","y","counter","observed","expected","chiSquared","Math","sqrt","min","pearsonCC","xBar","map","yBar","pow","getCombination","elements","start","end","ans","combine","step","_classCallCheck","instance","Constructor","_defineProperties","target","descriptor","writable","_createClass","protoProps","staticProps","oneDLinearRegression","X","Y","normalizedDataSource","valueSets","dim","index","normalizedRecord","normalizeRecord","keys","meanX","meanY","beta","numerator","denominator","getRegressionEquation","alpha","SSR","SST","yHat","E","cumulativeLogisticDistribution","abs","r_squared","pValue","PearsonCorrelation","turnAdjMatrix2List","matrix","edges","j","find","parents","union","n1","n2","p1","p2","findWithEffect","sizes","unionWithEffect","size1","size2","kruskalMST","groupNumber","threshold","sort","a","b","edgesInMST","groups","inCutEdge","edge","cluster","method","groupMaxSize","limitSize","kruskalWithLimitSize","kruskal","meas","meaIndex","_typeof2","obj","constructor","_typeof","_possibleConstructorReturn","self","ReferenceError","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","KNN","K","normalize","targetRecord","features","weights","f","dimFeatures","meaFeatures","dimWeights","meaWeights","dimSets","distances","rIndex","dis","feature","targets","neighbors","tar","votes","nei","mostCount","mostFeature","vote","dimIndex","indexOf","valueParser","ranges","Infinity","max","uniformSampling","sampleIndexes","seed","v","linearCongruentialGenerator","random","floor","Outier","IsolationForest","treeNumber","Psi","ceil","sampleSize","limitHeight","log2","iForest","normalizeDimensions","normalizedSampleData","depth","rand","randField","dimLength","meaLength","randValue","leftSubData","rightSubData","field","left","buildIsolationTree","right","log","iTree","pathLength","nodeSize","AFS","getPathLength","samples","recordScoreList","recordScore","avgPathLength","CHANNEL","getMeaCorrelationMatrix","getDimClusterGroups","dimCorrelationMatrix","getDimCorrelationMatrix","Cluster","round","GroupIntention","sameCount","getNeighbors","percents","getTargetValuePercent","sig","per","getGeneralIntentionSpace","score","significance","fL","probabilityList","entropy","frequencyList","linearMapPositive","impurity","order","getOutlierIntentionSpace","buildIsolationForest","scoreList","estimateOutierScore","maxIndex","des","description","getTrendIntentionSpace","orderedData","linearModel","getGroupIntentionSpace","getSignificance","slice","getVisSpaces","visableDimensions","filter","validCount","isFieldUnique","dimensionGroups","viewSpaces","measureGroups","crossGroups","combineDimSet","getDimSetsFromClusterGroups","maxFieldNumberInView","correlationMatrix","getMeaSetsBasedOnClusterGroups","cubePool","group","join","aggregate","ansSpace","space","generalSpace","outlierSpace","groupSpace","trendSpace","getIntentionSpaces","task","addEventListener","postMessage","success","message","startTime","Date","getTime","cost","console"],"mappings":"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","file":"16d4c2543b12d5326519.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sum_unsafe = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_1 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += subset[i][mea];\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_1(i, len);\n    }\n    return sums;\n};\nexports.sum = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_2 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_2(i, len);\n    }\n    return sums;\n};\nexports.count = function (subset, MEASURES) {\n    var cnts = {};\n    MEASURES.forEach(function (mea) {\n        cnts[mea] = 0;\n    });\n    for (var i = 0, len = subset.length; i < len; i++) {\n        MEASURES.forEach(function (mea) {\n            cnts[mea]++;\n        });\n    }\n    return cnts;\n};\nexports.mean = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_3 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_3(i, len);\n    }\n    measures.forEach(function (mea) {\n        sums[mea] /= subset.length;\n    });\n    return sums;\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./core/index\");\n// import { JsonRecord } from './types';\nvar transform_1 = require(\"./utils/transform\");\nvar aggregation_1 = require(\"./utils/aggregation\");\nvar operatorMap = {\n    'sum': aggregation_1.sum_unsafe,\n    'mean': aggregation_1.mean,\n    'count': aggregation_1.count,\n};\nfunction copyDataSource(data) {\n    return data.map(function (row) {\n        return __assign({}, row);\n    });\n}\nfunction aggregate(props) {\n    var dimensions = props.dimensions, measures = props.measures, asFields = props.asFields, operator = props.operator, dataSource = props.dataSource;\n    var data = [];\n    var cube = createCube({\n        type: 'moment',\n        aggFunc: operatorMap[operator] || aggregation_1.count,\n        dimensions: dimensions,\n        measures: measures,\n        factTable: dataSource\n    });\n    var table = transform_1.tree2Table({ dimensions: dimensions, measures: measures, cube: cube });\n    table.forEach(function (row) {\n        asFields.forEach(function (as, i) {\n            row[as] = row[measures[i]];\n        });\n    });\n    return table;\n}\nfunction createCube(_a) {\n    var type = _a.type, _b = _a.aggFunc, aggFunc = _b === void 0 ? aggregation_1.count : _b, _c = _a.factTable, factTable = _c === void 0 ? [] : _c, _d = _a.dimensions, dimensions = _d === void 0 ? [] : _d, _e = _a.measures, measures = _e === void 0 ? [] : _e;\n    switch (type) {\n        case \"period\":\n            return new index_1.periodCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        case \"moment\":\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        default:\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n    }\n}\nexports.createCube = createCube;\nexports.default = aggregate;\n__export(require(\"./utils/aggregation\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar periodCube_1 = require(\"./periodCube\");\nexports.periodCube = periodCube_1.default;\nvar momentCube_1 = require(\"./momentCube\");\nexports.momentCube = momentCube_1.default;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node(aggFunc) {\n        this.children = new Map();\n        this._rawData = [];\n        this.aggFunc = aggFunc;\n        this.cache = false;\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this._rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (measures) {\n        if (measures === void 0) { measures = []; }\n        if (!this.cache) {\n            this._aggData = this.aggFunc(this.rawData, measures);\n            this.cache = true;\n        }\n        return this._aggData;\n    };\n    Node.prototype.clearCache = function () {\n        this.cache = false;\n    };\n    Object.defineProperty(Node.prototype, \"rawData\", {\n        get: function () {\n            var e_1, _a;\n            if (!this.cache) {\n                if (this.children.size !== 0) {\n                    var children = this.children.values();\n                    var rawData = [];\n                    try {\n                        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                            var child = children_1_1.value;\n                            var i = void 0;\n                            var data = child.rawData;\n                            var len = data.length;\n                            for (i = 0; i < len; i++) {\n                                rawData.push(data[i]);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._rawData = rawData;\n                }\n                this.cache = true;\n            }\n            return this._rawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nvar periodCube = /** @class */ (function () {\n    function periodCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n    }\n    periodCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_3, _a;\n            if (level === dimensions.length) {\n                return node.aggData(measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var _b = __read(children_3_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    periodCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    periodCube.prototype.buildTree = function () {\n        var tree = new Node(this.aggFunc);\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    periodCube.prototype.insertNode = function (record, node, level) {\n        node.push(record);\n        node.cache = false;\n        if (level < this.dimensions.length) {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node(this.aggFunc));\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    periodCube.prototype.aggTree = function (node) {\n        var e_4, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_4 = __values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_a = children_4.return)) _a.call(children_4);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    periodCube.prototype.aggNode = function (node) {\n        var e_5, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_5 = __values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_a = children_5.return)) _a.call(children_5);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    return periodCube;\n}());\nexports.default = periodCube;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node() {\n        this.children = new Map();\n        this.rawData = [];\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this.rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (aggFunc, measures) {\n        if (measures === void 0) { measures = []; }\n        this._aggData = aggFunc(this.rawData, measures);\n        return this._aggData;\n    };\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_1, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var _b = __read(children_1_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar momentCube = /** @class */ (function () {\n    function momentCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n        this.buildTree();\n        this.aggTree();\n    }\n    momentCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node.aggData(aggFunc, measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    momentCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    momentCube.prototype.setData = function (props) {\n        var _a = props.aggFunc, aggFunc = _a === void 0 ? this.aggFunc : _a, _b = props.factTable, factTable = _b === void 0 ? this.factTable : _b, _c = props.dimensions, dimensions = _c === void 0 ? this.dimensions : _c, _d = props.measures, measures = _d === void 0 ? this.measures : _d;\n        if (dimensions !== this.dimensions || factTable !== this.factTable) {\n            this.dimensions = dimensions;\n            this.factTable = factTable;\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.buildTree();\n            this.aggTree();\n        }\n        else if (measures !== this.measures || aggFunc !== this.aggFunc) {\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.aggTree();\n        }\n    };\n    momentCube.prototype.buildTree = function () {\n        var tree = new Node();\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    momentCube.prototype.insertNode = function (record, node, level) {\n        if (level === this.dimensions.length) {\n            node.push(record);\n        }\n        else {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node());\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    momentCube.prototype.aggTree = function (node) {\n        var e_3, _a;\n        if (node === void 0) { node = this.tree; }\n        if (node.children.size > 0) {\n            node.rawData = [];\n            var children = node.children.values();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var child = children_3_1.value;\n                    var i = void 0;\n                    var data = this.aggTree(child).rawData;\n                    var len = data.length;\n                    for (i = 0; i < len; i++) {\n                        node.rawData.push(data[i]);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        node.aggData(this.aggFunc, this.measures);\n        return node;\n    };\n    return momentCube;\n}());\nexports.default = momentCube;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tree2Table(props) {\n    var dimensions = props.dimensions, measures = props.measures, cube = props.cube;\n    var aggFunc = cube.aggFunc;\n    var table = [];\n    function dfs(node, record, level) {\n        var e_1, _a, _b;\n        if (node.children.size === 0) {\n            var values = node._aggData;\n            table.push(__assign(__assign({}, record), values));\n            return;\n        }\n        try {\n            for (var _c = __values(node.children.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), childName = _e[0], child = _e[1];\n                var r = __assign(__assign({}, record), (_b = {}, _b[dimensions[level]] = childName, _b));\n                dfs(child, r, level + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    dfs(cube.tree, {}, 0);\n    return table;\n}\nexports.tree2Table = tree2Table;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export function chiSquared(nestTree, xSet, ySet) {\n    if (typeof nestTree === 'undefined' || typeof xSet === 'undefined' || typeof ySet === 'undefined') {\n        return 0;\n    }\n    let rowSums = new Map();\n    let colSums = new Map();\n    let totalSum = 0;\n    for (let x of xSet) {\n        rowSums.set(x, 0);\n    }\n    for (let y of ySet) {\n        colSums.set(y, 0);\n    }\n    for (let [x, node] of nestTree) {\n        for (let [y, counter] of node) {\n            rowSums.set(x, rowSums.get(x) + counter);\n            colSums.set(y, colSums.get(y) + counter);\n            totalSum += counter;\n        }\n    }\n    let chis = 0;\n    for (let [x, node] of nestTree) {\n        for (let [y, observed] of node) {\n            let expected = rowSums.get(x) * colSums.get(y) / totalSum;\n            chis += (observed - expected) ** 2 / expected;\n        }\n    }\n    return chis;\n}\nexport function crammersV(dataSource, fieldX, fieldY) {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    const V = Math.sqrt(chis / (dataSource.length * Math.min(xSet.size - 1, ySet.size - 1)));\n    return V;\n}\n/**\n * Pearson correlation coefficient\n * @param dataSource\n * @param fieldX\n * @param fieldY\n */\nexport function pearsonCC(dataSource, fieldX, fieldY) {\n    let r = 0;\n    let xBar = sum(dataSource.map(r => r[fieldX])) / dataSource.length;\n    let yBar = sum(dataSource.map(r => r[fieldY])) / dataSource.length;\n    r = sum(dataSource.map(r => (r[fieldX] - xBar) * (r[fieldY] - yBar))) /\n        Math.sqrt(sum(dataSource.map(r => Math.pow(r[fieldX] - xBar, 2))) * sum(dataSource.map(r => Math.pow(r[fieldY] - yBar, 2))));\n    return r;\n}\nfunction sum(arr) {\n    let sum = 0;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        // if (typeof dataSource[i][field])\n        sum += arr[i];\n    }\n    return sum;\n}\n// can be used for test\n// export function crammersV(dataSource: DataSource, fieldX: string, fieldY: string): number {\n//   const xSet = new Set(dataSource.map(d => d[fieldX]))\n//   const ySet = new Set(dataSource.map(d => d[fieldY]))\n//   const xMembers = [...xSet];\n//   const yMembers = [...ySet];\n//   let xDict = {};\n//   let yDict = {};\n//   for (let i = 0; i < xMembers.length; i++) {\n//     xDict[xMembers[i]] = i;\n//   }\n//   for (let i = 0; i < yMembers.length; i++) {\n//     yDict[yMembers[i]] = i;\n//   }\n//   // let matrix: number[][] = xMembers.map(x => yMembers.map(y => 0));\n//   let matrix: number[][] = [];\n//   for (let  i = 0; i < xMembers.length; i++) {\n//     matrix.push([]);\n//     for (let j = 0; j < yMembers.length; j++) {\n//       matrix[i].push(0);\n//     }\n//   }\n//   for (let record of dataSource) {\n//     matrix[xDict[record[fieldX]]][yDict[record[fieldY]]]++;\n//   }\n//   const chis = chiSquared(matrix);\n//   const V = Math.sqrt(chis / (dataSource.length * Math.min(xMembers.length - 1, yMembers.length - 1)))\n//   return V;\n// }\n// export function chiSquared(matrix: number[][] = [[]]): number {\n//   let rowSums = matrix.map(m => 0);\n//   let colSums = matrix[0].map(m => 0);\n//   let totalSum = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       rowSums[i] += matrix[i][j];\n//       colSums[j] += matrix[i][j];\n//       totalSum += matrix[i][j];\n//     }\n//   }\n//   let chis = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       let observed = matrix[i][j];\n//       let expected = rowSums[i] * colSums[j] / totalSum;\n//       chis += (observed - expected) ** 2 / expected;\n//     }\n//   }\n//   return chis;\n// }\n","export function linearMapPositive(arr) {\n    let min = Math.min(...arr);\n    return arr.map(a => a - min + 1);\n}\nexport function getCombination(elements, start = 1, end = elements.length) {\n    let ans = [];\n    const combine = (step, set, size) => {\n        if (set.length === size) {\n            ans.push([...set]);\n            return;\n        }\n        if (step >= elements.length) {\n            return;\n        }\n        combine(step + 1, [...set, elements[step]], size);\n        combine(step + 1, set, size);\n    };\n    for (let i = start; i <= end; i++) {\n        combine(0, [], i);\n    }\n    return ans;\n}\nexport function normalize(frequencyList) {\n    let sum = 0;\n    for (let f of frequencyList) {\n        sum += f;\n    }\n    return frequencyList.map(f => f / sum);\n}\nexport const entropy = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * Math.log2(p);\n    }\n    return -sum;\n};\nexport const gini = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * (1 - p);\n    }\n    return sum;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class oneDLinearRegression {\n    constructor(dataSource, X, Y) {\n        this.dataSource = dataSource;\n        this.X = X;\n        this.Y = Y;\n        this.normalizedDataSource = dataSource;\n    }\n    normalizeDimensions(dimensions) {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.dataSource.forEach(record => {\n            dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record, dimensions);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record, dimensions) {\n        let normalizedRecord = {};\n        Object.keys(record).forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    mean() {\n        let meanX = 0;\n        let meanY = 0;\n        if (this.normalizedDataSource.length === 0)\n            return [meanX, meanY];\n        this.normalizedDataSource.forEach((record, index) => {\n            meanX += record[this.X];\n            meanY += record[this.Y];\n        });\n        meanX /= this.normalizedDataSource.length;\n        meanY /= this.normalizedDataSource.length;\n        return [meanX, meanY];\n    }\n    getRegressionEquation() {\n        if (this.normalizedDataSource.length === 0)\n            return [0, 0];\n        const [meanX, meanY] = this.mean();\n        let beta = 0;\n        let alpha = 0;\n        let numerator = 0;\n        let denominator = 0;\n        this.normalizedDataSource.forEach(record => {\n            numerator += (record[this.X] - meanX) * (record[this.Y] - meanY);\n            denominator += (record[this.X] - meanX) ** 2;\n        });\n        beta = numerator / denominator;\n        alpha = meanY - meanX * beta;\n        return [alpha, beta];\n    }\n    r_squared() {\n        const [, meanY] = this.mean();\n        const [alpha, beta] = this.getRegressionEquation();\n        let SSR = 0;\n        let SST = 0;\n        this.normalizedDataSource.forEach(record => {\n            let x = record[this.X];\n            let y = record[this.Y];\n            let yHat = x * beta + alpha;\n            SSR += (yHat - meanY) ** 2;\n            SST += (y - meanY) ** 2;\n        });\n        return SSR / SST;\n    }\n    cumulativeLogisticDistribution(x) {\n        const lambda = 2;\n        const mu = 0.2;\n        return 1 / (1 + Math.pow(Math.E, -(x - mu) / lambda));\n    }\n    pValue() {\n        const [, beta] = this.getRegressionEquation();\n        return 2 * (1 - this.cumulativeLogisticDistribution(Math.abs(beta)));\n    }\n    significance() {\n        let r_squared = this.r_squared();\n        let p_value = this.pValue();\n        return r_squared * (1 - p_value);\n    }\n}\n","export const TopKSingleField = 6;\nexport const TopKView = 15;\nexport const Depth = 4;\nexport const VisualLimit = 8;\nexport const TopKPercentField = 0.8;\nexport const CrammersVThreshold = 0.3;\nexport const PearsonCorrelation = {\n    strong: 0.5,\n    weak: 0.3\n};\n","/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n    // only for the special matrix here(corelational matrix)\n    let edges = [];\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++) {\n            edges.push([[i, j], Math.abs(matrix[i][j])]);\n        }\n    }\n    return edges;\n}\nfunction find(parents, n) {\n    return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\nfunction union(parents, n1, n2) {\n    let p1 = find(parents, n1);\n    let p2 = find(parents, n2);\n    parents[p1] = p2;\n    // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n    // may check and prove whether it's necessary.\n    find(parents, n1);\n    find(parents, n2);\n}\nfunction findWithEffect(parents, sizes, n) {\n    if (parents[n] === n) {\n        return n;\n    }\n    parents[n] = findWithEffect(parents, sizes, parents[n]);\n    sizes[n] = sizes[parents[n]];\n    return parents[n];\n}\nfunction unionWithEffect(parents, sizes, n1, n2) {\n    let p1 = findWithEffect(parents, sizes, n1);\n    let p2 = findWithEffect(parents, sizes, n2);\n    let size1 = sizes[p1];\n    let size2 = sizes[p2];\n    parents[p1] = p2;\n    sizes[p1] = sizes[p2] = size1 + size2;\n    findWithEffect(parents, sizes, n1);\n    findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\nfunction kruskal(matrix, groupNumber, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\n// todo: delete kruskal with limit size, use largest size to limit it(uncontrolled group number but better), need discuss.\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\nfunction kruskalWithLimitSize(matrix, limitSize) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\nexport function kruskalMSTWithLimitSize(matrix, limitSize = 4) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    const cloneParents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n                    edgesInMST.push([edge[0], edge[1], true]);\n                    union(cloneParents, edge[0][0], edge[0][1]);\n                }\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], false]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n            cloneParents[i] = find(cloneParents, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups: parents };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\nexport function kruskalMST(matrix, groupNumber = 4, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    let groups = [...parents];\n    let inCutEdge = false;\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], inCutEdge]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        // TODO:\n        // + use kruskalMST instead of kruskal.\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            inCutEdge = true;\n        }\n        else {\n            groups = [...parents];\n        }\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups };\n}\nfunction cluster({ matrix, measures, method = 'kruskal', groupMaxSize = 4, limitSize = false, threshold = 0 }) {\n    // const groups = kruskal({ matrix, groupMaxSize });\n    let groups;\n    if (limitSize) {\n        groups = kruskalWithLimitSize(matrix, groupMaxSize);\n    }\n    else {\n        groups = kruskal(matrix, groupMaxSize, threshold);\n    }\n    let ans = [];\n    for (let meas of groups.values()) {\n        ans.push(meas.map(meaIndex => measures[meaIndex]));\n    }\n    return ans;\n}\nexport default cluster;\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","class Base {\n    constructor(props) {\n        const { dataSource, dimensions, measures } = props;\n        this.dataSource = dataSource;\n        this.dimensions = dimensions;\n        this.measures = measures;\n    }\n    normalize() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.valueParser = [];\n        this.ranges = [];\n        this.dimensions.forEach(dim => {\n            this.valueSets.push(new Map());\n            this.valueParser.push([]);\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                    this.valueParser[index].push(value);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach((mea, index) => {\n            normalizedRecord[mea] = (record[mea] - this.ranges[index][0]) / (this.ranges[index][1] - this.ranges[index][0]);\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n}\nexport class KNN extends Base {\n    constructor(props) {\n        super(props);\n        const { K } = props;\n        this.K = K;\n        this.normalize();\n    }\n    getNeighbors(targetRecord, features, weights = []) {\n        if (weights.length !== features.length) {\n            features.forEach(f => {\n                weights.push(1);\n            });\n        }\n        // let normalizedRecord = this.normalizeRecord(targetRecord);\n        let dimFeatures = [];\n        let meaFeatures = [];\n        let dimWeights = [];\n        let meaWeights = [];\n        let dimSets = new Set(this.dimensions);\n        for (let i = 0; i < features.length; i++) {\n            if (dimSets.has(features[i])) {\n                dimFeatures.push(features[i]);\n                dimWeights.push(weights[i]);\n            }\n            else {\n                meaFeatures.push(features[i]);\n                meaWeights.push(weights[i]);\n            }\n        }\n        // let legalFeatures = features.filter(f => this.measures.includes(f));\n        let distances = [];\n        this.normalizedDataSource.forEach((record, rIndex) => {\n            let dis = 0;\n            meaFeatures.forEach((feature, index) => {\n                dis += ((record[feature] - targetRecord[feature]) * meaWeights[index]) ** 2;\n            });\n            dimFeatures.forEach((feature, index) => {\n                if (record[feature] !== targetRecord[feature]) {\n                    dis += dimWeights[index] ** 2;\n                }\n            });\n            distances.push({\n                dis,\n                index: rIndex\n            });\n        });\n        distances.sort((a, b) => {\n            return a.dis - b.dis;\n        });\n        let ans = [];\n        let len = Math.min(this.K, distances.length);\n        for (let i = 0; i < len; i++) {\n            ans.push(this.normalizedDataSource[distances[i].index]);\n        }\n        return ans;\n    }\n    getTargetValue(targets, neighbors) {\n        let ans = [];\n        targets.forEach(tar => {\n            let votes = new Map();\n            neighbors.forEach(nei => {\n                if (!votes.has(nei[tar])) {\n                    votes.set(nei[tar], 0);\n                }\n                votes.set(nei[tar], votes.get(nei[tar]) + 1);\n            });\n            let mostCount = 0;\n            let mostFeature = 0;\n            for (let vote of votes) {\n                if (vote[1] > mostCount) {\n                    mostCount = vote[1];\n                    mostFeature = vote[0];\n                }\n            }\n            let dimIndex = this.dimensions.indexOf(tar);\n            if (dimIndex > -1) {\n                ans.push(this.valueParser[dimIndex][mostFeature]);\n            }\n            else {\n                ans.push(mostFeature);\n            }\n        });\n        return ans;\n    }\n}\n","/**\n * todo reservoir sampling is better to support stream data\n * Algorithm R:\n * Vitter, Jeffrey S. (1 March 1985). \"Random sampling with a reservoir\" (PDF). ACM Transactions on Mathematical Software. 11 (1): 37–57. CiteSeerX 10.1.1.138.784. doi:10.1145/3147.3165.\n */\nexport function reservoirSampling(dataSource, size = 500) {\n    if (dataSource.length <= size)\n        return dataSource;\n    let sampleSpace = dataSource.slice(0, size);\n    let len = dataSource.length;\n    for (let i = size + 1; i < len; i++) {\n        let pos = Math.round(Math.random() * i);\n        if (pos < size) {\n            sampleSpace[pos] = dataSource[i];\n        }\n    }\n    return sampleSpace;\n}\nfunction linearCongruentialGenerator(size, seed) {\n    if (size === 0)\n        return [];\n    const m = 2147483647;\n    const a = 1103515245;\n    const c = 12345;\n    let ans = [seed];\n    for (let i = 1; i < size; i++) {\n        ans.push(((ans[i - 1] * a + c) % m));\n    }\n    return ans.map(v => v / m);\n}\nexport function uniformSampling(dataSource, size) {\n    let sampleIndexes = linearCongruentialGenerator(size, Math.random() * 2147483647);\n    let ans = [];\n    for (let i = 0; i < size; i++) {\n        let index = Math.floor(sampleIndexes[i] * size) % size;\n        ans.push(dataSource[index]);\n    }\n    return ans;\n}\n","import { uniformSampling } from \"../../sampling\";\nexport class IsolationForest {\n    constructor(dimensions, measures, dataSource, treeNumber = 100, Psi = 256) {\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.dataSource = dataSource;\n        if (dataSource.length < Psi) {\n            this.treeNumber = Math.max(1, Math.ceil(Psi / 50));\n            this.sampleSize = Math.max(2, Math.floor(dataSource.length / 2));\n        }\n        else {\n            this.treeNumber = treeNumber;\n            this.sampleSize = Psi;\n        }\n        this.limitHeight = Math.ceil(Math.log2(this.sampleSize));\n        this.iForest = [];\n        this.normalizeDimensions();\n    }\n    normalizeDimensions() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.ranges = [];\n        this.dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    buildIsolationTree(normalizedSampleData, depth) {\n        if (depth >= this.limitHeight || normalizedSampleData.length <= 1) {\n            return null;\n        }\n        else {\n            let rand = Math.random();\n            let randField = this.measures[0] || this.dimensions[0];\n            let dimLength = this.dimensions.length;\n            let meaLength = this.measures.length;\n            let randValue = 0;\n            if (rand >= dimLength / (dimLength + meaLength)) {\n                let index = Math.floor(Math.random() * meaLength) % meaLength;\n                randField = this.measures[index];\n                randValue = this.ranges[index][0] + (this.ranges[index][1] - this.ranges[index][0]) * Math.random();\n            }\n            else {\n                let index = Math.floor(Math.random() * dimLength) % dimLength;\n                randField = this.dimensions[index];\n                randValue = Math.floor(this.valueSets[index].size * Math.random()) % this.valueSets[index].size;\n            }\n            // random in range not in distribution.\n            // let randValue = normalizedSampleData[Math.floor(Math.random() * normalizedSampleData.length) % normalizedSampleData.length][randField];\n            let leftSubData = [];\n            let rightSubData = [];\n            for (let record of normalizedSampleData) {\n                if (record[randField] < randValue) {\n                    leftSubData.push(record);\n                }\n                else {\n                    rightSubData.push(record);\n                }\n            }\n            let node = {\n                field: randField,\n                value: randValue,\n                size: normalizedSampleData.length\n            };\n            node.left = this.buildIsolationTree(leftSubData, depth + 1);\n            node.right = this.buildIsolationTree(rightSubData, depth + 1);\n            return node;\n        }\n    }\n    /**\n     * average unsuccessful searches in BST (Preiss, 1999)\n     * @param Psi\n     */\n    AFS(Psi) {\n        if (Psi > 2)\n            return 2 * (Math.log(Psi - 1) + Math.E) - 2 * (Psi - 1) / Psi;\n        if (Psi === 2)\n            return 1;\n        return 0;\n    }\n    getPathLength(record, iTree, pathLength, nodeSize) {\n        if (iTree === null) {\n            return pathLength + this.AFS(nodeSize);\n        }\n        let value = record[iTree.field];\n        if (value < iTree.value) {\n            return this.getPathLength(record, iTree.left, pathLength + 1, iTree.size);\n        }\n        else {\n            return this.getPathLength(record, iTree.right, pathLength + 1, iTree.size);\n        }\n    }\n    buildIsolationForest() {\n        this.iForest = [];\n        for (let i = 0; i < this.treeNumber; i++) {\n            let samples = uniformSampling(this.normalizedDataSource, this.sampleSize);\n            let iTree = this.buildIsolationTree(samples, 0);\n            this.iForest.push(iTree);\n        }\n        return this.iForest;\n    }\n    // public evaluate (record: Record): number {\n    // }\n    estimateOutierScore() {\n        this.recordScoreList = [];\n        this.normalizedDataSource.forEach(record => {\n            let recordScore = 0;\n            let avgPathLength = 0;\n            this.iForest.forEach(iTree => {\n                avgPathLength += this.getPathLength(record, iTree, 0, this.sampleSize);\n            });\n            avgPathLength /= this.iForest.length;\n            recordScore = Math.pow(2, -(avgPathLength / this.AFS(this.sampleSize)));\n            this.recordScoreList.push(recordScore);\n        });\n        return this.recordScoreList;\n    }\n}\n","import * as Cluster from './cluster/index';\nimport { KNN } from './classification/knn';\nimport { IsolationForest } from './outlier/isolationForest';\nconst Outier = {\n    IsolationForest\n};\nconst Classification = {\n    KNN\n};\nexport { Cluster, Outier, Classification };\n","export const CHANNEL = {\n    maxDimensionNumber: 8,\n    maxMeasureNumber: 6\n};\n","import { crammersV, getCombination, pearsonCC } from '../statistics/index';\nimport { CrammersVThreshold, PearsonCorrelation } from './config';\nimport { Cluster } from '../ml/index';\nimport { CHANNEL } from '../constant';\n// insights like outlier and trend both request high impurity of dimension.\nfunction getDimCorrelationMatrix(dataSource, dimensions) {\n    let matrix = dimensions.map(d => dimensions.map(d => 0));\n    for (let i = 0; i < dimensions.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < dimensions.length; j++) {\n            matrix[i][j] = matrix[j][i] = crammersV(dataSource, dimensions[i], dimensions[j]);\n        }\n    }\n    return matrix;\n}\nfunction getMeaCorrelationMatrix(dataSource, measures) {\n    let matrix = measures.map(i => measures.map(j => 0));\n    for (let i = 0; i < measures.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < measures.length; j++) {\n            let r = pearsonCC(dataSource, measures[i], measures[j]);\n            matrix[j][i] = matrix[i][j] = r;\n        }\n    }\n    return matrix;\n}\nexport function getDimClusterGroups(dataSource, dimensions) {\n    const maxDimNumberInView = 4;\n    let dimCorrelationMatrix = getDimCorrelationMatrix(dataSource, dimensions);\n    // groupMaxSize here means group number.\n    let groups = Cluster.kruskal({\n        matrix: dimCorrelationMatrix,\n        measures: dimensions,\n        groupMaxSize: Math.round(dimensions.length / maxDimNumberInView),\n        threshold: CrammersVThreshold\n    });\n    return groups;\n}\nexport function getDimSetsBasedOnClusterGroups(dataSource, dimensions) {\n    let dimSets = [];\n    let groups = getDimClusterGroups(dataSource, dimensions);\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nexport function getMeaSetsBasedOnClusterGroups(dataSource, measures, maxFieldNumberInView = 3) {\n    let correlationMatrix = getMeaCorrelationMatrix(dataSource, measures);\n    let groups = Cluster.kruskal({\n        matrix: correlationMatrix,\n        measures: measures,\n        groupMaxSize: Math.round(measures.length / maxFieldNumberInView),\n        threshold: PearsonCorrelation.strong\n    });\n    return groups;\n}\nexport function subspaceSearching(dataSource, dimensions, shouldDimensionsCorrelated = true) {\n    if (shouldDimensionsCorrelated) {\n        return getDimSetsBasedOnClusterGroups(dataSource, dimensions);\n    }\n    else {\n        return getCombination(dimensions);\n    }\n}\n","import { KNN } from \"../../ml/classification/knn\";\nexport class GroupIntention extends KNN {\n    getTargetValuePercent(targets, targetRecord, neighbors) {\n        let ans = [];\n        targets.forEach((target, index) => {\n            let sameCount = 0;\n            neighbors.forEach(nei => {\n                if (nei[target] === targetRecord[target]) {\n                    sameCount++;\n                }\n            });\n            ans.push(sameCount / neighbors.length);\n        });\n        return ans;\n    }\n    getSignificance(features, targets) {\n        let ans = 0;\n        this.normalizedDataSource.forEach(record => {\n            let neighbors = this.getNeighbors(record, features);\n            let percents = this.getTargetValuePercent(targets, record, neighbors);\n            let sig = 0;\n            percents.forEach(per => {\n                sig += per;\n            });\n            sig /= percents.length;\n            ans += sig;\n        });\n        ans /= this.normalizedDataSource.length;\n        return ans;\n    }\n}\n","import { getMeaSetsBasedOnClusterGroups, getDimClusterGroups } from './subspaces';\nimport { Outier } from '../ml/index';\nimport { getCombination, linearMapPositive } from '../statistics/index';\nimport { CHANNEL } from '../constant';\nimport { entropy, normalize } from '../statistics/index';\nimport aggregate from 'cube-core';\nimport { isFieldUnique } from '../utils/common';\nimport { oneDLinearRegression } from '../statistics/index';\nimport { GroupIntention } from \"./intention/groups\";\nconst SPLITER = '=;=';\nfunction crossGroups(dimensionGroups, measureGroups) {\n    let viewSpaces = [];\n    for (let dimensions of dimensionGroups) {\n        for (let measures of measureGroups) {\n            viewSpaces.push({\n                dimensions,\n                measures\n            });\n        }\n    }\n    return viewSpaces;\n}\nfunction getDimSetsFromClusterGroups(groups) {\n    let dimSets = [];\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nexport function getIntentionSpaces(cubePool, viewSpaces) {\n    let ansSpace = [];\n    for (let space of viewSpaces) {\n        const { dimensions, measures } = space;\n        let key = dimensions.join(SPLITER);\n        if (cubePool.has(key)) {\n            let aggData = cubePool.get(key);\n            let generalSpace = getGeneralIntentionSpace(aggData, dimensions, measures);\n            let outlierSpace = getOutlierIntentionSpace(aggData, dimensions, measures);\n            outlierSpace.impurity = generalSpace.impurity;\n            let groupSpace = getGroupIntentionSpace(aggData, dimensions, measures);\n            groupSpace.impurity = generalSpace.impurity;\n            ansSpace.push(generalSpace, outlierSpace, groupSpace);\n            if (dimensions.length === 1) {\n                let trendSpace = getTrendIntentionSpace(aggData, dimensions, measures);\n                trendSpace.impurity = generalSpace.impurity;\n                ansSpace.push(trendSpace);\n            }\n        }\n    }\n    return ansSpace;\n}\nexport function getGeneralIntentionSpace(aggData, dimensions, measures) {\n    let score = 0;\n    let significance = 0;\n    for (let mea of measures) {\n        let fL = aggData.map(r => r[mea]);\n        let pL = normalize(linearMapPositive(fL));\n        let value = entropy(pL);\n        score += value;\n        significance += value / Math.log2(fL.length);\n    }\n    score /= measures.length;\n    significance /= measures.length;\n    significance = 1 - significance;\n    return {\n        dimensions,\n        measures,\n        type: 'general',\n        score,\n        impurity: score,\n        significance,\n        order: 'asc'\n    };\n}\nexport function getOutlierIntentionSpace(aggData, dimensions, measures) {\n    let iForest = new Outier.IsolationForest([], measures, aggData);\n    iForest.buildIsolationForest();\n    let scoreList = iForest.estimateOutierScore();\n    let maxIndex = 0;\n    let score = 0;\n    for (let i = 0; i < scoreList.length; i++) {\n        if (scoreList[i] > score) {\n            score = scoreList[i];\n            maxIndex = i;\n        }\n    }\n    let des = {};\n    dimensions.concat(measures).forEach(mea => { des[mea] = aggData[maxIndex][mea]; });\n    return {\n        dimensions,\n        measures,\n        type: 'outlier',\n        score,\n        significance: score,\n        order: 'desc',\n        description: des\n    };\n}\nexport function getTrendIntentionSpace(aggData, dimensions, measures) {\n    let orderedData = [...aggData];\n    orderedData.sort((a, b) => {\n        if (a[dimensions[0]] > b[dimensions[0]])\n            return 1;\n        if (a[dimensions[0]] === b[dimensions[0]])\n            return 0;\n        if (a[dimensions[0]] < b[dimensions[0]])\n            return -1;\n    });\n    let score = 0;\n    for (let mea of measures) {\n        let linearModel = new oneDLinearRegression(orderedData, dimensions[0], mea);\n        linearModel.normalizeDimensions(dimensions);\n        score += linearModel.significance();\n    }\n    score /= measures.length;\n    return {\n        dimensions,\n        measures,\n        type: 'trend',\n        score,\n        significance: score,\n        order: 'desc'\n    };\n}\nexport function getGroupIntentionSpace(aggData, dimensions, measures) {\n    let score = 0;\n    let groupIntention = new GroupIntention({\n        dataSource: aggData,\n        dimensions,\n        measures,\n        K: 8\n    });\n    score = groupIntention.getSignificance(measures.concat(dimensions.slice(0, -1)), dimensions.slice(-1));\n    return {\n        dimensions,\n        measures,\n        type: 'group',\n        score,\n        significance: score,\n        order: 'desc'\n    };\n}\nexport function getVisSpaces(dataSource, dimensions, measures) {\n    // 1. get dimension cluster groups.\n    // 2. get measure cluster groups.\n    // 3. get dimension groups * measure groups = subspaces + aggregate\n    // 4. calculate each subspace intention score (entropy, outlier, trend for temporal & oridinal field)\n    // 5. filter each intend subspaces with threadshold\n    // 6.manage those spaces / order them.\n    let visableDimensions = dimensions.filter(dim => isFieldUnique(dataSource, dim));\n    let dimensionGroups = getDimClusterGroups(dataSource, visableDimensions);\n    let dimensionSets = getDimSetsFromClusterGroups(dimensionGroups);\n    let measureGroups = getMeaSetsBasedOnClusterGroups(dataSource, measures);\n    let viewSpaces = crossGroups(dimensionSets, measureGroups);\n    let cubePool = new Map();\n    for (let group of dimensionGroups) {\n        let key = group.join(SPLITER);\n        let aggData = aggregate({\n            dataSource,\n            dimensions: group,\n            measures,\n            asFields: measures,\n            operator: 'sum'\n        });\n        cubePool.set(key, aggData);\n    }\n    cubePool.set('*', dataSource);\n    let ansSpace = getIntentionSpaces(cubePool, viewSpaces);\n    return ansSpace;\n}\n","const JOIN_SYMBOL = '_';\nconst MAGIC_NUMBER = 5;\nfunction deepcopy(data) {\n    return JSON.parse(JSON.stringify(data));\n}\nfunction isFieldCategory(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'string'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldContinous(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'number'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldNumeric(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return !isNaN(record[fieldName])\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldTime(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return (!isNaN(Date.parse(record[fieldName]))\n            && typeof record[fieldName] === 'string'\n            && /^[0-9]{0,4}[-/][0-9]{0,2}([-/][0-9]{0,2}$)?/.test(record[fieldName]))\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction aggregate({ dataSource, fields, bys, method = 'sum' }) {\n    let tmp = [];\n    for (let by of bys) {\n        let map = new Map();\n        for (let record of dataSource) {\n            let key = JSON.stringify(fields.map(field => record[field]));\n            if (!map.has(key)) {\n                map.set(key, 0);\n            }\n            map.set(key, map.get(key) + record[by]);\n        }\n        for (let [key, value] of map) {\n            let row = {\n                index: key,\n                [by]: value\n            };\n            let dims = JSON.parse(key);\n            for (let i = 0; i < fields.length; i++) {\n                row[fields[i]] = dims[i];\n            }\n            tmp.push(row);\n        }\n    }\n    let ans = new Map();\n    for (let record of tmp) {\n        if (!ans.has(record.index)) {\n            ans.set(record.index, {});\n        }\n        ans.set(record.index, { ...ans.get(record.index), ...record });\n    }\n    return [...ans.values()];\n}\nfunction memberCount(dataSource, field) {\n    const counter = new Map();\n    for (let row of dataSource) {\n        let member = row[field];\n        if (!counter.has(member)) {\n            counter.set(member, 0);\n        }\n        counter.set(member, counter.get(member) + 1);\n    }\n    return [...counter.entries()];\n}\nfunction groupContinousField({ dataSource, field, newField = `${field}(con-group)`, groupNumber }) {\n    // const members = memberCount(dataSource, field);\n    // todo: outlier detection\n    const values = dataSource.map(item => item[field]);\n    const max = Math.max(...values); // Number.EPSILON * ;\n    const min = Math.min(...values);\n    const segWidth = (max - min) / groupNumber;\n    let ranges = [];\n    for (let i = 0; i < groupNumber; i++) {\n        let left = min + i * segWidth;\n        let right = min + (i + 1) * segWidth;\n        ranges.push([left, right]);\n    }\n    ranges[0][0] = -Infinity;\n    ranges[ranges.length - 1][1] = Infinity;\n    let precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n    for (let i = 0; i < dataSource.length; i++) {\n        let record = dataSource[i];\n        let rangeIndex = ranges.findIndex(r => (r[0] <= record[field] && record[field] < r[1]));\n        let range = ranges[rangeIndex];\n        if (typeof range !== 'undefined') {\n            record[newField] = `${rangeIndex + 1}:[${Number(range[0].toPrecision(precision))}, ${Number(range[1].toPrecision(precision))})`;\n        }\n        else {\n            record[newField] = 'null';\n        }\n    }\n    return dataSource;\n}\nfunction groupCategoryField({ dataSource, field, newField = `${field}(cat-group)`, groupNumber }) {\n    // auto category should obey Power law distrubution.\n    let members = memberCount(dataSource, field);\n    members.sort((a, b) => b[1] - a[1]);\n    let sum = members.map(v => v[1]);\n    groupNumber = members.length;\n    for (let i = sum.length - 2; i >= 0; i--) {\n        sum[i] = sum[i + 1] + sum[i];\n    }\n    for (let i = 0; i < members.length - 2; i++) {\n        // strict mode\n        // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n        if (members[i][1] * MAGIC_NUMBER >= sum[i + 1] && members[i + 1][1] / MAGIC_NUMBER < sum[i + 2]) {\n            groupNumber = i + 2;\n            break;\n        }\n    }\n    // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n    if (groupNumber === members.length) {\n        return dataSource.map(record => {\n            return {\n                ...record,\n                [newField]: record[field]\n            };\n        });\n    }\n    let set = new Set();\n    for (let i = groupNumber - 1; i < members.length; i++) {\n        set.add(members[i][0]);\n    }\n    for (let record of dataSource) {\n        if (set.has(record[field])) {\n            record[newField] = 'others';\n        }\n        else {\n            record[newField] = record[field];\n        }\n    }\n    return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\nfunction DKL(p1List, p2List) {\n    let sum = 0;\n    const len = Math.max(p1List.length, p2List.length);\n    for (let i = 0; i < len; i++) {\n        let p1 = p1List[i] || 0;\n        let p2 = p2List[i] || 0;\n        sum += p1 * Math.log2(p1 / p2);\n    }\n    return sum;\n}\nfunction isFieldUnique(dataSource, field) {\n    let set = new Set();\n    let validCount = 0;\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        if (dataSource[i][field] !== undefined && dataSource[i][field] !== null && dataSource[i][field] === '') {\n            validCount++;\n            set.add(dataSource[i][field]);\n        }\n    }\n    if (set.size === validCount)\n        return true;\n    return false;\n}\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL, isFieldUnique };\n","/**\n * \n * @param {task} task is a function \n */\nexport function timer (task) {\n  return function (e) {\n    let startTime = new Date().getTime();\n    try {\n      task(e);\n    } finally {\n      let cost = new Date().getTime() - startTime;\n      console.log(`Task [${task.name}] cost ${cost} ms.`)\n    }\n  }\n}","/* eslint no-restricted-globals: 0 */\nimport { getVisSpaces } from 'visual-insights/build/esm/insights/dev';\nimport { timer } from './timer';\n\nconst generateDashBoard = (e) => {\n  const { dataSource, dimensions, measures } = e.data;\n  try {\n    let ansSpace = getVisSpaces(dataSource, dimensions, measures);\n    ansSpace.sort((a, b) => (a.impurity / a.significance) - (b.impurity / b.significance));\n    self.postMessage({\n      success: true,\n      data: ansSpace\n    })\n  } catch (error) {\n    self.postMessage({\n      success: false,\n      message: error\n    })\n  }\n}\n\nself.addEventListener('message', timer(generateDashBoard), false);"],"sourceRoot":""}