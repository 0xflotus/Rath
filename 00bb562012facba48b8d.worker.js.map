{"version":3,"sources":["../webpack/bootstrap","../../../node_modules/cube-core/built/index.js","../../../node_modules/cube-core/built/utils/aggregation.js","../../../node_modules/cube-core/built/core/index.js","../../../node_modules/cube-core/built/core/periodCube.js","../../../node_modules/cube-core/built/core/momentCube.js","../../../node_modules/cube-core/built/utils/transform.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../visual-insights/build/esm/utils/common.js","../../visual-insights/build/esm/distribution.js","../../visual-insights/build/esm/statistics/utils.js","../../visual-insights/build/esm/ml/cluster/kruskal.js","../../visual-insights/build/esm/univariateSummary/index.js","workers/timer.js","workers/groupFields.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","__assign","index_1","require","transform_1","aggregation_1","operatorMap","sum_unsafe","mean","count","createCube","_a","type","_b","aggFunc","_c","factTable","_d","dimensions","_e","measures","periodCube","momentCube","default","props","asFields","operator","dataSource","cube","table","tree2Table","forEach","row","as","__export","subset","sums","mea","_loop_1","len","length","sum","_loop_2","Number","MEASURES","cnts","_loop_3","periodCube_1","momentCube_1","__read","iterator","e","ar","next","done","push","error","__spread","arguments","concat","__values","TypeError","Node","children","Map","_rawData","cache","params","_i","apply","aggData","_aggData","rawData","clearCache","e_1","size","values","children_1","children_1_1","child","data","e_1_1","return","configurable","getNode","search","node","level","e_2","entries","children_2","children_2_1","childName","e_2_1","tree","e_3","children_3","children_3_1","e_3_1","buildTree","insertNode","record","member","has","set","aggTree","e_4","children_4","children_4_1","e_4_1","aggNode","e_5","children_5","children_5_1","e_5_1","setData","assign","dfs","_defineProperty","obj","writable","_toConsumableArray","arr","Array","isArray","arr2","iter","toString","from","deepcopy","JSON","parse","stringify","memberCount","field","counter","groupContinousField","newField","groupNumber","map","item","max","Math","min","segWidth","ranges","left","right","Infinity","precision","log10","abs","rangeIndex","findIndex","range","toPrecision","groupCategoryField","members","sort","a","b","v","Set","add","isUniformDistribution","every","normalize","frequencyList","f","entropy","probabilityList","log2","turnAdjMatrix2List","matrix","edges","j","find","parents","union","n1","n2","p1","p2","findWithEffect","sizes","unionWithEffect","size1","size2","kruskalMST","threshold","edgesInMST","groups","inCutEdge","edge","cluster","method","groupMaxSize","limitSize","kruskalWithLimitSize","kruskal","ans","meas","meaIndex","getFieldType","fieldName","isNaN","Date","test","isFieldTime","isFieldContinous","isFieldCategory","getAllFieldTypes","fields","fieldsWithType","getFieldDistribution","memberName","getAllFieldsDistribution","fieldsDistribution","distribution","getFieldEntropy","maxEntropy","getAllFieldsEntropy","fieldEntropyList","groupFields","groupedData","newFields","newFieldName","MIN_QUAN_MEMBER_SIZE","task","self","addEventListener","result","postMessage","success","message","startTime","getTime","cost","console","log"],"mappings":"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","file":"00bb562012facba48b8d.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./core/index\");\n// import { JsonRecord } from './types';\nvar transform_1 = require(\"./utils/transform\");\nvar aggregation_1 = require(\"./utils/aggregation\");\nvar operatorMap = {\n    'sum': aggregation_1.sum_unsafe,\n    'mean': aggregation_1.mean,\n    'count': aggregation_1.count,\n};\nfunction copyDataSource(data) {\n    return data.map(function (row) {\n        return __assign({}, row);\n    });\n}\nfunction aggregate(props) {\n    var dimensions = props.dimensions, measures = props.measures, asFields = props.asFields, operator = props.operator, dataSource = props.dataSource;\n    var data = [];\n    var cube = createCube({\n        type: 'moment',\n        aggFunc: operatorMap[operator] || aggregation_1.count,\n        dimensions: dimensions,\n        measures: measures,\n        factTable: dataSource\n    });\n    var table = transform_1.tree2Table({ dimensions: dimensions, measures: measures, cube: cube });\n    table.forEach(function (row) {\n        asFields.forEach(function (as, i) {\n            row[as] = row[measures[i]];\n        });\n    });\n    return table;\n}\nfunction createCube(_a) {\n    var type = _a.type, _b = _a.aggFunc, aggFunc = _b === void 0 ? aggregation_1.count : _b, _c = _a.factTable, factTable = _c === void 0 ? [] : _c, _d = _a.dimensions, dimensions = _d === void 0 ? [] : _d, _e = _a.measures, measures = _e === void 0 ? [] : _e;\n    switch (type) {\n        case \"period\":\n            return new index_1.periodCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        case \"moment\":\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        default:\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n    }\n}\nexports.createCube = createCube;\nexports.default = aggregate;\n__export(require(\"./utils/aggregation\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sum_unsafe = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_1 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += subset[i][mea];\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_1(i, len);\n    }\n    return sums;\n};\nexports.sum = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_2 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_2(i, len);\n    }\n    return sums;\n};\nexports.count = function (subset, MEASURES) {\n    var cnts = {};\n    MEASURES.forEach(function (mea) {\n        cnts[mea] = 0;\n    });\n    for (var i = 0, len = subset.length; i < len; i++) {\n        MEASURES.forEach(function (mea) {\n            cnts[mea]++;\n        });\n    }\n    return cnts;\n};\nexports.mean = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_3 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_3(i, len);\n    }\n    measures.forEach(function (mea) {\n        sums[mea] /= subset.length;\n    });\n    return sums;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar periodCube_1 = require(\"./periodCube\");\nexports.periodCube = periodCube_1.default;\nvar momentCube_1 = require(\"./momentCube\");\nexports.momentCube = momentCube_1.default;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node(aggFunc) {\n        this.children = new Map();\n        this._rawData = [];\n        this.aggFunc = aggFunc;\n        this.cache = false;\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this._rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (measures) {\n        if (measures === void 0) { measures = []; }\n        if (!this.cache) {\n            this._aggData = this.aggFunc(this.rawData, measures);\n            this.cache = true;\n        }\n        return this._aggData;\n    };\n    Node.prototype.clearCache = function () {\n        this.cache = false;\n    };\n    Object.defineProperty(Node.prototype, \"rawData\", {\n        get: function () {\n            var e_1, _a;\n            if (!this.cache) {\n                if (this.children.size !== 0) {\n                    var children = this.children.values();\n                    var rawData = [];\n                    try {\n                        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                            var child = children_1_1.value;\n                            var i = void 0;\n                            var data = child.rawData;\n                            var len = data.length;\n                            for (i = 0; i < len; i++) {\n                                rawData.push(data[i]);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._rawData = rawData;\n                }\n                this.cache = true;\n            }\n            return this._rawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nvar periodCube = /** @class */ (function () {\n    function periodCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n    }\n    periodCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_3, _a;\n            if (level === dimensions.length) {\n                return node.aggData(measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var _b = __read(children_3_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    periodCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    periodCube.prototype.buildTree = function () {\n        var tree = new Node(this.aggFunc);\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    periodCube.prototype.insertNode = function (record, node, level) {\n        node.push(record);\n        node.cache = false;\n        if (level < this.dimensions.length) {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node(this.aggFunc));\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    periodCube.prototype.aggTree = function (node) {\n        var e_4, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_4 = __values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_a = children_4.return)) _a.call(children_4);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    periodCube.prototype.aggNode = function (node) {\n        var e_5, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_5 = __values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_a = children_5.return)) _a.call(children_5);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    return periodCube;\n}());\nexports.default = periodCube;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node() {\n        this.children = new Map();\n        this.rawData = [];\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this.rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (aggFunc, measures) {\n        if (measures === void 0) { measures = []; }\n        this._aggData = aggFunc(this.rawData, measures);\n        return this._aggData;\n    };\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_1, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var _b = __read(children_1_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar momentCube = /** @class */ (function () {\n    function momentCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n        this.buildTree();\n        this.aggTree();\n    }\n    momentCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node.aggData(aggFunc, measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    momentCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    momentCube.prototype.setData = function (props) {\n        var _a = props.aggFunc, aggFunc = _a === void 0 ? this.aggFunc : _a, _b = props.factTable, factTable = _b === void 0 ? this.factTable : _b, _c = props.dimensions, dimensions = _c === void 0 ? this.dimensions : _c, _d = props.measures, measures = _d === void 0 ? this.measures : _d;\n        if (dimensions !== this.dimensions || factTable !== this.factTable) {\n            this.dimensions = dimensions;\n            this.factTable = factTable;\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.buildTree();\n            this.aggTree();\n        }\n        else if (measures !== this.measures || aggFunc !== this.aggFunc) {\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.aggTree();\n        }\n    };\n    momentCube.prototype.buildTree = function () {\n        var tree = new Node();\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    momentCube.prototype.insertNode = function (record, node, level) {\n        if (level === this.dimensions.length) {\n            node.push(record);\n        }\n        else {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node());\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    momentCube.prototype.aggTree = function (node) {\n        var e_3, _a;\n        if (node === void 0) { node = this.tree; }\n        if (node.children.size > 0) {\n            node.rawData = [];\n            var children = node.children.values();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var child = children_3_1.value;\n                    var i = void 0;\n                    var data = this.aggTree(child).rawData;\n                    var len = data.length;\n                    for (i = 0; i < len; i++) {\n                        node.rawData.push(data[i]);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        node.aggData(this.aggFunc, this.measures);\n        return node;\n    };\n    return momentCube;\n}());\nexports.default = momentCube;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tree2Table(props) {\n    var dimensions = props.dimensions, measures = props.measures, cube = props.cube;\n    var aggFunc = cube.aggFunc;\n    var table = [];\n    function dfs(node, record, level) {\n        var e_1, _a, _b;\n        if (node.children.size === 0) {\n            var values = node._aggData;\n            table.push(__assign(__assign({}, record), values));\n            return;\n        }\n        try {\n            for (var _c = __values(node.children.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), childName = _e[0], child = _e[1];\n                var r = __assign(__assign({}, record), (_b = {}, _b[dimensions[level]] = childName, _b));\n                dfs(child, r, level + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    dfs(cube.tree, {}, 0);\n    return table;\n}\nexports.tree2Table = tree2Table;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","const JOIN_SYMBOL = '_';\nconst MAGIC_NUMBER = 5;\nfunction deepcopy(data) {\n    return JSON.parse(JSON.stringify(data));\n}\nfunction isFieldCategory(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'string'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldContinous(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'number'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldNumeric(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return !isNaN(record[fieldName])\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldTime(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return (!isNaN(Date.parse(record[fieldName]))\n            && typeof record[fieldName] === 'string'\n            && /^[0-9]{0,4}[-/][0-9]{0,2}([-/][0-9]{0,2}$)?/.test(record[fieldName]))\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction aggregate({ dataSource, fields, bys, method = 'sum' }) {\n    let tmp = [];\n    for (let by of bys) {\n        let map = new Map();\n        for (let record of dataSource) {\n            let key = JSON.stringify(fields.map(field => record[field]));\n            if (!map.has(key)) {\n                map.set(key, 0);\n            }\n            map.set(key, map.get(key) + record[by]);\n        }\n        for (let [key, value] of map) {\n            let row = {\n                index: key,\n                [by]: value\n            };\n            let dims = JSON.parse(key);\n            for (let i = 0; i < fields.length; i++) {\n                row[fields[i]] = dims[i];\n            }\n            tmp.push(row);\n        }\n    }\n    let ans = new Map();\n    for (let record of tmp) {\n        if (!ans.has(record.index)) {\n            ans.set(record.index, {});\n        }\n        ans.set(record.index, { ...ans.get(record.index), ...record });\n    }\n    return [...ans.values()];\n}\nfunction memberCount(dataSource, field) {\n    const counter = new Map();\n    for (let row of dataSource) {\n        let member = row[field];\n        if (!counter.has(member)) {\n            counter.set(member, 0);\n        }\n        counter.set(member, counter.get(member) + 1);\n    }\n    return [...counter.entries()];\n}\nfunction groupContinousField({ dataSource, field, newField = `${field}(con-group)`, groupNumber }) {\n    // const members = memberCount(dataSource, field);\n    // todo: outlier detection\n    const values = dataSource.map(item => item[field]);\n    const max = Math.max(...values); // Number.EPSILON * ;\n    const min = Math.min(...values);\n    const segWidth = (max - min) / groupNumber;\n    let ranges = [];\n    for (let i = 0; i < groupNumber; i++) {\n        let left = min + i * segWidth;\n        let right = min + (i + 1) * segWidth;\n        ranges.push([left, right]);\n    }\n    ranges[0][0] = -Infinity;\n    ranges[ranges.length - 1][1] = Infinity;\n    let precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n    for (let i = 0; i < dataSource.length; i++) {\n        let record = dataSource[i];\n        let rangeIndex = ranges.findIndex(r => (r[0] <= record[field] && record[field] < r[1]));\n        let range = ranges[rangeIndex];\n        if (typeof range !== 'undefined') {\n            record[newField] = `${rangeIndex + 1}:[${Number(range[0].toPrecision(precision))}, ${Number(range[1].toPrecision(precision))})`;\n        }\n        else {\n            record[newField] = 'null';\n        }\n    }\n    return dataSource;\n}\nfunction groupCategoryField({ dataSource, field, newField = `${field}(cat-group)`, groupNumber }) {\n    // auto category should obey Power law distrubution.\n    let members = memberCount(dataSource, field);\n    members.sort((a, b) => b[1] - a[1]);\n    let sum = members.map(v => v[1]);\n    groupNumber = members.length;\n    for (let i = sum.length - 2; i >= 0; i--) {\n        sum[i] = sum[i + 1] + sum[i];\n    }\n    for (let i = 0; i < members.length - 2; i++) {\n        // strict mode\n        // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n        if (members[i][1] * MAGIC_NUMBER >= sum[i + 1] && members[i + 1][1] / MAGIC_NUMBER < sum[i + 2]) {\n            groupNumber = i + 2;\n            break;\n        }\n    }\n    // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n    if (groupNumber === members.length) {\n        return dataSource.map(record => {\n            return {\n                ...record,\n                [newField]: record[field]\n            };\n        });\n    }\n    let set = new Set();\n    for (let i = groupNumber - 1; i < members.length; i++) {\n        set.add(members[i][0]);\n    }\n    for (let record of dataSource) {\n        if (set.has(record[field])) {\n            record[newField] = 'others';\n        }\n        else {\n            record[newField] = record[field];\n        }\n    }\n    return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\nfunction DKL(p1List, p2List) {\n    let sum = 0;\n    const len = Math.max(p1List.length, p2List.length);\n    for (let i = 0; i < len; i++) {\n        let p1 = p1List[i] || 0;\n        let p2 = p2List[i] || 0;\n        sum += p1 * Math.log2(p1 / p2);\n    }\n    return sum;\n}\nfunction isFieldUnique(dataSource, field) {\n    let set = new Set();\n    let validCount = 0;\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        if (dataSource[i][field] !== undefined && dataSource[i][field] !== null && dataSource[i][field] === '') {\n            validCount++;\n            set.add(dataSource[i][field]);\n        }\n    }\n    if (set.size === validCount)\n        return true;\n    return false;\n}\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL, isFieldUnique };\n","import { memberCount } from './utils/index';\nfunction isUniformDistribution(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    return members.every(member => member[1] === 1);\n}\nexport { isUniformDistribution };\n","export function linearMapPositive(arr) {\n    let min = Math.min(...arr);\n    return arr.map(a => a - min + 1);\n}\nexport function getCombination(elements, start = 1, end = elements.length) {\n    let ans = [];\n    const combine = (step, set, size) => {\n        if (set.length === size) {\n            ans.push([...set]);\n            return;\n        }\n        if (step >= elements.length) {\n            return;\n        }\n        combine(step + 1, [...set, elements[step]], size);\n        combine(step + 1, set, size);\n    };\n    for (let i = start; i <= end; i++) {\n        combine(0, [], i);\n    }\n    return ans;\n}\nexport function normalize(frequencyList) {\n    let sum = 0;\n    for (let f of frequencyList) {\n        sum += f;\n    }\n    return frequencyList.map(f => f / sum);\n}\nexport const entropy = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * Math.log2(p);\n    }\n    return -sum;\n};\nexport const gini = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * (1 - p);\n    }\n    return sum;\n};\n","/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n    // only for the special matrix here(corelational matrix)\n    let edges = [];\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++) {\n            edges.push([[i, j], Math.abs(matrix[i][j])]);\n        }\n    }\n    return edges;\n}\nfunction find(parents, n) {\n    return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\nfunction union(parents, n1, n2) {\n    let p1 = find(parents, n1);\n    let p2 = find(parents, n2);\n    parents[p1] = p2;\n    // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n    // may check and prove whether it's necessary.\n    find(parents, n1);\n    find(parents, n2);\n}\nfunction findWithEffect(parents, sizes, n) {\n    if (parents[n] === n) {\n        return n;\n    }\n    parents[n] = findWithEffect(parents, sizes, parents[n]);\n    sizes[n] = sizes[parents[n]];\n    return parents[n];\n}\nfunction unionWithEffect(parents, sizes, n1, n2) {\n    let p1 = findWithEffect(parents, sizes, n1);\n    let p2 = findWithEffect(parents, sizes, n2);\n    let size1 = sizes[p1];\n    let size2 = sizes[p2];\n    parents[p1] = p2;\n    sizes[p1] = sizes[p2] = size1 + size2;\n    findWithEffect(parents, sizes, n1);\n    findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\nfunction kruskal(matrix, groupNumber, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\n// todo: delete kruskal with limit size, use largest size to limit it(uncontrolled group number but better), need discuss.\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\nfunction kruskalWithLimitSize(matrix, limitSize) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\nexport function kruskalMSTWithLimitSize(matrix, limitSize = 4) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    const cloneParents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n                    edgesInMST.push([edge[0], edge[1], true]);\n                    union(cloneParents, edge[0][0], edge[0][1]);\n                }\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], false]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n            cloneParents[i] = find(cloneParents, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups: parents };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\nexport function kruskalMST(matrix, groupNumber = 4, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    let groups = [...parents];\n    let inCutEdge = false;\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], inCutEdge]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        // TODO:\n        // + use kruskalMST instead of kruskal.\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            inCutEdge = true;\n        }\n        else {\n            groups = [...parents];\n        }\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups };\n}\nfunction cluster({ matrix, measures, method = 'kruskal', groupMaxSize = 4, limitSize = false, threshold = 0 }) {\n    // const groups = kruskal({ matrix, groupMaxSize });\n    let groups;\n    if (limitSize) {\n        groups = kruskalWithLimitSize(matrix, groupMaxSize);\n    }\n    else {\n        groups = kruskal(matrix, groupMaxSize, threshold);\n    }\n    let ans = [];\n    for (let meas of groups.values()) {\n        ans.push(meas.map(meaIndex => measures[meaIndex]));\n    }\n    return ans;\n}\nexport default cluster;\n","import { isFieldTime, isFieldContinous, memberCount, isFieldCategory, deepcopy, groupContinousField, groupCategoryField } from '../utils/index';\nimport { normalize, entropy } from '../statistics/index';\nimport { isUniformDistribution } from '../distribution';\nconst MIN_QUAN_MEMBER_SIZE = 25;\n/**\n *\n * @param dataSource\n * @param field\n * todo: should accept BIField type and calculate the semantic type basic on it.\n */\nexport function getFieldType(dataSource, field) {\n    if (isFieldTime(dataSource, field)) {\n        return 'temporal';\n    }\n    else if (isFieldContinous(dataSource, field)) {\n        // Todo:\n        // here is only a tmp solution. we still hope to divided ordinal type and quantitative type.\n        // if (memberCount(dataSource, field).length > MIN_QUAN_MEMBER_SIZE) {\n        //   return 'quantitative'\n        // } else {\n        //   return 'ordinal';\n        // }\n        return 'quantitative';\n    }\n    else if (isFieldCategory(dataSource, field)) {\n        // isFieldCategory is a safety checking here, for sometimes dirty data value can be object.\n        return 'nominal';\n    }\n    else {\n        // todo do something(like cleaning)\n        return 'nominal';\n    }\n}\nexport function getAllFieldTypes(dataSource, fields) {\n    let fieldsWithType = [];\n    for (let field of fields) {\n        fieldsWithType.push({\n            name: field,\n            type: getFieldType(dataSource, field)\n        });\n    }\n    return fieldsWithType;\n}\nexport function getFieldDistribution(dataSource, field) {\n    let members = memberCount(dataSource, field);\n    // members.sort((a, b) => a[1] - b[1]);\n    return members.map(m => {\n        return { memberName: m[0], count: m[1] };\n    });\n}\nexport function getAllFieldsDistribution(dataSource, fields) {\n    let fieldsDistribution = [];\n    for (let field of fields) {\n        fieldsDistribution.push({\n            fieldName: field,\n            distribution: getFieldDistribution(dataSource, field)\n        });\n    }\n    return fieldsDistribution;\n}\nexport function getFieldEntropy(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    const frequencyList = members.map(m => m[1]);\n    const probabilityList = normalize(frequencyList);\n    const fieldEntropy = entropy(probabilityList);\n    const maxEntropy = Math.log2(members.length);\n    return {\n        fieldName: field,\n        entropy: fieldEntropy,\n        maxEntropy\n    };\n}\nexport function getAllFieldsEntropy(dataSource, fields) {\n    let fieldEntropyList = [];\n    for (let field of fields) {\n        fieldEntropyList.push(getFieldEntropy(dataSource, field));\n    }\n    return fieldEntropyList;\n}\nexport function groupFields(dataSource, fields) {\n    let groupedData = deepcopy(dataSource);\n    let newFields = [];\n    for (let field of fields) {\n        let newFieldName = `${field.name}(group)`;\n        if (field.type === 'quantitative' && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE * 2) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupContinousField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: 'ordinal'\n                });\n            }\n        }\n        else if ((field.type === 'ordinal' || field.type === 'nominal') && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupCategoryField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: field.type\n                });\n            }\n        }\n    }\n    return {\n        groupedData,\n        fields,\n        newFields\n    };\n}\n","/**\n * \n * @param {task} task is a function \n */\nexport function timer (task) {\n  return function (e) {\n    let startTime = new Date().getTime();\n    try {\n      task(e);\n    } finally {\n      let cost = new Date().getTime() - startTime;\n      console.log(`Task [${task.name}] cost ${cost} ms.`)\n    }\n  }\n}","/* eslint no-restricted-globals: 0 */\nimport { UnivariateSummary } from 'visual-insights';\nimport { timer } from './timer';\nconst groupFields = (e) => {\n  try {\n    const { dataSource, fields } = e.data;\n    const result = UnivariateSummary.groupFields(dataSource, fields);\n    self.postMessage({\n      success: true,\n      data: result\n    })\n  } catch (error) {\n    self.postMessage({\n      success: false,\n      message: error.toString()\n    })\n  }\n}\n\nself.addEventListener('message', timer(groupFields), false);"],"sourceRoot":""}