{"version":3,"sources":["../webpack/bootstrap","../../../node_modules/cube-core/built/index.js","../../../node_modules/cube-core/built/utils/aggregation.js","../../../node_modules/cube-core/built/core/index.js","../../../node_modules/cube-core/built/core/periodCube.js","../../../node_modules/cube-core/built/core/momentCube.js","../../../node_modules/cube-core/built/utils/transform.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../visual-insights/build/esm/statistics/correlation.js","../../visual-insights/build/esm/statistics/utils.js","../../visual-insights/build/esm/ml/cluster/kruskal.js","../../visual-insights/build/esm/ml/outlier/isolationForest.js","../../visual-insights/build/esm/constant.js","../../visual-insights/build/esm/insights/impurity.js","../../visual-insights/build/esm/insights/config.js","workers/timer.js","workers/combineFields.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","this","__assign","index_1","require","transform_1","aggregation_1","operatorMap","sum_unsafe","mean","count","createCube","_a","type","_b","aggFunc","_c","factTable","_d","dimensions","_e","measures","periodCube","momentCube","default","props","asFields","operator","dataSource","cube","table","tree2Table","forEach","row","as","__export","subset","sums","mea","_loop_1","len","length","sum","_loop_2","Number","MEASURES","cnts","_loop_3","periodCube_1","momentCube_1","__read","iterator","e","ar","next","done","push","error","__spread","arguments","concat","__values","TypeError","Node","children","Map","_rawData","cache","params","_i","apply","aggData","_aggData","rawData","clearCache","e_1","size","values","children_1","children_1_1","child","data","e_1_1","return","configurable","getNode","search","node","level","e_2","entries","children_2","children_2_1","childName","e_2_1","tree","e_3","children_3","children_3_1","e_3_1","buildTree","insertNode","record","member","has","set","aggTree","e_4","children_4","children_4_1","e_4_1","aggNode","e_5","children_5","children_5_1","e_5_1","setData","assign","dfs","_slicedToArray","arr","Array","isArray","toString","_arr","_n","undefined","_s","err","_toConsumableArray","arr2","iter","from","crammersV","fieldX","fieldY","xSet","Set","ySet","nestTree","add","chis","rowSums","colSums","totalSum","x","y","counter","observed","expected","chiSquared","Math","sqrt","min","pearsonCC","xBar","map","yBar","pow","linearMapPositive","a","getCombination","elements","start","end","ans","combine","step","normalize","frequencyList","f","entropy","probabilityList","log2","turnAdjMatrix2List","matrix","edges","j","abs","find","parents","union","n1","n2","p1","p2","findWithEffect","sizes","unionWithEffect","size1","size2","kruskalMST","groupNumber","threshold","sort","b","edgesInMST","groups","inCutEdge","edge","cluster","method","groupMaxSize","limitSize","kruskalWithLimitSize","kruskal","meas","meaIndex","CHANNEL","getDimSetsBasedOnClusterGroups","dimSets","dimCorrelationMatrix","getDimCorrelationMatrix","Cluster","round","combineDimSet","subspaceSearching","shouldDimensionsCorrelated","insightExtraction","impurityList","dimSet","dset","impurity","aggregate","pL","correlationMatrix","task","self","addEventListener","topKPercent","dimReport","score","postMessage","success","slice","view","message","startTime","Date","getTime","cost","console","log"],"mappings":"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","file":"f808b4c276283cfce6c8.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./core/index\");\n// import { JsonRecord } from './types';\nvar transform_1 = require(\"./utils/transform\");\nvar aggregation_1 = require(\"./utils/aggregation\");\nvar operatorMap = {\n    'sum': aggregation_1.sum_unsafe,\n    'mean': aggregation_1.mean,\n    'count': aggregation_1.count,\n};\nfunction copyDataSource(data) {\n    return data.map(function (row) {\n        return __assign({}, row);\n    });\n}\nfunction aggregate(props) {\n    var dimensions = props.dimensions, measures = props.measures, asFields = props.asFields, operator = props.operator, dataSource = props.dataSource;\n    var data = [];\n    var cube = createCube({\n        type: 'moment',\n        aggFunc: operatorMap[operator] || aggregation_1.count,\n        dimensions: dimensions,\n        measures: measures,\n        factTable: dataSource\n    });\n    var table = transform_1.tree2Table({ dimensions: dimensions, measures: measures, cube: cube });\n    table.forEach(function (row) {\n        asFields.forEach(function (as, i) {\n            row[as] = row[measures[i]];\n        });\n    });\n    return table;\n}\nfunction createCube(_a) {\n    var type = _a.type, _b = _a.aggFunc, aggFunc = _b === void 0 ? aggregation_1.count : _b, _c = _a.factTable, factTable = _c === void 0 ? [] : _c, _d = _a.dimensions, dimensions = _d === void 0 ? [] : _d, _e = _a.measures, measures = _e === void 0 ? [] : _e;\n    switch (type) {\n        case \"period\":\n            return new index_1.periodCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        case \"moment\":\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        default:\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n    }\n}\nexports.createCube = createCube;\nexports.default = aggregate;\n__export(require(\"./utils/aggregation\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sum_unsafe = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_1 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += subset[i][mea];\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_1(i, len);\n    }\n    return sums;\n};\nexports.sum = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_2 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_2(i, len);\n    }\n    return sums;\n};\nexports.count = function (subset, MEASURES) {\n    var cnts = {};\n    MEASURES.forEach(function (mea) {\n        cnts[mea] = 0;\n    });\n    for (var i = 0, len = subset.length; i < len; i++) {\n        MEASURES.forEach(function (mea) {\n            cnts[mea]++;\n        });\n    }\n    return cnts;\n};\nexports.mean = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_3 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_3(i, len);\n    }\n    measures.forEach(function (mea) {\n        sums[mea] /= subset.length;\n    });\n    return sums;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar periodCube_1 = require(\"./periodCube\");\nexports.periodCube = periodCube_1.default;\nvar momentCube_1 = require(\"./momentCube\");\nexports.momentCube = momentCube_1.default;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node(aggFunc) {\n        this.children = new Map();\n        this._rawData = [];\n        this.aggFunc = aggFunc;\n        this.cache = false;\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this._rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (measures) {\n        if (measures === void 0) { measures = []; }\n        if (!this.cache) {\n            this._aggData = this.aggFunc(this.rawData, measures);\n            this.cache = true;\n        }\n        return this._aggData;\n    };\n    Node.prototype.clearCache = function () {\n        this.cache = false;\n    };\n    Object.defineProperty(Node.prototype, \"rawData\", {\n        get: function () {\n            var e_1, _a;\n            if (!this.cache) {\n                if (this.children.size !== 0) {\n                    var children = this.children.values();\n                    var rawData = [];\n                    try {\n                        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                            var child = children_1_1.value;\n                            var i = void 0;\n                            var data = child.rawData;\n                            var len = data.length;\n                            for (i = 0; i < len; i++) {\n                                rawData.push(data[i]);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._rawData = rawData;\n                }\n                this.cache = true;\n            }\n            return this._rawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nvar periodCube = /** @class */ (function () {\n    function periodCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n    }\n    periodCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_3, _a;\n            if (level === dimensions.length) {\n                return node.aggData(measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var _b = __read(children_3_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    periodCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    periodCube.prototype.buildTree = function () {\n        var tree = new Node(this.aggFunc);\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    periodCube.prototype.insertNode = function (record, node, level) {\n        node.push(record);\n        node.cache = false;\n        if (level < this.dimensions.length) {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node(this.aggFunc));\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    periodCube.prototype.aggTree = function (node) {\n        var e_4, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_4 = __values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_a = children_4.return)) _a.call(children_4);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    periodCube.prototype.aggNode = function (node) {\n        var e_5, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_5 = __values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_a = children_5.return)) _a.call(children_5);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    return periodCube;\n}());\nexports.default = periodCube;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node() {\n        this.children = new Map();\n        this.rawData = [];\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this.rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (aggFunc, measures) {\n        if (measures === void 0) { measures = []; }\n        this._aggData = aggFunc(this.rawData, measures);\n        return this._aggData;\n    };\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_1, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var _b = __read(children_1_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar momentCube = /** @class */ (function () {\n    function momentCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n        this.buildTree();\n        this.aggTree();\n    }\n    momentCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node.aggData(aggFunc, measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    momentCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    momentCube.prototype.setData = function (props) {\n        var _a = props.aggFunc, aggFunc = _a === void 0 ? this.aggFunc : _a, _b = props.factTable, factTable = _b === void 0 ? this.factTable : _b, _c = props.dimensions, dimensions = _c === void 0 ? this.dimensions : _c, _d = props.measures, measures = _d === void 0 ? this.measures : _d;\n        if (dimensions !== this.dimensions || factTable !== this.factTable) {\n            this.dimensions = dimensions;\n            this.factTable = factTable;\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.buildTree();\n            this.aggTree();\n        }\n        else if (measures !== this.measures || aggFunc !== this.aggFunc) {\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.aggTree();\n        }\n    };\n    momentCube.prototype.buildTree = function () {\n        var tree = new Node();\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    momentCube.prototype.insertNode = function (record, node, level) {\n        if (level === this.dimensions.length) {\n            node.push(record);\n        }\n        else {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node());\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    momentCube.prototype.aggTree = function (node) {\n        var e_3, _a;\n        if (node === void 0) { node = this.tree; }\n        if (node.children.size > 0) {\n            node.rawData = [];\n            var children = node.children.values();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var child = children_3_1.value;\n                    var i = void 0;\n                    var data = this.aggTree(child).rawData;\n                    var len = data.length;\n                    for (i = 0; i < len; i++) {\n                        node.rawData.push(data[i]);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        node.aggData(this.aggFunc, this.measures);\n        return node;\n    };\n    return momentCube;\n}());\nexports.default = momentCube;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tree2Table(props) {\n    var dimensions = props.dimensions, measures = props.measures, cube = props.cube;\n    var aggFunc = cube.aggFunc;\n    var table = [];\n    function dfs(node, record, level) {\n        var e_1, _a, _b;\n        if (node.children.size === 0) {\n            var values = node._aggData;\n            table.push(__assign(__assign({}, record), values));\n            return;\n        }\n        try {\n            for (var _c = __values(node.children.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), childName = _e[0], child = _e[1];\n                var r = __assign(__assign({}, record), (_b = {}, _b[dimensions[level]] = childName, _b));\n                dfs(child, r, level + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    dfs(cube.tree, {}, 0);\n    return table;\n}\nexports.tree2Table = tree2Table;\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export function chiSquared(nestTree, xSet, ySet) {\n    if (typeof nestTree === 'undefined' || typeof xSet === 'undefined' || typeof ySet === 'undefined') {\n        return 0;\n    }\n    let rowSums = new Map();\n    let colSums = new Map();\n    let totalSum = 0;\n    for (let x of xSet) {\n        rowSums.set(x, 0);\n    }\n    for (let y of ySet) {\n        colSums.set(y, 0);\n    }\n    for (let [x, node] of nestTree) {\n        for (let [y, counter] of node) {\n            rowSums.set(x, rowSums.get(x) + counter);\n            colSums.set(y, colSums.get(y) + counter);\n            totalSum += counter;\n        }\n    }\n    let chis = 0;\n    for (let [x, node] of nestTree) {\n        for (let [y, observed] of node) {\n            let expected = rowSums.get(x) * colSums.get(y) / totalSum;\n            chis += (observed - expected) ** 2 / expected;\n        }\n    }\n    return chis;\n}\nexport function crammersV(dataSource, fieldX, fieldY) {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    const V = Math.sqrt(chis / (dataSource.length * Math.min(xSet.size - 1, ySet.size - 1)));\n    return V;\n}\n/**\n * Pearson correlation coefficient\n * @param dataSource\n * @param fieldX\n * @param fieldY\n */\nexport function pearsonCC(dataSource, fieldX, fieldY) {\n    let r = 0;\n    let xBar = sum(dataSource.map(r => r[fieldX])) / dataSource.length;\n    let yBar = sum(dataSource.map(r => r[fieldY])) / dataSource.length;\n    r = sum(dataSource.map(r => (r[fieldX] - xBar) * (r[fieldY] - yBar))) /\n        Math.sqrt(sum(dataSource.map(r => Math.pow(r[fieldX] - xBar, 2))) * sum(dataSource.map(r => Math.pow(r[fieldY] - yBar, 2))));\n    return r;\n}\nfunction sum(arr) {\n    let sum = 0;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        // if (typeof dataSource[i][field])\n        sum += arr[i];\n    }\n    return sum;\n}\n// can be used for test\n// export function crammersV(dataSource: DataSource, fieldX: string, fieldY: string): number {\n//   const xSet = new Set(dataSource.map(d => d[fieldX]))\n//   const ySet = new Set(dataSource.map(d => d[fieldY]))\n//   const xMembers = [...xSet];\n//   const yMembers = [...ySet];\n//   let xDict = {};\n//   let yDict = {};\n//   for (let i = 0; i < xMembers.length; i++) {\n//     xDict[xMembers[i]] = i;\n//   }\n//   for (let i = 0; i < yMembers.length; i++) {\n//     yDict[yMembers[i]] = i;\n//   }\n//   // let matrix: number[][] = xMembers.map(x => yMembers.map(y => 0));\n//   let matrix: number[][] = [];\n//   for (let  i = 0; i < xMembers.length; i++) {\n//     matrix.push([]);\n//     for (let j = 0; j < yMembers.length; j++) {\n//       matrix[i].push(0);\n//     }\n//   }\n//   for (let record of dataSource) {\n//     matrix[xDict[record[fieldX]]][yDict[record[fieldY]]]++;\n//   }\n//   const chis = chiSquared(matrix);\n//   const V = Math.sqrt(chis / (dataSource.length * Math.min(xMembers.length - 1, yMembers.length - 1)))\n//   return V;\n// }\n// export function chiSquared(matrix: number[][] = [[]]): number {\n//   let rowSums = matrix.map(m => 0);\n//   let colSums = matrix[0].map(m => 0);\n//   let totalSum = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       rowSums[i] += matrix[i][j];\n//       colSums[j] += matrix[i][j];\n//       totalSum += matrix[i][j];\n//     }\n//   }\n//   let chis = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       let observed = matrix[i][j];\n//       let expected = rowSums[i] * colSums[j] / totalSum;\n//       chis += (observed - expected) ** 2 / expected;\n//     }\n//   }\n//   return chis;\n// }\n","export function linearMapPositive(arr) {\n    let min = Math.min(...arr);\n    return arr.map(a => a - min + 1);\n}\nexport function getCombination(elements, start = 1, end = elements.length) {\n    let ans = [];\n    const combine = (step, set, size) => {\n        if (set.length === size) {\n            ans.push([...set]);\n            return;\n        }\n        if (step >= elements.length) {\n            return;\n        }\n        combine(step + 1, [...set, elements[step]], size);\n        combine(step + 1, set, size);\n    };\n    for (let i = start; i <= end; i++) {\n        combine(0, [], i);\n    }\n    return ans;\n}\nexport function normalize(frequencyList) {\n    let sum = 0;\n    for (let f of frequencyList) {\n        sum += f;\n    }\n    return frequencyList.map(f => f / sum);\n}\nexport const entropy = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * Math.log2(p);\n    }\n    return -sum;\n};\nexport const gini = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * (1 - p);\n    }\n    return sum;\n};\n","/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n    // only for the special matrix here(corelational matrix)\n    let edges = [];\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++) {\n            edges.push([[i, j], Math.abs(matrix[i][j])]);\n        }\n    }\n    return edges;\n}\nfunction find(parents, n) {\n    return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\nfunction union(parents, n1, n2) {\n    let p1 = find(parents, n1);\n    let p2 = find(parents, n2);\n    parents[p1] = p2;\n    // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n    // may check and prove whether it's necessary.\n    find(parents, n1);\n    find(parents, n2);\n}\nfunction findWithEffect(parents, sizes, n) {\n    if (parents[n] === n) {\n        return n;\n    }\n    parents[n] = findWithEffect(parents, sizes, parents[n]);\n    sizes[n] = sizes[parents[n]];\n    return parents[n];\n}\nfunction unionWithEffect(parents, sizes, n1, n2) {\n    let p1 = findWithEffect(parents, sizes, n1);\n    let p2 = findWithEffect(parents, sizes, n2);\n    let size1 = sizes[p1];\n    let size2 = sizes[p2];\n    parents[p1] = p2;\n    sizes[p1] = sizes[p2] = size1 + size2;\n    findWithEffect(parents, sizes, n1);\n    findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\nfunction kruskal(matrix, groupNumber, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\n// todo: delete kruskal with limit size, use largest size to limit it(uncontrolled group number but better), need discuss.\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\nfunction kruskalWithLimitSize(matrix, limitSize) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\nexport function kruskalMSTWithLimitSize(matrix, limitSize = 4) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    const cloneParents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n                    edgesInMST.push([edge[0], edge[1], true]);\n                    union(cloneParents, edge[0][0], edge[0][1]);\n                }\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], false]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n            cloneParents[i] = find(cloneParents, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups: parents };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\nexport function kruskalMST(matrix, groupNumber = 4, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    let groups = [...parents];\n    let inCutEdge = false;\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], inCutEdge]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        // TODO:\n        // + use kruskalMST instead of kruskal.\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            inCutEdge = true;\n        }\n        else {\n            groups = [...parents];\n        }\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups };\n}\nfunction cluster({ matrix, measures, method = 'kruskal', groupMaxSize = 4, limitSize = false, threshold = 0 }) {\n    // const groups = kruskal({ matrix, groupMaxSize });\n    let groups;\n    if (limitSize) {\n        groups = kruskalWithLimitSize(matrix, groupMaxSize);\n    }\n    else {\n        groups = kruskal(matrix, groupMaxSize, threshold);\n    }\n    let ans = [];\n    for (let meas of groups.values()) {\n        ans.push(meas.map(meaIndex => measures[meaIndex]));\n    }\n    return ans;\n}\nexport default cluster;\n","import { uniformSampling } from \"../../sampling\";\nexport class IsolationForest {\n    constructor(dimensions, measures, dataSource, treeNumber = 100, Psi = 256) {\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.dataSource = dataSource;\n        if (dataSource.length < Psi) {\n            this.treeNumber = Math.max(1, Math.ceil(Psi / 50));\n            this.sampleSize = Math.max(2, Math.floor(dataSource.length / 2));\n        }\n        else {\n            this.treeNumber = treeNumber;\n            this.sampleSize = Psi;\n        }\n        this.limitHeight = Math.ceil(Math.log2(this.sampleSize));\n        this.iForest = [];\n        this.normalizeDimensions();\n    }\n    normalizeDimensions() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.ranges = [];\n        this.dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    buildIsolationTree(normalizedSampleData, depth) {\n        if (depth >= this.limitHeight || normalizedSampleData.length <= 1) {\n            return null;\n        }\n        else {\n            let rand = Math.random();\n            let randField = this.measures[0] || this.dimensions[0];\n            let dimLength = this.dimensions.length;\n            let meaLength = this.measures.length;\n            let randValue = 0;\n            if (rand >= dimLength / (dimLength + meaLength)) {\n                let index = Math.floor(Math.random() * meaLength) % meaLength;\n                randField = this.measures[index];\n                randValue = this.ranges[index][0] + (this.ranges[index][1] - this.ranges[index][0]) * Math.random();\n            }\n            else {\n                let index = Math.floor(Math.random() * dimLength) % dimLength;\n                randField = this.dimensions[index];\n                randValue = Math.floor(this.valueSets[index].size * Math.random()) % this.valueSets[index].size;\n            }\n            // random in range not in distribution.\n            // let randValue = normalizedSampleData[Math.floor(Math.random() * normalizedSampleData.length) % normalizedSampleData.length][randField];\n            let leftSubData = [];\n            let rightSubData = [];\n            for (let record of normalizedSampleData) {\n                if (record[randField] < randValue) {\n                    leftSubData.push(record);\n                }\n                else {\n                    rightSubData.push(record);\n                }\n            }\n            let node = {\n                field: randField,\n                value: randValue,\n                size: normalizedSampleData.length\n            };\n            node.left = this.buildIsolationTree(leftSubData, depth + 1);\n            node.right = this.buildIsolationTree(rightSubData, depth + 1);\n            return node;\n        }\n    }\n    /**\n     * average unsuccessful searches in BST (Preiss, 1999)\n     * @param Psi\n     */\n    AFS(Psi) {\n        if (Psi > 2)\n            return 2 * (Math.log(Psi - 1) + Math.E) - 2 * (Psi - 1) / Psi;\n        if (Psi === 2)\n            return 1;\n        return 0;\n    }\n    getPathLength(record, iTree, pathLength, nodeSize) {\n        if (iTree === null) {\n            return pathLength + this.AFS(nodeSize);\n        }\n        let value = record[iTree.field];\n        if (value < iTree.value) {\n            return this.getPathLength(record, iTree.left, pathLength + 1, iTree.size);\n        }\n        else {\n            return this.getPathLength(record, iTree.right, pathLength + 1, iTree.size);\n        }\n    }\n    buildIsolationForest() {\n        this.iForest = [];\n        for (let i = 0; i < this.treeNumber; i++) {\n            let samples = uniformSampling(this.normalizedDataSource, this.sampleSize);\n            let iTree = this.buildIsolationTree(samples, 0);\n            this.iForest.push(iTree);\n        }\n        return this.iForest;\n    }\n    // public evaluate (record: Record): number {\n    // }\n    estimateOutierScore() {\n        this.recordScoreList = [];\n        this.normalizedDataSource.forEach(record => {\n            let recordScore = 0;\n            let avgPathLength = 0;\n            this.iForest.forEach(iTree => {\n                avgPathLength += this.getPathLength(record, iTree, 0, this.sampleSize);\n            });\n            avgPathLength /= this.iForest.length;\n            recordScore = Math.pow(2, -(avgPathLength / this.AFS(this.sampleSize)));\n            this.recordScoreList.push(recordScore);\n        });\n        return this.recordScoreList;\n    }\n}\n","export const CHANNEL = {\n    maxDimensionNumber: 8,\n    maxMeasureNumber: 6\n};\n","// import { aggregate } from '../utils';\nimport aggregate from 'cube-core';\nimport { entropy, normalize } from '../statistics/index';\nimport { crammersV, getCombination, pearsonCC, linearMapPositive } from '../statistics/index';\nimport { CrammersVThreshold } from './config';\nimport { Cluster } from '../ml/index';\nimport { CHANNEL } from '../constant';\n// insights like outlier and trend both request high impurity of dimension.\nfunction getDimCorrelationMatrix(dataSource, dimensions) {\n    let matrix = dimensions.map(d => dimensions.map(d => 0));\n    for (let i = 0; i < dimensions.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < dimensions.length; j++) {\n            matrix[i][j] = matrix[j][i] = crammersV(dataSource, dimensions[i], dimensions[j]);\n        }\n    }\n    return matrix;\n}\nexport function getDimSetsBasedOnClusterGroups(dataSource, dimensions) {\n    const maxDimNumberInView = 4;\n    let dimSets = [];\n    let dimCorrelationMatrix = getDimCorrelationMatrix(dataSource, dimensions);\n    // groupMaxSize here means group number.\n    let groups = Cluster.kruskal({\n        matrix: dimCorrelationMatrix,\n        measures: dimensions,\n        groupMaxSize: Math.round(dimensions.length / maxDimNumberInView),\n        threshold: CrammersVThreshold\n    });\n    // todo: maybe a threhold would be better ?\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nexport function subspaceSearching(dataSource, dimensions, shouldDimensionsCorrelated = true) {\n    if (shouldDimensionsCorrelated) {\n        return getDimSetsBasedOnClusterGroups(dataSource, dimensions);\n    }\n    else {\n        return getCombination(dimensions);\n    }\n}\nexport function insightExtraction(dataSource, dimensions, measures, operator = 'sum') {\n    let impurityList = [];\n    let dimSet = subspaceSearching(dataSource, dimensions, true);\n    for (let dset of dimSet) {\n        let impurity = {};\n        let aggData = aggregate({\n            dataSource,\n            dimensions: dset,\n            measures,\n            asFields: measures,\n            operator: operator || 'sum' //: operator as \n        });\n        // let fList = aggData.map(r => r)\n        for (let mea of measures) {\n            // fl = frequency list, pL = probability list\n            let fL = aggData.map(r => r[mea]);\n            let pL = normalize(linearMapPositive(fL));\n            let value = entropy(pL);\n            impurity[mea] = value;\n        }\n        let correlationMatrix = measures.map(i => measures.map(j => 0));\n        for (let i = 0; i < measures.length; i++) {\n            correlationMatrix[i][i] = 1;\n            for (let j = i + 1; j < measures.length; j++) {\n                let r = pearsonCC(aggData, measures[i], measures[j]);\n                correlationMatrix[j][i] = correlationMatrix[i][j] = r;\n            }\n        }\n        impurityList.push([dset, impurity, correlationMatrix]);\n    }\n    return impurityList;\n}\n// interface InsightSpace {\n//   dimensions: string[];\n//   type: 'entropy' | 'trend' | 'outlier';\n//   order: 'desc' | 'asc';\n//   score: {\n//     [meaName: string]: number;\n//   };\n//   correlationMatrix: number[][];\n// }\n// export function multiInsightExtraction(dataSource: DataSource, dimensions: string[], measures: string[]): InsightSpace[] {\n//   let impurityList: FieldsFeature[] = [];\n//   let dimSet = subspaceSearching(dataSource, dimensions, true);\n//   let correlationMatrix = measures.map(i => measures.map(j => 0));\n//   for (let i = 0; i < measures.length; i++) {\n//     correlationMatrix[i][i] = 1;\n//     for (let j = i + 1; j < measures.length; j++) {\n//       let r = pearsonCC(dataSource, measures[i], measures[j]);\n//       correlationMatrix[j][i] = correlationMatrix[i][j] = r;\n//     }\n//   }\n//   for (let dset of dimSet) {\n//     let impurity = {};\n//     let trend = {};\n//     let outlier = {};\n//     let aggData = aggregate({\n//       dataSource,\n//       dimensions: dset,\n//       measures,\n//       asFields: measures,\n//       operator: operator || 'sum'//: operator as \n//     });\n//     // let fList = aggData.map(r => r)\n//     for (let mea of measures) {\n//       // fl = frequency list, pL = probability list\n//       let fL = aggData.map(r => r[mea]);\n//       let pL = normalize(linearMapPositive(fL));\n//       let value = entropy(pL);\n//       impurity[mea] = value;\n//     }\n//     for (let mea of measures) {\n//     }\n//     impurityList.push([dset, impurity, correlationMatrix]);\n//   }\n//   return impurityList\n// }\n","export const TopKSingleField = 6;\nexport const TopKView = 15;\nexport const Depth = 4;\nexport const VisualLimit = 8;\nexport const TopKPercentField = 0.8;\nexport const CrammersVThreshold = 0.3;\nexport const PearsonCorrelation = {\n    strong: 0.5,\n    weak: 0.3\n};\n","/**\n * \n * @param {task} task is a function \n */\nexport function timer (task) {\n  return function (e) {\n    let startTime = new Date().getTime();\n    try {\n      task(e);\n    } finally {\n      let cost = new Date().getTime() - startTime;\n      console.log(`Task [${task.name}] cost ${cost} ms.`)\n    }\n  }\n}","/* eslint no-restricted-globals: 0 */\nimport { Insight } from 'visual-insights'\nimport { timer } from './timer';\n\nconst combineFields = (e) => {\n  try {\n    const { dataSource, dimensions, measures, operator, topKPercent = 1 } = e.data;\n    let impurityList = Insight.insightExtraction(dataSource, dimensions, measures, operator).map(dimReport => {\n      let sum = 0;\n      for (let key in dimReport[1]) {\n        sum += dimReport[1][key];\n      }\n      return {\n        ...dimReport,\n        score: sum\n      }\n    });\n    impurityList.sort((a, b) => a.score - b.score);\n    let end = Math.round(topKPercent * impurityList.length)\n    self.postMessage({\n      success: true,\n      data: impurityList.slice(0, end).map(view => {\n        return {\n          score: view.score,\n          dimensions: view[0],\n          measures: measures.map(mea => {\n            return {\n              name: mea,\n              value: view[1][mea]\n            }\n          }),\n          correlationMatrix: view[2]\n        }\n      })\n    })\n  } catch (error) {\n    self.postMessage({\n      success: false,\n      message: error.toString()\n    })\n  }\n}\n\nself.addEventListener('message', timer(combineFields), false);"],"sourceRoot":""}