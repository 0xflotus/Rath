{"version":3,"sources":["../webpack/bootstrap","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/visual-insights/build/esm/statistics/correlation.js","../../../node_modules/visual-insights/build/esm/statistics/utils.js","../../../node_modules/visual-insights/build/esm/statistics/linearRegression.js","../../../node_modules/visual-insights/build/esm/statistics/aggregation.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/visual-insights/build/esm/constant.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../node_modules/visual-insights/build/esm/utils/common.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/visual-insights/build/esm/ml/cluster/kruskal.js","../../../node_modules/visual-insights/build/esm/ml/index.js","../../../node_modules/visual-insights/build/esm/ml/outlier/isolationForest.js","../../../node_modules/visual-insights/build/esm/insights/config.js","../../../node_modules/axios/lib/utils.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/specification/encoding.js","../../../node_modules/visual-insights/build/esm/distribution.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/cube-core/built/index.js","../../../node_modules/visual-insights/build/esm/univariateSummary/index.js","../../../node_modules/visual-insights/build/esm/statistics/aggregators.js","../../src/sum.js","../../src/mean.js","../../src/sum_nth_power_deviations.js","../../src/variance.js","../../src/standard_deviation.js","../../src/mode_sorted.js","../../src/numeric_sort.js","../../src/min.js","../../src/max.js","../../src/sum_simple.js","../../src/quantile_sorted.js","../../src/quickselect.js","../../src/quantile.js","../../src/quantile_rank_sorted.js","../../src/interquartile_range.js","../../src/median.js","../../src/median_absolute_deviation.js","../../src/shuffle_in_place.js","../../src/shuffle.js","../../src/sample.js","../../src/make_matrix.js","../../src/unique_count_sorted.js","../../src/ckmeans.js","../../src/sample_covariance.js","../../src/sample_variance.js","../../src/sample_standard_deviation.js","../../src/sample_correlation.js","../../src/combine_means.js","../../src/mean_simple.js","../../src/root_mean_square.js","../../src/bayesian_classifier.js","../../src/perceptron.js","../../src/epsilon.js","../../src/factorial.js","../../src/gammaln.js","../../src/chi_squared_distribution_table.js","../../src/kernel_density_estimation.js","../../src/standard_normal_table.js","../../src/error_function.js","../../src/inverse_error_function.js","../../src/sign.js","../../src/euclidean_distance.js","../../src/k_means_cluster.js","../../src/silhouette.js","../../src/relative_error.js","../../src/add_to_mean.js","../../src/approx_equal.js","../../src/bernoulli_distribution.js","../../src/binomial_distribution.js","../../src/bisect.js","../../src/chi_squared_goodness_of_fit.js","../../src/chunk.js","../../src/coefficient_of_variation.js","../../src/combinations.js","../../src/combinations_replacement.js","../../src/combine_variances.js","../../src/cumulative_std_logistic_probability.js","../../src/cumulative_std_normal_probability.js","../../src/equal_interval_breaks.js","../../src/extent.js","../../src/extent_sorted.js","../../src/gamma.js","../../src/geometric_mean.js","../../src/harmonic_mean.js","../../src/linear_regression.js","../../src/linear_regression_line.js","../../src/log_average.js","../../src/logit.js","../../src/max_sorted.js","../../src/median_sorted.js","../../src/min_sorted.js","../../src/mode.js","../../src/mode_fast.js","../../src/permutation_test.js","../../src/permutations_heap.js","../../src/poisson_distribution.js","../../src/probit.js","../../src/product.js","../../src/quantile_rank.js","../../src/r_squared.js","../../src/sample_kurtosis.js","../../src/sample_rank_correlation.js","../../src/sample_skewness.js","../../src/sample_with_replacement.js","../../src/silhouette_metric.js","../../src/subtract_from_mean.js","../../src/t_test.js","../../src/t_test_two_sample.js","../../src/wilcoxon_rank_sum.js","../../src/z_score.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/axios/lib/defaults.js","../../../node_modules/axios/lib/cancel/Cancel.js","../../../node_modules/visual-insights/build/esm/sampling/index.js","../../../node_modules/visual-insights/build/esm/ml/classification/knn.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../node_modules/axios/index.js","../../../node_modules/cube-core/built/utils/aggregation.js","../../../node_modules/axios/lib/helpers/bind.js","../../../node_modules/axios/lib/helpers/buildURL.js","../../../node_modules/axios/lib/core/enhanceError.js","../../../node_modules/axios/lib/adapters/xhr.js","../../../node_modules/axios/lib/core/createError.js","../../../node_modules/axios/lib/cancel/isCancel.js","../../../node_modules/axios/lib/core/mergeConfig.js","../../../node_modules/axios/lib/env/data.js","../../../node_modules/visual-insights/build/esm/insights/intention/groups.js","../../../node_modules/visual-insights/build/esm/insights/dev.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/dataGraph.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/workerCollection.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/select.js","../../../node_modules/visual-insights/build/esm/index.js","../../../node_modules/cube-core/built/core/index.js","../../../node_modules/cube-core/built/core/periodCube.js","../../../node_modules/cube-core/built/core/momentCube.js","../../../node_modules/cube-core/built/utils/transform.js","../../../node_modules/regenerator-runtime/runtime.js","../../../node_modules/axios/lib/axios.js","../../../node_modules/axios/lib/core/Axios.js","../../../node_modules/axios/lib/core/InterceptorManager.js","../../../node_modules/axios/lib/core/dispatchRequest.js","../../../node_modules/axios/lib/core/transformData.js","../../../node_modules/process/browser.js","../../../node_modules/axios/lib/helpers/normalizeHeaderName.js","../../../node_modules/axios/lib/core/settle.js","../../../node_modules/axios/lib/helpers/cookies.js","../../../node_modules/axios/lib/core/buildFullPath.js","../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../node_modules/axios/lib/helpers/combineURLs.js","../../../node_modules/axios/lib/helpers/parseHeaders.js","../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../node_modules/axios/lib/helpers/validator.js","../../../node_modules/axios/lib/cancel/CancelToken.js","../../../node_modules/axios/lib/helpers/spread.js","../../../node_modules/axios/lib/helpers/isAxiosError.js","workers/cluster.worker.js?worker","workers/timer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_createForOfIteratorHelper","allowArrayLike","it","iterator","Array","isArray","length","F","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","chiSquared","nestTree","xSet","ySet","rowSums","Map","colSums","totalSum","x","set","y","node","counter","chis","observed","expected","crammersV","dataSource","fieldX","fieldY","Set","len","record","add","has","Math","sqrt","min","size","pearsonCC","xBar","sum","map","row","yBar","pow","arr","mapPositive","a","abs","filter","getCombination","elements","start","end","ans","combine","push","normalize","frequencyList","entropy","probabilityList","log2","getRangeBy","by","maxValue","Infinity","minValue","max","oneDLinearRegression","X","Y","this","normalizedDataSource","dimensions","valueSets","forEach","dim","index","toString","normalizedRecord","normalizeRecord","keys","mea","meanX","meanY","beta","mean","numerator","denominator","getRegressionEquation","alpha","SSR","SST","yHat","E","cumulativeLogisticDistribution","r_squared","pValue","SPLITOR","SFMapper","count","getAggregator","op","groupBy","rows","groups","join","stdAggregate","props","measures","ops","result","group","aggs","meaIndex","opFunc","dimValues","split","dimIndex","getAggHashKey","values","stdAggregateFromCuboid","generalOpNames","includes","generalOps","opName","opIndex","sumByCol","distMergeBy","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_toConsumableArray","arrayLikeToArray","iter","from","unsupportedIterableToArray","CHANNEL","maxDimensionNumber","maxMeasureNumber","EULER","PERCENT_THRESHOLD_AS_UNIQUE_INDEX","DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP","DEFAULT_BIN_NUM","BIN_NUM_FOR_ANALYTIC","VERSION","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","descriptor","configurable","writable","_createClass","protoProps","staticProps","deepcopy","data","JSON","parse","stringify","copyData","isFieldCategory","fieldName","every","isFieldContinous","TIME_RULES","isFieldTime","isNaN","Number","some","rule","test","memberCount","field","member","entries","groupContinousField","newField","groupNumber","item","segWidth","ranges","left","right","precision","log10","rangeIndex","findIndex","range","toPrecision","groupCategoryField","members","sort","b","v","_slicedToArray","_arr","_n","_d","_s","_i","turnAdjMatrix2List","matrix","edges","j","find","parents","union","n1","n2","p1","p2","findWithEffect","sizes","unionWithEffect","size1","size2","kruskalMST","threshold","edgesInMST","inCutEdge","edge","cluster","method","groupMaxSize","limitSize","kruskalWithLimitSize","kruskal","meas","Outier","IsolationForest","treeNumber","Psi","ceil","sampleSize","floor","limitHeight","iForest","normalizeDimensions","normalizedSampleData","depth","rand","random","randField","dimLength","meaLength","randValue","leftSubData","rightSubData","buildIsolationTree","log","iTree","pathLength","nodeSize","AFS","getPathLength","samples","uniformSampling","recordScoreList","recordScore","avgPathLength","KNN","CrammersVThreshold","PearsonCorrelation","strong","weak","require","val","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","obj","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","assignValue","slice","extend","thisArg","trim","str","replace","stripBOM","content","charCodeAt","geomTypes","interval","line","area","point","path","density","findBestField","type","fieldRankList","semanticType","choosen","encoding","fields","spec","visualElements","position","color","shape","opacity","facets","page","highFacets","priority","fieldLeft","typeIndex","channelList","channel","specification","dataView","impurity","analyticType","originDimField","dimCardinality","features","unique","geomType","geom","schema","isUniformDistribution","_unsupportedIterableToArray","minLen","__assign","index_1","transform_1","aggregation_1","operatorMap","sum_unsafe","createCube","_a","_b","aggFunc","_c","factTable","periodCube","momentCube","default","asFields","operator","cube","table","tree2Table","as","__export","MIN_QUAN_MEMBER_SIZE","getFieldType","getFieldEntropy","maxEntropy","getFloatFieldEntropy","_max","_min","rangeStep","rangeCounts","fill","pl","colKey","opKey","_sum","dist","originalRange","fixRange","bins","recordBins","let","transition","correction","Error","sumNthPowerDeviations","const","tempValue","meanValue","variance","standardDeviation","modeSorted","sorted","last","NaN","maxSeen","seenThis","numericSort","sumSimple","quantileSorted","idx","quickselect","k","z","exp","sd","swap","tmp","quantile","copy","indices","quantileIndex","compare","stack","pop","quantileSelect","results","quantileRankSorted","mid","lo","hi","u","interquartileRange","q1","q2","median","medianAbsoluteDeviation","medianValue","medianAbsoluteDeviations","shuffleInPlace","randomSource","temporary","shuffle","sample","makeMatrix","columns","column","uniqueCountSorted","lastSeenValue","uniqueValueCount","ssq","sums","sumsOfSquares","sji","muji","fillMatrixColumn","iMin","iMax","backtrackMatrix","jlow","ssqjlow","ssqj","jhigh","sampleCovariance","xmean","ymean","sampleVariance","sampleStandardDeviation","sampleVarianceX","sampleCorrelation","combineMeans","mean1","mean2","meanSimple","rootMeanSquare","sumOfSquares","BayesianClassifier","totalCount","train","category","score","odds","oddsSums","combination","PerceptronModel","weights","bias","predict","label","prediction","gradient","epsilon","factorial","accumulator","COEFFICIENTS","LOGSQRT2PI","PI","chiSquaredDistributionTable","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100","SQRT_2PI","kernels","gaussian","bandwidthMethods","nrd","stddev","iqr","kernelDensityEstimation","kernel","bandwidthMethod","kernelFn","bandwidth","cumulativeDistribution","round","standardNormalTable","errorFunction","tau","inverseErrorFunction","inv","sign","euclideanDistance","diff","labelPoints","points","centroids","minDist","MAX_VALUE","calculateCentroids","labels","numCluster","dimension","counts","numPoints","current","centroid","calculateChange","total","silhouette","groupings","numGroups","distances","meanDistanceFromPointToGroup","meanDistanceToNearestGroup","which","relativeError","actual","newValue","tolerance","trials","probability","cumulativeProbability","cells","binomialCoefficient","func","maxIterations","errorTolerance","output","distributionType","significance","hypothesizedDistribution","observedFrequencies","expectedFrequencies","degreesOfFreedom","chunkSize","nClusters","nValues","shift","shiftedValue","clusters","clusterRight","clusterLeft","combinations","subI","subsetCombinations","combinationList","unshift","combinationsReplacement","concat","variance1","variance2","newMean","absZ","toFixed","nClasses","theMin","theMax","breaks","breakSize","gamma","isInteger","sin","seriesDenom","g","reciprocalSum","oldCentroids","newCentroids","change","dataLength","sumX","sumY","sumXX","sumXY","mb","modeCount","newCount","sampleX","sampleY","alternative","testStatistic","testStatDsn","allData","midIndex","permLeft","permRight","permTestStatistic","numExtremeTStats","indexes","permutations","swapFrom","temp","lambda","factorialX","average","secondCentralMoment","fourthCentralMoment","xIndexes","pair","yIndexes","xRanks","yRanks","sumSquaredDeviations","sumCubedDeviations","besselsCorrection","theSampleStandardDeviation","expectedValue","difference","sampleVarianceY","weightedVariance","pooledSamples","rank","tiedRanks","replaceRanksInPlace","rankSum","_defineProperty","_arrayLikeToArray","arr2","utils","normalizeHeaderName","enhanceError","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","rawValue","parser","encoder","stringifySafely","transformResponse","strictJSONParsing","responseType","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","Cancel","message","__CANCEL__","sampleIndexes","seed","linearCongruentialGenerator","K","targetRecord","dimFeatures","meaFeatures","dimWeights","meaWeights","dimSets","rIndex","dis","feature","targets","neighbors","tar","votes","nei","mostCount","mostFeature","vote","indexOf","valueParser","_getPrototypeOf","setPrototypeOf","__proto__","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","Super","NewTarget","_setPrototypeOf","_inherits","subClass","superClass","subset","_loop_1","_loop_2","MEASURES","cnts","_loop_3","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","parts","toISOString","hashmarkIndex","config","code","request","response","isAxiosError","toJSON","description","number","fileName","lineNumber","columnNumber","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","signal","removeEventListener","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","toUpperCase","onreadystatechange","readyState","responseURL","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","config1","config2","getMergedValue","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","DefaultIWorker","console","periodCube_1","momentCube_1","__read","ar","__spread","__values","Node","children","_rawData","cache","aggData","_aggData","rawData","clearCache","e_1","children_1","children_1_1","child","e_1_1","return","getNode","search","level","e_2","children_2","children_2_1","childName","e_2_1","tree","e_3","children_3","children_3_1","e_3_1","buildTree","insertNode","aggTree","e_4","children_4","children_4_1","e_4_1","aggNode","e_5","children_5","children_5_1","e_5_1","setData","assign","dfs","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","Axios","mergeConfig","axios","createInstance","defaultConfig","instanceConfig","CancelToken","isCancel","version","all","promises","spread","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","boolean","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","promise","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","handlers","use","options","eject","id","h","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","write","expires","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","substr","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","hash","hostname","port","pathname","location","requestURL","thing","deprecatedWarnings","formatMessage","opt","desc","opts","warn","allowUnknown","executor","resolvePromise","token","_listeners","onfulfilled","_resolve","listener","splice","callback","payload","task","spaces","maxGroupNumber","space","kruskalWithFullMST","measureGroups","postMessage","success","startTime","getTime","cost"],"mappings":"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","file":"static/js/cluster.worker.84bf965c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 70);\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * chiSquared implementation using adjacency list(spare graph), which is ableto handle fields with large cardinality.\n * @param nestTree hash tree with depth = 2, represents the relationship between var x and var y.\n * @param xSet value set of var x.\n * @param ySet value set of var y.\n */\nexport function chiSquared(nestTree, xSet, ySet) {\n    if (typeof nestTree === 'undefined' || typeof xSet === 'undefined' || typeof ySet === 'undefined') {\n        return 0;\n    }\n    let rowSums = new Map();\n    let colSums = new Map();\n    let totalSum = 0;\n    for (let x of xSet) {\n        rowSums.set(x, 0);\n    }\n    for (let y of ySet) {\n        colSums.set(y, 0);\n    }\n    for (let [x, node] of nestTree) {\n        for (let [y, counter] of node) {\n            rowSums.set(x, rowSums.get(x) + counter);\n            colSums.set(y, colSums.get(y) + counter);\n            totalSum += counter;\n        }\n    }\n    let chis = 0;\n    for (let [x, node] of nestTree) {\n        for (let [y, observed] of node) {\n            let expected = rowSums.get(x) * colSums.get(y) / totalSum;\n            chis += (observed - expected) ** 2 / expected;\n        }\n    }\n    return chis;\n}\n/**\n * crammersV implementation using adjacency list(spare graph), which is ableto handle fields with large cardinality.\n * @param dataSource array of records.\n * @param fieldX field key of var X.\n * @param fieldY field key of varY.\n */\nexport const crammersV = (dataSource, fieldX, fieldY) => {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    const V = Math.sqrt(chis / (dataSource.length * Math.min(xSet.size - 1, ySet.size - 1)));\n    return V;\n};\nexport function chiSquaredFromDataSource(dataSource, fieldX, fieldY) {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    return chis;\n}\n/**\n * Pearson correlation coefficient\n * @param dataSource array of records\n * @param fieldX field key of var X.\n * @param fieldY field key of var Y.\n */\nexport const pearsonCC = (dataSource, fieldX, fieldY) => {\n    let r = 0;\n    let xBar = sum(dataSource.map(row => row[fieldX])) / dataSource.length;\n    let yBar = sum(dataSource.map(row => row[fieldY])) / dataSource.length;\n    r = sum(dataSource.map(row => (row[fieldX] - xBar) * (row[fieldY] - yBar))) /\n        Math.sqrt(sum(dataSource.map(row => Math.pow(row[fieldX] - xBar, 2))) * sum(dataSource.map(row => Math.pow(row[fieldY] - yBar, 2))));\n    return r;\n};\nfunction sum(arr) {\n    let s = 0;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        // if (typeof dataSource[i][field])\n        s += arr[i];\n    }\n    return s;\n}\n// can be used for test. do not delete these code. it is implementation with adj matrix. can be faster in dense graph cases.\n// export function crammersV(dataSource: DataSource, fieldX: string, fieldY: string): number {\n//   const xSet = new Set(dataSource.map(d => d[fieldX]))\n//   const ySet = new Set(dataSource.map(d => d[fieldY]))\n//   const xMembers = [...xSet];\n//   const yMembers = [...ySet];\n//   let xDict = {};\n//   let yDict = {};\n//   for (let i = 0; i < xMembers.length; i++) {\n//     xDict[xMembers[i]] = i;\n//   }\n//   for (let i = 0; i < yMembers.length; i++) {\n//     yDict[yMembers[i]] = i;\n//   }\n//   // let matrix: number[][] = xMembers.map(x => yMembers.map(y => 0));\n//   let matrix: number[][] = [];\n//   for (let  i = 0; i < xMembers.length; i++) {\n//     matrix.push([]);\n//     for (let j = 0; j < yMembers.length; j++) {\n//       matrix[i].push(0);\n//     }\n//   }\n//   for (let record of dataSource) {\n//     matrix[xDict[record[fieldX]]][yDict[record[fieldY]]]++;\n//   }\n//   const chis = chiSquared(matrix);\n//   const V = Math.sqrt(chis / (dataSource.length * Math.min(xMembers.length - 1, yMembers.length - 1)))\n//   return V;\n// }\n// export function chiSquared(matrix: number[][] = [[]]): number {\n//   let rowSums = matrix.map(m => 0);\n//   let colSums = matrix[0].map(m => 0);\n//   let totalSum = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       rowSums[i] += matrix[i][j];\n//       colSums[j] += matrix[i][j];\n//       totalSum += matrix[i][j];\n//     }\n//   }\n//   let chis = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       let observed = matrix[i][j];\n//       let expected = rowSums[i] * colSums[j] / totalSum;\n//       chis += (observed - expected) ** 2 / expected;\n//     }\n//   }\n//   return chis;\n// }\n","export function linearMapPositive(arr) {\n    let min = Math.min(...arr);\n    return arr.map(a => a - min + 1);\n}\nexport function mapPositive(arr) {\n    return arr.map(a => Math.abs(a)).filter(a => a !== 0);\n}\nexport function getCombination(elements, start = 1, end = elements.length) {\n    let ans = [];\n    const combine = (step, set, size) => {\n        if (set.length === size) {\n            ans.push([...set]);\n            return;\n        }\n        if (step >= elements.length) {\n            return;\n        }\n        combine(step + 1, [...set, elements[step]], size);\n        combine(step + 1, set, size);\n    };\n    for (let i = start; i <= end; i++) {\n        combine(0, [], i);\n    }\n    return ans;\n}\nexport function normalize(frequencyList) {\n    let sum = 0;\n    for (let f of frequencyList) {\n        sum += f;\n    }\n    return frequencyList.map(f => f / sum);\n}\nexport const entropy = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * Math.log2(p);\n    }\n    return -sum;\n};\nexport const gini = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * (1 - p);\n    }\n    return sum;\n};\nexport function getRangeBy(dataSource, by) {\n    let maxValue = -Infinity;\n    let minValue = Infinity;\n    for (let row of dataSource) {\n        maxValue = Math.max(row[by], maxValue);\n        minValue = Math.min(row[by], minValue);\n    }\n    return [minValue, maxValue];\n}\n","export class oneDLinearRegression {\n    constructor(dataSource, X, Y) {\n        this.dataSource = dataSource;\n        this.X = X;\n        this.Y = Y;\n        this.normalizedDataSource = dataSource;\n    }\n    normalizeDimensions(dimensions) {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.dataSource.forEach(record => {\n            dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record, dimensions);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record, dimensions) {\n        let normalizedRecord = {};\n        Object.keys(record).forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    mean() {\n        let meanX = 0;\n        let meanY = 0;\n        if (this.normalizedDataSource.length === 0)\n            return [meanX, meanY];\n        this.normalizedDataSource.forEach((record, index) => {\n            meanX += record[this.X];\n            meanY += record[this.Y];\n        });\n        meanX /= this.normalizedDataSource.length;\n        meanY /= this.normalizedDataSource.length;\n        return [meanX, meanY];\n    }\n    getRegressionEquation() {\n        if (this.normalizedDataSource.length === 0)\n            return [0, 0];\n        const [meanX, meanY] = this.mean();\n        let beta = 0;\n        let alpha = 0;\n        let numerator = 0;\n        let denominator = 0;\n        this.normalizedDataSource.forEach(record => {\n            numerator += (record[this.X] - meanX) * (record[this.Y] - meanY);\n            denominator += (record[this.X] - meanX) ** 2;\n        });\n        beta = numerator / denominator;\n        alpha = meanY - meanX * beta;\n        return [alpha, beta];\n    }\n    r_squared() {\n        const [, meanY] = this.mean();\n        const [alpha, beta] = this.getRegressionEquation();\n        let SSR = 0;\n        let SST = 0;\n        this.normalizedDataSource.forEach(record => {\n            let x = record[this.X];\n            let y = record[this.Y];\n            let yHat = x * beta + alpha;\n            SSR += (yHat - meanY) ** 2;\n            SST += (y - meanY) ** 2;\n        });\n        return SSR / SST;\n    }\n    cumulativeLogisticDistribution(x) {\n        const lambda = 2;\n        const mu = 0.2;\n        return 1 / (1 + Math.pow(Math.E, -(x - mu) / lambda));\n    }\n    pValue() {\n        const [, beta] = this.getRegressionEquation();\n        const value = this.cumulativeLogisticDistribution(Math.abs(beta));\n        if (value > 0.5) {\n            return 2 * (1 - value);\n        }\n        else {\n            return 2 * value;\n        }\n    }\n    significance() {\n        let r_squared = this.r_squared();\n        let p_value = this.pValue();\n        return r_squared * (1 - p_value);\n    }\n}\n","import { min, max, sum, mean } from 'simple-statistics';\nimport { distMergeBy, sumByCol } from './aggregators';\nconst SPLITOR = '_join_';\nconst count = function (x) {\n    return x.length;\n};\nexport const SFMapper = {\n    sum,\n    max,\n    mean,\n    min,\n    count\n};\nexport function getAggregator(op) {\n    const func = SFMapper[op] || sum;\n    return func;\n}\nexport function groupBy(rows, by) {\n    const groups = new Map();\n    for (let record of rows) {\n        const key = by.map((d) => record[d]).join(SPLITOR);\n        if (!groups.has(key)) {\n            groups.set(key, []);\n        }\n        groups.get(key).push(record);\n    }\n    return groups;\n}\nexport function simpleAggregate(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            const opFunc = getAggregator(ops[meaIndex]);\n            aggs[mea] = opFunc(group.map(r => r[mea]));\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function stdAggregate(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            aggs[mea] = {};\n            ops.forEach(op => {\n                const opFunc = getAggregator(op);\n                aggs[mea][op] = opFunc(group.map((r) => r[mea]));\n            });\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function getAggHashKey(values) {\n    return values.join(SPLITOR);\n}\nexport function stdAggregateByGroups(props) {\n    const { groups, measures, ops, dimensions } = props;\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            aggs[mea] = {};\n            ops.forEach(op => {\n                const opFunc = getAggregator(op);\n                aggs[mea][op] = opFunc(group.map((r) => r[mea]));\n            });\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function stdAggregateFromCuboid(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    // TODO: need a formal solution for distributive\\algebraic\\holistic aggregators.\n    const generalOpNames = ops.filter(op => !(['sum', 'count', 'mean', 'dist'].includes(op)));\n    const generalOps = generalOpNames.map(opName => getAggregator(opName));\n    for (let [key, group] of groups) {\n        const aggs = {};\n        for (let meaIndex = 0; meaIndex < measures.length; meaIndex++) {\n            const mea = measures[meaIndex];\n            aggs[mea] = {};\n            generalOps.forEach((op, opIndex) => {\n                const opName = generalOpNames[opIndex];\n                aggs[mea][opName] = op(group.map((r) => r[mea][opName]));\n            });\n            // 讨论：描述的简洁性 vs 性能\n            aggs[mea][\"sum\"] = sumByCol(group, mea, 'sum');\n            aggs[mea][\"count\"] = sumByCol(group, mea, 'count');\n            // aggs[mea][\"sum\"] = getAggregator('sum')(group.map((r) => r[mea][\"sum\"]));\n            // aggs[mea][\"count\"] = getAggregator('sum')(group.map((r) => r[mea]['count']));\n            aggs[mea][\"mean\"] = aggs[mea]['sum'] / aggs[mea]['count'];\n            aggs[mea]['dist'] = distMergeBy(group, mea, 'dist');\n        }\n        const dimValues = key.split(SPLITOR);\n        for (let dimIndex = 0; dimIndex < dimensions.length; dimIndex++) {\n            aggs[dimensions[dimIndex]] = dimValues[dimIndex];\n        }\n        result.push(aggs);\n    }\n    return result;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const CHANNEL = {\n    maxDimensionNumber: 8,\n    maxMeasureNumber: 6\n};\nexport const EULER = 0.5772156649;\nexport const PERCENT_THRESHOLD_AS_UNIQUE_INDEX = 0.95;\nexport const DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP = 40;\nexport const DEFAULT_BIN_NUM = 8;\nexport const BIN_NUM_FOR_ANALYTIC = DEFAULT_BIN_NUM * 2;\nexport const VERSION = '0.7.5';\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const JOIN_SYMBOL = '_';\nconst MAGIC_NUMBER = 5;\nfunction deepcopy(data) {\n    return JSON.parse(JSON.stringify(data));\n}\nfunction copyData(data) {\n    return data.map(r => ({\n        ...r\n    }));\n}\nfunction isFieldCategory(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'string'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldContinous(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'number'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldNumeric(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return !isNaN(record[fieldName])\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nconst TIME_RULES = [\n    /^[0-9]{2,4}[-/][0-9]{1,2}([-/][0-9]{1,2})?$/,\n    /^[0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4}$/,\n    /^[0-9]{4}[0-9]{2}[0-9]{2}$/,\n    /^[0-9]{2,4}[-/][0-9]{1,2}[-/][0-9]{1,2} [0-9]{1,2}:[0-9]{1-2}:[0-9]{1-2}$/ // YYYY-MM-DD HH:mm:ss\n];\nfunction isFieldTime(dataSource, fieldName) {\n    return dataSource.every(record => {\n        // todo: tmp solotion here.\n        if (!isNaN(Number(record[fieldName])) && Number(record[fieldName]) >= 1800 && Number(record[fieldName]) <= 2200) {\n            return true;\n        }\n        return (typeof record[fieldName] === 'string'\n            // && /^[0-9]{0,4}[-/][0-9]{0,2}([-/][0-9]{0,2}$)?/.test(record[fieldName]))\n            && TIME_RULES.some(rule => rule.test(record[fieldName])))\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction aggregate({ dataSource, fields, bys, method = 'sum' }) {\n    let tmp = [];\n    for (let by of bys) {\n        let map = new Map();\n        for (let record of dataSource) {\n            let key = JSON.stringify(fields.map(field => record[field]));\n            if (!map.has(key)) {\n                map.set(key, 0);\n            }\n            map.set(key, map.get(key) + record[by]);\n        }\n        for (let [key, value] of map) {\n            let row = {\n                index: key,\n                [by]: value\n            };\n            let dims = JSON.parse(key);\n            for (let i = 0; i < fields.length; i++) {\n                row[fields[i]] = dims[i];\n            }\n            tmp.push(row);\n        }\n    }\n    let ans = new Map();\n    for (let record of tmp) {\n        if (!ans.has(record.index)) {\n            ans.set(record.index, {});\n        }\n        ans.set(record.index, { ...ans.get(record.index), ...record });\n    }\n    return [...ans.values()];\n}\nfunction memberCount(dataSource, field) {\n    const counter = new Map();\n    for (let row of dataSource) {\n        let member = row[field];\n        if (!counter.has(member)) {\n            counter.set(member, 0);\n        }\n        counter.set(member, counter.get(member) + 1);\n    }\n    return [...counter.entries()];\n}\nfunction groupContinousField({ dataSource, field, newField = `${field}(con-group)`, groupNumber }) {\n    // const members = memberCount(dataSource, field);\n    // todo: outlier detection\n    const values = dataSource.map(item => item[field]);\n    const max = Math.max(...values); // Number.EPSILON * ;\n    const min = Math.min(...values);\n    const segWidth = (max - min) / groupNumber;\n    let ranges = [];\n    for (let i = 0; i < groupNumber; i++) {\n        let left = min + i * segWidth;\n        let right = min + (i + 1) * segWidth;\n        ranges.push([left, right]);\n    }\n    ranges[0][0] = -Infinity;\n    ranges[ranges.length - 1][1] = Infinity;\n    let precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n    for (let i = 0; i < dataSource.length; i++) {\n        let record = dataSource[i];\n        let rangeIndex = ranges.findIndex(r => (r[0] <= record[field] && record[field] < r[1]));\n        let range = ranges[rangeIndex];\n        if (typeof range !== 'undefined') {\n            record[newField] = `${rangeIndex + 1}:[${Number(range[0].toPrecision(precision))}, ${Number(range[1].toPrecision(precision))})`;\n        }\n        else {\n            record[newField] = 'null';\n        }\n    }\n    return dataSource;\n}\nfunction groupCategoryField({ dataSource, field, newField = `${field}(cat-group)`, groupNumber }) {\n    // auto category should obey Power law distrubution.\n    let members = memberCount(dataSource, field);\n    members.sort((a, b) => b[1] - a[1]);\n    let sum = members.map(v => v[1]);\n    groupNumber = members.length;\n    for (let i = sum.length - 2; i >= 0; i--) {\n        sum[i] = sum[i + 1] + sum[i];\n    }\n    for (let i = 0; i < members.length - 2; i++) {\n        // strict mode\n        // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n        if (members[i][1] * MAGIC_NUMBER >= sum[i + 1] && members[i + 1][1] / MAGIC_NUMBER < sum[i + 2]) {\n            groupNumber = i + 2;\n            break;\n        }\n    }\n    // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n    if (groupNumber === members.length) {\n        return dataSource.map(record => {\n            return {\n                ...record,\n                [newField]: record[field]\n            };\n        });\n    }\n    let set = new Set();\n    for (let i = groupNumber - 1; i < members.length; i++) {\n        set.add(members[i][0]);\n    }\n    for (let record of dataSource) {\n        if (set.has(record[field])) {\n            record[newField] = 'others';\n        }\n        else {\n            record[newField] = record[field];\n        }\n    }\n    return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\nfunction DKL(p1List, p2List) {\n    let sum = 0;\n    const len = Math.max(p1List.length, p2List.length);\n    for (let i = 0; i < len; i++) {\n        let p1 = p1List[i] || 0;\n        let p2 = p2List[i] || 0;\n        sum += p1 * Math.log2(p1 / p2);\n    }\n    return sum;\n}\nfunction isFieldUnique(dataSource, field) {\n    let set = new Set();\n    let validCount = 0;\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        if (dataSource[i][field] !== undefined && dataSource[i][field] !== null && dataSource[i][field] !== '') {\n            validCount++;\n            set.add(dataSource[i][field]);\n        }\n    }\n    if (set.size === validCount)\n        return true;\n    return false;\n}\nexport { deepcopy, copyData, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL, isFieldUnique };\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n    // only for the special matrix here(corelational matrix)\n    let edges = [];\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++) {\n            edges.push([[i, j], Math.abs(matrix[i][j])]);\n        }\n    }\n    return edges;\n}\nfunction find(parents, n) {\n    return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\nfunction union(parents, n1, n2) {\n    let p1 = find(parents, n1);\n    let p2 = find(parents, n2);\n    parents[p1] = p2;\n    // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n    // may check and prove whether it's necessary.\n    find(parents, n1);\n    find(parents, n2);\n}\nfunction findWithEffect(parents, sizes, n) {\n    if (parents[n] === n) {\n        return n;\n    }\n    parents[n] = findWithEffect(parents, sizes, parents[n]);\n    sizes[n] = sizes[parents[n]];\n    return parents[n];\n}\nfunction unionWithEffect(parents, sizes, n1, n2) {\n    let p1 = findWithEffect(parents, sizes, n1);\n    let p2 = findWithEffect(parents, sizes, n2);\n    let size1 = sizes[p1];\n    let size2 = sizes[p2];\n    parents[p1] = p2;\n    sizes[p1] = sizes[p2] = size1 + size2;\n    findWithEffect(parents, sizes, n1);\n    findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\nfunction kruskal(matrix, groupNumber, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\n// todo: delete kruskal with limit size, use largest size to limit it(uncontrolled group number but better), need discuss.\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\nfunction kruskalWithLimitSize(matrix, limitSize) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\nexport function kruskalMSTWithLimitSize(matrix, limitSize = 4) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    const cloneParents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n                    edgesInMST.push([edge[0], edge[1], true]);\n                    union(cloneParents, edge[0][0], edge[0][1]);\n                }\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], false]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n            cloneParents[i] = find(cloneParents, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups: parents };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\nexport function kruskalMST(matrix, groupNumber = 4, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    let groups = [...parents];\n    let inCutEdge = false;\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], inCutEdge]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        // TODO:\n        // + use kruskalMST instead of kruskal.\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            inCutEdge = true;\n        }\n        else {\n            groups = [...parents];\n        }\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups };\n}\nfunction cluster({ matrix, measures, method = 'kruskal', groupMaxSize = 4, limitSize = false, threshold = 0 }) {\n    // const groups = kruskal({ matrix, groupMaxSize });\n    let groups;\n    if (limitSize) {\n        groups = kruskalWithLimitSize(matrix, groupMaxSize);\n    }\n    else {\n        groups = kruskal(matrix, groupMaxSize, threshold);\n    }\n    let ans = [];\n    for (let meas of groups.values()) {\n        ans.push(meas.map(meaIndex => measures[meaIndex]));\n    }\n    return ans;\n}\nexport default cluster;\n","import * as Cluster from './cluster/index';\nimport { KNN } from './classification/knn';\nimport { IsolationForest } from './outlier/isolationForest';\nconst Outier = {\n    IsolationForest\n};\nconst Classification = {\n    KNN\n};\nexport { Cluster, Outier, Classification };\n","import { uniformSampling } from \"../../sampling\";\nimport { EULER } from \"../../constant\";\nexport class IsolationForest {\n    constructor(dimensions, measures, dataSource, treeNumber = 100, Psi = 256) {\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.dataSource = dataSource;\n        if (dataSource.length < Psi) {\n            this.treeNumber = Math.max(1, Math.ceil(Psi / 50));\n            this.sampleSize = Math.max(2, Math.floor(dataSource.length / 2));\n        }\n        else {\n            this.treeNumber = treeNumber;\n            this.sampleSize = Psi;\n        }\n        this.limitHeight = Math.ceil(Math.log2(this.sampleSize));\n        this.iForest = [];\n        this.normalizeDimensions();\n    }\n    normalizeDimensions() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.ranges = [];\n        this.dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    buildIsolationTree(normalizedSampleData, depth) {\n        if (depth >= this.limitHeight || normalizedSampleData.length <= 1) {\n            return null;\n        }\n        else {\n            let rand = Math.random();\n            let randField = this.measures[0] || this.dimensions[0];\n            let dimLength = this.dimensions.length;\n            let meaLength = this.measures.length;\n            let randValue = 0;\n            if (rand >= dimLength / (dimLength + meaLength)) {\n                let index = Math.floor(Math.random() * meaLength) % meaLength;\n                randField = this.measures[index];\n                randValue = this.ranges[index][0] + (this.ranges[index][1] - this.ranges[index][0]) * Math.random();\n            }\n            else {\n                let index = Math.floor(Math.random() * dimLength) % dimLength;\n                randField = this.dimensions[index];\n                randValue = Math.floor(this.valueSets[index].size * Math.random()) % this.valueSets[index].size;\n            }\n            // random in range not in distribution.\n            // let randValue = normalizedSampleData[Math.floor(Math.random() * normalizedSampleData.length) % normalizedSampleData.length][randField];\n            let leftSubData = [];\n            let rightSubData = [];\n            for (let record of normalizedSampleData) {\n                if (record[randField] < randValue) {\n                    leftSubData.push(record);\n                }\n                else {\n                    rightSubData.push(record);\n                }\n            }\n            let node = {\n                field: randField,\n                value: randValue,\n                size: normalizedSampleData.length\n            };\n            node.left = this.buildIsolationTree(leftSubData, depth + 1);\n            node.right = this.buildIsolationTree(rightSubData, depth + 1);\n            return node;\n        }\n    }\n    /**\n     * average unsuccessful searches in BST (Preiss, 1999)\n     * @param Psi\n     */\n    AFS(Psi) {\n        if (Psi > 2)\n            return 2 * (Math.log(Psi - 1) + EULER) - 2 * (Psi - 1) / Psi;\n        if (Psi === 2)\n            return 1;\n        return 0;\n    }\n    getPathLength(record, iTree, pathLength, nodeSize) {\n        if (iTree === null) {\n            return pathLength + this.AFS(nodeSize);\n        }\n        let value = record[iTree.field];\n        if (value < iTree.value) {\n            return this.getPathLength(record, iTree.left, pathLength + 1, iTree.size);\n        }\n        else {\n            return this.getPathLength(record, iTree.right, pathLength + 1, iTree.size);\n        }\n    }\n    buildIsolationForest() {\n        this.iForest = [];\n        for (let i = 0; i < this.treeNumber; i++) {\n            let samples = uniformSampling(this.normalizedDataSource, this.sampleSize);\n            let iTree = this.buildIsolationTree(samples, 0);\n            this.iForest.push(iTree);\n        }\n        return this.iForest;\n    }\n    // public evaluate (record: Record): number {\n    // }\n    estimateOutierScore() {\n        this.recordScoreList = [];\n        this.normalizedDataSource.forEach(record => {\n            let recordScore = 0;\n            let avgPathLength = 0;\n            this.iForest.forEach(iTree => {\n                avgPathLength += this.getPathLength(record, iTree, 0, this.sampleSize);\n            });\n            avgPathLength /= this.iForest.length;\n            recordScore = Math.pow(2, -(avgPathLength / this.AFS(this.sampleSize)));\n            this.recordScoreList.push(recordScore);\n        });\n        return this.recordScoreList;\n    }\n}\n","export const TopKSingleField = 6;\nexport const TopKView = 15;\nexport const Depth = 4;\nexport const VisualLimit = 8;\nexport const TopKPercentField = 0.8;\nexport const CrammersVThreshold = 0.3;\nexport const PearsonCorrelation = {\n    strong: 0.5,\n    weak: 0.3\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","export const geomTypes = {\n    interval: [0, 10],\n    line: [11, Infinity],\n    area: [11, Infinity],\n    point: [0, 1000],\n    path: [0, 100],\n    density: [1001, Infinity],\n};\nfunction getVisualElements() {\n    return {\n        position: 2,\n        color: 1,\n        size: 1,\n        shape: 1,\n        opacity: 1,\n        facets: 2,\n        page: 1,\n        filter: 1,\n        highFacets: 1000\n    };\n}\nfunction findBestField(type, fieldRankList) {\n    for (let i = fieldRankList.length - 1; i >= 0; i--) {\n        if (fieldRankList[i].semanticType === type && !fieldRankList[i].choosen) {\n            return fieldRankList[i];\n        }\n    }\n    return false;\n}\nexport function encoding(fields) {\n    let spec = {};\n    let visualElements = getVisualElements();\n    let fieldRankList = fields.map((field) => {\n        return {\n            ...field,\n            choosen: false,\n        };\n    });\n    const priority = [\n        [\"quantitative\", [\"position\", \"size\", \"color\", \"highFacets\", \"opacity\", \"filter\"]],\n        [\"temporal\", [\"position\", \"size\", \"opacity\", \"filter\"]],\n        [\"ordinal\", [\"position\", \"color\", \"opacity\", \"facets\", \"size\", \"filter\", \"highFacets\"]],\n        [\"nominal\", [\"position\", \"color\", \"facets\", \"shape\", \"filter\", \"hightFacets\"]],\n    ];\n    let fieldLeft = fieldRankList.length;\n    for (let typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n        let type = priority[typeIndex][0];\n        let channelList = priority[typeIndex][1];\n        for (let i = 0; i < channelList.length && fieldLeft > 0; i++) {\n            let channel = channelList[i];\n            let field;\n            while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n                if (typeof spec[channel] === \"undefined\") {\n                    spec[channel] = [];\n                }\n                spec[channel].push(field.key);\n                visualElements[channel]--;\n                fieldLeft--;\n                field.choosen = true;\n            }\n        }\n    }\n    return spec;\n}\nexport function specification(fields, dataView) {\n    let rankedFields = fields.sort((a, b) => a.impurity - b.impurity);\n    let spec = encoding(rankedFields);\n    const dimensions = new Set(fields.filter(f => f.analyticType === 'dimension').map(f => f.key));\n    const measures = new Set(fields.filter(f => f.analyticType === 'measure').map(f => f.key));\n    // todo: design a better rule for choosing geom type.\n    if (spec.position && spec.position.length === 2) {\n        if ((dimensions.has(spec.position[0]) && measures.has(spec.position[1])) ||\n            (dimensions.has(spec.position[1]) && measures.has(spec.position[0]))) {\n            const dimIndex = dimensions.has(spec.position[0]) ? 0 : 1;\n            const dim = spec.position[dimIndex];\n            const mea = spec.position[(dimIndex + 1) % 2];\n            spec.position = [dim, mea];\n            const originDimField = fields.find((f) => f.key === dim);\n            const dimCardinality = originDimField ? originDimField.features.unique : 0;\n            spec.geomType = [\"interval\", \"line\", \"area\"].filter((geom) => {\n                return dimCardinality >= geomTypes[geom][0] && dimCardinality <= geomTypes[geom][1];\n            });\n            if (originDimField.semanticType === 'nominal') {\n                spec.geomType = [\"interval\"];\n            }\n        }\n        else {\n            // ['point', 'path', 'heatmap']\n            spec.geomType = [\"point\", \"density\"].filter((geom) => {\n                return dataView.length >= geomTypes[geom][0] && dataView.length <= geomTypes[geom][1];\n            });\n        }\n    }\n    return { schema: spec, dataView };\n}\n","import { memberCount } from './utils/index';\nfunction isUniformDistribution(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    return members.every(member => member[1] === 1);\n}\nexport { isUniformDistribution };\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./core/index\");\n// import { JsonRecord } from './types';\nvar transform_1 = require(\"./utils/transform\");\nvar aggregation_1 = require(\"./utils/aggregation\");\nvar operatorMap = {\n    'sum': aggregation_1.sum_unsafe,\n    'mean': aggregation_1.mean,\n    'count': aggregation_1.count,\n};\nfunction copyDataSource(data) {\n    return data.map(function (row) {\n        return __assign({}, row);\n    });\n}\nfunction aggregate(props) {\n    var dimensions = props.dimensions, measures = props.measures, asFields = props.asFields, operator = props.operator, dataSource = props.dataSource;\n    var data = [];\n    var cube = createCube({\n        type: 'moment',\n        aggFunc: operatorMap[operator] || aggregation_1.count,\n        dimensions: dimensions,\n        measures: measures,\n        factTable: dataSource\n    });\n    var table = transform_1.tree2Table({ dimensions: dimensions, measures: measures, cube: cube });\n    table.forEach(function (row) {\n        asFields.forEach(function (as, i) {\n            row[as] = row[measures[i]];\n        });\n    });\n    return table;\n}\nfunction createCube(_a) {\n    var type = _a.type, _b = _a.aggFunc, aggFunc = _b === void 0 ? aggregation_1.count : _b, _c = _a.factTable, factTable = _c === void 0 ? [] : _c, _d = _a.dimensions, dimensions = _d === void 0 ? [] : _d, _e = _a.measures, measures = _e === void 0 ? [] : _e;\n    switch (type) {\n        case \"period\":\n            return new index_1.periodCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        case \"moment\":\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        default:\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n    }\n}\nexports.createCube = createCube;\nexports.default = aggregate;\n__export(require(\"./utils/aggregation\"));\n","import { isFieldTime, isFieldContinous, memberCount, isFieldCategory, deepcopy, groupContinousField, groupCategoryField } from '../utils/index';\nimport { normalize, entropy } from '../statistics/index';\nimport { isUniformDistribution } from '../distribution';\nimport { BIN_NUM_FOR_ANALYTIC } from '../constant';\nconst MIN_QUAN_MEMBER_SIZE = BIN_NUM_FOR_ANALYTIC;\n/**\n *\n * @param dataSource\n * @param field\n * todo: should accept BIField type and calculate the semantic type basic on it.\n */\nexport function getFieldType(dataSource, field) {\n    if (isFieldTime(dataSource, field)) {\n        return 'temporal';\n    }\n    else if (isFieldContinous(dataSource, field)) {\n        // Todo:\n        // here is only a tmp solution. we still hope to divided ordinal type and quantitative type.\n        // if (memberCount(dataSource, field).length > MIN_QUAN_MEMBER_SIZE) {\n        //   return 'quantitative'\n        // } else {\n        //   return 'ordinal';\n        // }\n        // TODO: 讨论这里的严格逻辑\n        // [2022.2.8] 由ordinal字段被当做quantitative字段处理导致的效果变差的问题。\n        // 参考 https://ewgw6z7tk0.feishu.cn/docs/doccnfuCntXAx5K0SA9jOxgKxYe\n        if (memberCount(dataSource, field).length > MIN_QUAN_MEMBER_SIZE) {\n            return 'quantitative';\n        }\n        else {\n            return 'ordinal';\n        }\n        return 'quantitative';\n    }\n    else if (isFieldCategory(dataSource, field)) {\n        // isFieldCategory is a safety checking here, for sometimes dirty data value can be object.\n        return 'nominal';\n    }\n    else {\n        // todo do something(like cleaning)\n        return 'nominal';\n    }\n}\nexport function getAllFieldTypes(dataSource, fields) {\n    let fieldsWithType = [];\n    for (let field of fields) {\n        fieldsWithType.push({\n            name: field,\n            type: getFieldType(dataSource, field)\n        });\n    }\n    return fieldsWithType;\n}\nexport function getFieldDistribution(dataSource, field) {\n    let members = memberCount(dataSource, field);\n    // members.sort((a, b) => a[1] - b[1]);\n    return members.map(m => {\n        return { memberName: m[0], count: m[1] };\n    });\n}\nexport function getAllFieldsDistribution(dataSource, fields) {\n    let fieldsDistribution = [];\n    for (let field of fields) {\n        fieldsDistribution.push({\n            fieldName: field,\n            distribution: getFieldDistribution(dataSource, field)\n        });\n    }\n    return fieldsDistribution;\n}\nexport function getFieldEntropy(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    const frequencyList = members.map(m => m[1]);\n    const probabilityList = normalize(frequencyList);\n    const fieldEntropy = entropy(probabilityList);\n    const maxEntropy = Math.log2(members.length);\n    return {\n        fieldName: field,\n        entropy: fieldEntropy,\n        maxEntropy\n    };\n}\nexport function getFloatFieldEntropy(dataSource, field) {\n    let _max = -Infinity;\n    let _min = Infinity;\n    for (let i = 0; i < dataSource.length; i++) {\n        _max = Math.max(_max, dataSource[i][field]);\n        _min = Math.min(_min, dataSource[i][field]);\n    }\n    const rangeStep = (_max - _min) / BIN_NUM_FOR_ANALYTIC;\n    const rangeCounts = new Array(BIN_NUM_FOR_ANALYTIC + 1).fill(0);\n    for (let i = 0; i < dataSource.length; i++) {\n        const value = dataSource[i][field];\n        const valueIndex = Math.floor((value - _min) / rangeStep);\n        rangeCounts[valueIndex]++;\n    }\n    rangeCounts[BIN_NUM_FOR_ANALYTIC - 1] += rangeCounts[BIN_NUM_FOR_ANALYTIC];\n    const pl = normalize(rangeCounts.slice(0, BIN_NUM_FOR_ANALYTIC));\n    const fieldEntropy = entropy(pl);\n    const maxEntropy = Math.log2(BIN_NUM_FOR_ANALYTIC);\n    return {\n        fieldName: field,\n        entropy: fieldEntropy,\n        maxEntropy\n    };\n}\nexport function getAllFieldsEntropy(dataSource, fields) {\n    let fieldEntropyList = [];\n    for (let field of fields) {\n        fieldEntropyList.push(getFieldEntropy(dataSource, field));\n    }\n    return fieldEntropyList;\n}\nexport function groupFields(dataSource, fields) {\n    let groupedData = deepcopy(dataSource);\n    let newFields = [];\n    for (let field of fields) {\n        let newFieldName = `${field.name}(group)`;\n        if (field.type === 'quantitative' && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE * 2) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupContinousField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: 'ordinal'\n                });\n            }\n        }\n        else if ((field.type === 'ordinal' || field.type === 'nominal') && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupCategoryField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: field.type\n                });\n            }\n        }\n    }\n    return {\n        groupedData,\n        fields,\n        newFields\n    };\n}\n","import { DEFAULT_BIN_NUM } from '../constant';\n/**\n * 只针对 stdAggregateFromCuboid 设计的写法，其他地方不要使用，不具备通用型。\n * @param rows\n * @param colKey\n * @param opKey\n * @returns\n */\nexport function sumByCol(rows, colKey, opKey) {\n    let _sum = 0;\n    for (let i = 0; i < rows.length; i++) {\n        _sum += rows[i][colKey][opKey];\n    }\n    return _sum;\n}\n// for cases when all values are same\nfunction fixRange(originalRange) {\n    if (originalRange[0] === originalRange[1]) {\n        return [originalRange[0], originalRange[1] + 0.1];\n    }\n    return originalRange;\n}\nexport const dist = function (values, originalRange) {\n    const range = fixRange(originalRange);\n    const step = (range[1] - range[0]) / DEFAULT_BIN_NUM;\n    const bins = new Array(DEFAULT_BIN_NUM + 1).fill(0);\n    for (let value of values) {\n        const vIndex = Math.floor((value - range[0]) / step);\n        bins[vIndex]++;\n    }\n    bins[DEFAULT_BIN_NUM - 1] += bins[DEFAULT_BIN_NUM];\n    return bins.slice(0, -1);\n};\nexport function distMergeBy(rows, colKey, opKey) {\n    const bins = new Array(DEFAULT_BIN_NUM).fill(0);\n    for (let i = 0; i < rows.length; i++) {\n        const recordBins = rows[i][colKey][opKey];\n        for (let j = 0; j < bins.length; j++) {\n            bins[j] += recordBins[j];\n        }\n    }\n    return bins;\n}\n","/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x) {\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    let sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    let correction = 0;\n\n    let transition;\n\n    for (let i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += sum - transition + x[i];\n        } else {\n            correction += x[i] - transition + sum;\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nexport default sum;\n","import sum from \"./sum\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x) {\n    if (x.length === 0) {\n        throw new Error(\"mean requires at least one data point\");\n    }\n\n    return sum(x) / x.length;\n}\n\nexport default mean;\n","import mean from \"./mean\";\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n *\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * sumNthPowerDeviations(input, 2) / input.length;\n */\nfunction sumNthPowerDeviations(x, n) {\n    const meanValue = mean(x);\n    let sum = 0;\n    let tempValue;\n    let i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nexport default sumNthPowerDeviations;\n","import sumNthPowerDeviations from \"./sum_nth_power_deviations\";\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x) {\n    if (x.length === 0) {\n        throw new Error(\"variance requires at least one data point\");\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nexport default variance;\n","import variance from \"./variance\";\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x) {\n    if (x.length === 1) {\n        return 0;\n    }\n    const v = variance(x);\n    return Math.sqrt(v);\n}\n\nexport default standardDeviation;\n","/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)` because the input is sorted.\n *\n * @param {Array<number>} sorted a sample of one or more data points\n * @returns {number} mode\n * @throws {Error} if sorted is empty\n * @example\n * modeSorted([0, 0, 1]); // => 0\n */\nfunction modeSorted(sorted) {\n    // Handle edge cases:\n    // The mode of an empty list is undefined\n    if (sorted.length === 0) {\n        throw new Error(\"mode requires at least one data point\");\n    } else if (sorted.length === 1) {\n        return sorted[0];\n    }\n\n    // This assumes it is dealing with an array of size > 1, since size\n    // 0 and 1 are handled immediately. Hence it starts at index 1 in the\n    // array.\n    let last = sorted[0],\n        // store the mode as we find new modes\n        value = NaN,\n        // store how many times we've seen the mode\n        maxSeen = 0,\n        // how many times the current candidate for the mode\n        // has been seen\n        seenThis = 1;\n\n    // end at sorted.length + 1 to fix the case in which the mode is\n    // the highest number that occurs in the sequence. the last iteration\n    // compares sorted[i], which is undefined, to the highest number\n    // in the series\n    for (let i = 1; i < sorted.length + 1; i++) {\n        // we're seeing a new number pass by\n        if (sorted[i] !== last) {\n            // the last number is the new mode since we saw it more\n            // often than the old one\n            if (seenThis > maxSeen) {\n                maxSeen = seenThis;\n                value = last;\n            }\n            seenThis = 1;\n            last = sorted[i];\n            // if this isn't a new number, it's one more occurrence of\n            // the potential mode\n        } else {\n            seenThis++;\n        }\n    }\n    return value;\n}\n\nexport default modeSorted;\n","/**\n * Sort an array of numbers by their numeric value, ensuring that the\n * array is not changed in place.\n *\n * This is necessary because the default behavior of .sort\n * in JavaScript is to sort arrays as string values\n *\n *     [1, 10, 12, 102, 20].sort()\n *     // output\n *     [1, 10, 102, 12, 20]\n *\n * @param {Array<number>} x input array\n * @return {Array<number>} sorted array\n * @private\n * @example\n * numericSort([3, 2, 1]) // => [1, 2, 3]\n */\nfunction numericSort(x) {\n    return (\n        x\n            // ensure the array is not changed in-place\n            .slice()\n            // comparator function that treats input as numeric\n            .sort(function (a, b) {\n                return a - b;\n            })\n    );\n}\n\nexport default numericSort;\n","/**\n * The min is the lowest number in the array.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} minimum value\n * @example\n * min([1, 5, -10, 100, 2]); // => -10\n */\nfunction min(x) {\n    if (x.length === 0) {\n        throw new Error(\"min requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] < value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default min;\n","/**\n * This computes the maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * max([1, 2, 3, 4]);\n * // => 4\n */\nfunction max(x) {\n    if (x.length === 0) {\n        throw new Error(\"max requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default max;\n","/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        value += x[i];\n    }\n    return value;\n}\n\nexport default sumSimple;\n","/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x, p) {\n    const idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error(\"quantile requires at least one data point.\");\n    } else if (p < 0 || p > 1) {\n        throw new Error(\"quantiles must be between 0 and 1\");\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nexport default quantileSorted;\n","/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} [left] left index\n * @param {number} [right] right index\n * @returns {void} mutates input array\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr, k, left, right) {\n    left = left || 0;\n    right = right || arr.length - 1;\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp((2 * z) / 3);\n            let sd = 0.5 * Math.sqrt((z * s * (n - s)) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            const newLeft = Math.max(left, Math.floor(k - (m * s) / n + sd));\n            const newRight = Math.min(\n                right,\n                Math.floor(k + ((n - m) * s) / n + sd)\n            );\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        const t = arr[k];\n        let i = left;\n        let j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default quickselect;\n","import quantileSorted from \"./quantile_sorted\";\nimport quickselect from \"./quickselect\";\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {Array<number> | number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x, p) {\n    const copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        const results = [];\n        // For each requested quantile\n        for (let i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        const idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    const indices = [0];\n    for (let i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    const stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        const r = Math.ceil(stack.pop());\n        const l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        const m = Math.floor((l + r) / 2);\n        quantileSelect(\n            arr,\n            indices[m],\n            Math.floor(indices[l]),\n            Math.ceil(indices[r])\n        );\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len, p) {\n    const idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nexport default quantile;\n","/* eslint no-bitwise: 0 */\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. With a sorted array, leveraging binary search, we can find\n * this information in logarithmic time.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRankSorted([1, 2, 3, 4], 3); // => 0.75\n * quantileRankSorted([1, 2, 3, 3, 4], 3); // => 0.7\n * quantileRankSorted([1, 2, 3, 4], 6); // => 1\n * quantileRankSorted([1, 2, 3, 3, 5], 4); // => 0.8\n */\nfunction quantileRankSorted(x, value) {\n    // Value is lesser than any value in the array\n    if (value < x[0]) {\n        return 0;\n    }\n\n    // Value is greater than any value in the array\n    if (value > x[x.length - 1]) {\n        return 1;\n    }\n\n    let l = lowerBound(x, value);\n\n    // Value is not in the array\n    if (x[l] !== value) {\n        return l / x.length;\n    }\n\n    l++;\n\n    const u = upperBound(x, value);\n\n    // The value exists only once in the array\n    if (u === l) {\n        return l / x.length;\n    }\n\n    // Here, we are basically computing the mean of the range of indices\n    // containing our searched value. But, instead, of initializing an\n    // array and looping over it, there is a dedicated math formula that\n    // we apply below to get the result.\n    const r = u - l + 1;\n    const sum = (r * (u + l)) / 2;\n    const mean = sum / r;\n\n    return mean / x.length;\n}\n\nfunction lowerBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value <= x[mid]) {\n            hi = mid;\n        } else {\n            lo = -~mid;\n        }\n    }\n\n    return lo;\n}\n\nfunction upperBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value >= x[mid]) {\n            lo = -~mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    return lo;\n}\n\nexport default quantileRankSorted;\n","import quantile from \"./quantile\";\n\n/**\n * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range) is\n * a measure of statistical dispersion, or how scattered, spread, or\n * concentrated a distribution is. It's computed as the difference between\n * the third quartile and first quartile.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @returns {number} interquartile range: the span between lower and upper quartile,\n * 0.25 and 0.75\n * @example\n * interquartileRange([0, 1, 2, 3]); // => 2\n */\nfunction interquartileRange(x) {\n    // Interquartile range is the span between the upper quartile,\n    // at `0.75`, and lower quartile, `0.25`\n    const q1 = quantile(x, 0.75);\n    const q2 = quantile(x, 0.25);\n\n    if (typeof q1 === \"number\" && typeof q2 === \"number\") {\n        return q1 - q2;\n    }\n}\n\nexport default interquartileRange;\n","import quantile from \"./quantile\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} x input\n * @returns {number} median value\n * @example\n * median([10, 2, 5, 100, 2, 1]); // => 3.5\n */\nfunction median(x) {\n    return +quantile(x, 0.5);\n}\n\nexport default median;\n","import median from \"./median\";\n\n/**\n * The [Median Absolute Deviation](http://en.wikipedia.org/wiki/Median_absolute_deviation) is\n * a robust measure of statistical\n * dispersion. It is more resilient to outliers than the standard deviation.\n *\n * @param {Array<number>} x input array\n * @returns {number} median absolute deviation\n * @example\n * medianAbsoluteDeviation([1, 1, 2, 2, 4, 6, 9]); // => 1\n */\nfunction medianAbsoluteDeviation(x) {\n    const medianValue = median(x);\n    const medianAbsoluteDeviations = [];\n\n    // Make a list of absolute deviations from the median\n    for (let i = 0; i < x.length; i++) {\n        medianAbsoluteDeviations.push(Math.abs(x[i] - medianValue));\n    }\n\n    // Find the median value of that list\n    return median(medianAbsoluteDeviations);\n}\n\nexport default medianAbsoluteDeviation;\n","/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * in-place - which means that it **will change the order of the original\n * array by reference**.\n *\n * This is an algorithm that generates a random [permutation](https://en.wikipedia.org/wiki/Permutation)\n * of a set.\n *\n * @param {Array} x sample of one or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @returns {Array} x\n * @example\n * var x = [1, 2, 3, 4];\n * shuffleInPlace(x);\n * // x is shuffled to a value like [2, 1, 4, 3]\n */\nfunction shuffleInPlace(x, randomSource) {\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    // store the current length of the x to determine\n    // when no elements remain to shuffle.\n    let length = x.length;\n\n    // temporary is used to hold an item when it is being\n    // swapped between indices.\n    let temporary;\n\n    // The index to swap at each stage.\n    let index;\n\n    // While there are still items to shuffle\n    while (length > 0) {\n        // choose a random index within the subset of the array\n        // that is not yet shuffled\n        index = Math.floor(randomSource() * length--);\n\n        // store the value that we'll move temporarily\n        temporary = x[length];\n\n        // swap the value at `x[length]` with `x[index]`\n        x[length] = x[index];\n        x[index] = temporary;\n    }\n\n    return x;\n}\n\nexport default shuffleInPlace;\n","import shuffleInPlace from \"./shuffle_in_place\";\n\n/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * is a fast way to create a random permutation of a finite set. This is\n * a function around `shuffle_in_place` that adds the guarantee that\n * it will not modify its input.\n *\n * @param {Array} x sample of 0 or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} shuffled version of input\n * @example\n * var shuffled = shuffle([1, 2, 3, 4]);\n * shuffled; // = [2, 3, 1, 4] or any other random permutation\n */\nfunction shuffle(x, randomSource) {\n    // slice the original array so that it is not modified\n    const sample = x.slice();\n\n    // and then shuffle that shallow-copied array, in place\n    return shuffleInPlace(sample, randomSource);\n}\n\nexport default shuffle;\n","import shuffle from \"./shuffle\";\n\n/**\n * Create a [simple random sample](http://en.wikipedia.org/wiki/Simple_random_sample)\n * from a given array of `n` elements.\n *\n * The sampled values will be in any order, not necessarily the order\n * they appear in the input.\n *\n * @param {Array<any>} x input array. can contain any type\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} subset of n elements in original array\n *\n * @example\n * var values = [1, 2, 4, 5, 6, 7, 8, 9];\n * sample(values, 3); // returns 3 random values, like [2, 5, 8];\n */\nfunction sample(x, n, randomSource) {\n    // shuffle the original array using a fisher-yates shuffle\n    const shuffled = shuffle(x, randomSource);\n\n    // and then return a subset of it - the first `n` elements.\n    return shuffled.slice(0, n);\n}\n\nexport default sample;\n","/**\n * Create a new column x row matrix.\n *\n * @private\n * @param {number} columns\n * @param {number} rows\n * @return {Array<Array<number>>} matrix\n * @example\n * makeMatrix(10, 10);\n */\nfunction makeMatrix(columns, rows) {\n    const matrix = [];\n    for (let i = 0; i < columns; i++) {\n        const column = [];\n        for (let j = 0; j < rows; j++) {\n            column.push(0);\n        }\n        matrix.push(column);\n    }\n    return matrix;\n}\n\nexport default makeMatrix;\n","/**\n * For a sorted input, counting the number of unique values\n * is possible in constant time and constant memory. This is\n * a simple implementation of the algorithm.\n *\n * Values are compared with `===`, so objects and non-primitive objects\n * are not handled in any special way.\n *\n * @param {Array<*>} x an array of any kind of value\n * @returns {number} count of unique values\n * @example\n * uniqueCountSorted([1, 2, 3]); // => 3\n * uniqueCountSorted([1, 1, 1]); // => 1\n */\nfunction uniqueCountSorted(x) {\n    let uniqueValueCount = 0,\n        lastSeenValue;\n    for (let i = 0; i < x.length; i++) {\n        if (i === 0 || x[i] !== lastSeenValue) {\n            lastSeenValue = x[i];\n            uniqueValueCount++;\n        }\n    }\n    return uniqueValueCount;\n}\n\nexport default uniqueCountSorted;\n","import makeMatrix from \"./make_matrix\";\nimport numericSort from \"./numeric_sort\";\nimport uniqueCountSorted from \"./unique_count_sorted\";\n\n/**\n * Generates incrementally computed values based on the sums and sums of\n * squares for the data array\n *\n * @private\n * @param {number} j\n * @param {number} i\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n * @return {number}\n * @example\n * ssq(0, 1, [-1, 0, 2], [1, 1, 5]);\n */\nfunction ssq(j, i, sums, sumsOfSquares) {\n    let sji; // s(j, i)\n    if (j > 0) {\n        const muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)\n        sji =\n            sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;\n    } else {\n        sji = sumsOfSquares[i] - (sums[i] * sums[i]) / (i + 1);\n    }\n    if (sji < 0) {\n        return 0;\n    }\n    return sji;\n}\n\n/**\n * Function that recursively divides and conquers computations\n * for cluster j\n *\n * @private\n * @param {number} iMin Minimum index in cluster to be computed\n * @param {number} iMax Maximum index in cluster to be computed\n * @param {number} cluster Index of the cluster currently being computed\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n */\nfunction fillMatrixColumn(\n    iMin,\n    iMax,\n    cluster,\n    matrix,\n    backtrackMatrix,\n    sums,\n    sumsOfSquares\n) {\n    if (iMin > iMax) {\n        return;\n    }\n\n    // Start at midpoint between iMin and iMax\n    const i = Math.floor((iMin + iMax) / 2);\n\n    matrix[cluster][i] = matrix[cluster - 1][i - 1];\n    backtrackMatrix[cluster][i] = i;\n\n    let jlow = cluster; // the lower end for j\n\n    if (iMin > cluster) {\n        jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);\n    }\n    jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);\n\n    let jhigh = i - 1; // the upper end for j\n    if (iMax < matrix[0].length - 1) {\n        jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);\n    }\n\n    let sji;\n    let sjlowi;\n    let ssqjlow;\n    let ssqj;\n    for (let j = jhigh; j >= jlow; --j) {\n        sji = ssq(j, i, sums, sumsOfSquares);\n\n        if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) {\n            break;\n        }\n\n        // Examine the lower bound of the cluster border\n        sjlowi = ssq(jlow, i, sums, sumsOfSquares);\n\n        ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];\n\n        if (ssqjlow < matrix[cluster][i]) {\n            // Shrink the lower bound\n            matrix[cluster][i] = ssqjlow;\n            backtrackMatrix[cluster][i] = jlow;\n        }\n        jlow++;\n\n        ssqj = sji + matrix[cluster - 1][j - 1];\n        if (ssqj < matrix[cluster][i]) {\n            matrix[cluster][i] = ssqj;\n            backtrackMatrix[cluster][i] = j;\n        }\n    }\n\n    fillMatrixColumn(\n        iMin,\n        i - 1,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n    fillMatrixColumn(\n        i + 1,\n        iMax,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n}\n\n/**\n * Initializes the main matrices used in Ckmeans and kicks\n * off the divide and conquer cluster computation strategy\n *\n * @private\n * @param {Array<number>} data sorted array of values\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n */\nfunction fillMatrices(data, matrix, backtrackMatrix) {\n    const nValues = matrix[0].length;\n\n    // Shift values by the median to improve numeric stability\n    const shift = data[Math.floor(nValues / 2)];\n\n    // Cumulative sum and cumulative sum of squares for all values in data array\n    const sums = [];\n    const sumsOfSquares = [];\n\n    // Initialize first column in matrix & backtrackMatrix\n    for (let i = 0, shiftedValue; i < nValues; ++i) {\n        shiftedValue = data[i] - shift;\n        if (i === 0) {\n            sums.push(shiftedValue);\n            sumsOfSquares.push(shiftedValue * shiftedValue);\n        } else {\n            sums.push(sums[i - 1] + shiftedValue);\n            sumsOfSquares.push(\n                sumsOfSquares[i - 1] + shiftedValue * shiftedValue\n            );\n        }\n\n        // Initialize for cluster = 0\n        matrix[0][i] = ssq(0, i, sums, sumsOfSquares);\n        backtrackMatrix[0][i] = 0;\n    }\n\n    // Initialize the rest of the columns\n    let iMin;\n    for (let cluster = 1; cluster < matrix.length; ++cluster) {\n        if (cluster < matrix.length - 1) {\n            iMin = cluster;\n        } else {\n            // No need to compute matrix[K-1][0] ... matrix[K-1][N-2]\n            iMin = nValues - 1;\n        }\n\n        fillMatrixColumn(\n            iMin,\n            nValues - 1,\n            cluster,\n            matrix,\n            backtrackMatrix,\n            sums,\n            sumsOfSquares\n        );\n    }\n}\n\n/**\n * Ckmeans clustering is an improvement on heuristic-based clustering\n * approaches like Jenks. The algorithm was developed in\n * [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf)\n * as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach\n * to the problem of clustering numeric data into groups with the least\n * within-group sum-of-squared-deviations.\n *\n * Minimizing the difference within groups - what Wang & Song refer to as\n * `withinss`, or within sum-of-squares, means that groups are optimally\n * homogenous within and the data is split into representative groups.\n * This is very useful for visualization, where you may want to represent\n * a continuous variable in discrete color or style groups. This function\n * can provide groups that emphasize differences between data.\n *\n * Being a dynamic approach, this algorithm is based on two matrices that\n * store incrementally-computed values for squared deviations and backtracking\n * indexes.\n *\n * This implementation is based on Ckmeans 3.4.6, which introduced a new divide\n * and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).\n *\n * Unlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html),\n * this implementation does not include any code to automatically determine\n * the optimal number of clusters: this information needs to be explicitly\n * provided.\n *\n * ### References\n * _Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic\n * Programming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859\n *\n * from The R Journal Vol. 3/2, December 2011\n * @param {Array<number>} x input data, as an array of number values\n * @param {number} nClusters number of desired classes. This cannot be\n * greater than the number of values in the data array.\n * @returns {Array<Array<number>>} clustered input\n * @throws {Error} if the number of requested clusters is higher than the size of the data\n * @example\n * ckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);\n * // The input, clustered into groups of similar numbers.\n * //= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);\n */\nfunction ckmeans(x, nClusters) {\n    if (nClusters > x.length) {\n        throw new Error(\n            \"cannot generate more classes than there are data values\"\n        );\n    }\n\n    const sorted = numericSort(x);\n    // we'll use this as the maximum number of clusters\n    const uniqueCount = uniqueCountSorted(sorted);\n\n    // if all of the input values are identical, there's one cluster\n    // with all of the input in it.\n    if (uniqueCount === 1) {\n        return [sorted];\n    }\n\n    // named 'S' originally\n    const matrix = makeMatrix(nClusters, sorted.length);\n    // named 'J' originally\n    const backtrackMatrix = makeMatrix(nClusters, sorted.length);\n\n    // This is a dynamic programming way to solve the problem of minimizing\n    // within-cluster sum of squares. It's similar to linear regression\n    // in this way, and this calculation incrementally computes the\n    // sum of squares that are later read.\n    fillMatrices(sorted, matrix, backtrackMatrix);\n\n    // The real work of Ckmeans clustering happens in the matrix generation:\n    // the generated matrices encode all possible clustering combinations, and\n    // once they're generated we can solve for the best clustering groups\n    // very quickly.\n    const clusters = [];\n    let clusterRight = backtrackMatrix[0].length - 1;\n\n    // Backtrack the clusters from the dynamic programming matrix. This\n    // starts at the bottom-right corner of the matrix (if the top-left is 0, 0),\n    // and moves the cluster target with the loop.\n    for (let cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {\n        const clusterLeft = backtrackMatrix[cluster][clusterRight];\n\n        // fill the cluster from the sorted input by taking a slice of the\n        // array. the backtrack matrix makes this easy - it stores the\n        // indexes where the cluster should start and end.\n        clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);\n\n        if (cluster > 0) {\n            clusterRight = clusterLeft - 1;\n        }\n    }\n\n    return clusters;\n}\n\nexport default ckmeans;\n","import mean from \"./mean\";\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    }\n\n    if (x.length < 2) {\n        throw new Error(\n            \"sampleCovariance requires at least two data points in each sample\"\n        );\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    const xmean = mean(x);\n    const ymean = mean(y);\n    let sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (let i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nexport default sampleCovariance;\n","import sumNthPowerDeviations from \"./sum_nth_power_deviations\";\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x) {\n    if (x.length < 2) {\n        throw new Error(\"sampleVariance requires at least two data points\");\n    }\n\n    const sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nexport default sampleVariance;\n","import sampleVariance from \"./sample_variance\";\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x) {\n    const sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nexport default sampleStandardDeviation;\n","import sampleCovariance from \"./sample_covariance\";\nimport sampleStandardDeviation from \"./sample_standard_deviation\";\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x, y) {\n    const cov = sampleCovariance(x, y);\n    const xstd = sampleStandardDeviation(x);\n    const ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nexport default sampleCorrelation;\n","/**\n * When combining two lists of values for which one already knows the means,\n * one does not have to necessary recompute the mean of the combined lists in\n * linear time. They can instead use this function to compute the combined\n * mean by providing the mean & number of values of the first list and the mean\n * & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineMeans(5, 3, 4, 3); // => 4.5\n */\nfunction combineMeans(mean1, n1, mean2, n2) {\n    return (mean1 * n1 + mean2 * n2) / (n1 + n2);\n}\n\nexport default combineMeans;\n","import sumSimple from \"./sum_simple\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The simple mean uses the successive addition method internally\n * to calculate it's result. Errors in floating-point addition are\n * not accounted for, so if precision is required, the standard {@link mean}\n * method should be used instead.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction meanSimple(x) {\n    if (x.length === 0) {\n        throw new Error(\"meanSimple requires at least one data point\");\n    }\n\n    return sumSimple(x) / x.length;\n}\n\nexport default meanSimple;\n","/**\n * The Root Mean Square (RMS) is\n * a mean function used as a measure of the magnitude of a set\n * of numbers, regardless of their sign.\n * This is the square root of the mean of the squares of the\n * input numbers.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x a sample of one or more data points\n * @returns {number} root mean square\n * @throws {Error} if x is empty\n * @example\n * rootMeanSquare([-1, 1, -1, 1]); // => 1\n */\nfunction rootMeanSquare(x) {\n    if (x.length === 0) {\n        throw new Error(\"rootMeanSquare requires at least one data point\");\n    }\n\n    let sumOfSquares = 0;\n    for (let i = 0; i < x.length; i++) {\n        sumOfSquares += Math.pow(x[i], 2);\n    }\n\n    return Math.sqrt(sumOfSquares / x.length);\n}\n\nexport default rootMeanSquare;\n","/**\n * [Bayesian Classifier](http://en.wikipedia.org/wiki/Naive_Bayes_classifier)\n *\n * This is a naïve bayesian classifier that takes\n * singly-nested objects.\n *\n * @class\n * @example\n * var bayes = new BayesianClassifier();\n * bayes.train({\n *   species: 'Cat'\n * }, 'animal');\n * var result = bayes.score({\n *   species: 'Cat'\n * })\n * // result\n * // {\n * //   animal: 1\n * // }\n */\nclass BayesianClassifier {\n    /*:: totalCount: number */\n    /*:: data: Object */\n    constructor() {\n        // The number of items that are currently\n        // classified in the model\n        this.totalCount = 0;\n        // Every item classified in the model\n        this.data = {};\n    }\n\n    /**\n     * Train the classifier with a new item, which has a single\n     * dimension of Javascript literal keys and values.\n     *\n     * @param {Object} item an object with singly-deep properties\n     * @param {string} category the category this item belongs to\n     * @return {undefined} adds the item to the classifier\n     */\n    train(item, category) {\n        // If the data object doesn't have any values\n        // for this category, create a new object for it.\n        if (!this.data[category]) {\n            this.data[category] = {};\n        }\n\n        // Iterate through each key in the item.\n        for (const k in item) {\n            const v = item[k];\n            // Initialize the nested object `data[category][k][item[k]]`\n            // with an object of keys that equal 0.\n            if (this.data[category][k] === undefined) {\n                this.data[category][k] = {};\n            }\n            if (this.data[category][k][v] === undefined) {\n                this.data[category][k][v] = 0;\n            }\n\n            // And increment the key for this key/value combination.\n            this.data[category][k][v]++;\n        }\n\n        // Increment the number of items classified\n        this.totalCount++;\n    }\n\n    /**\n     * Generate a score of how well this item matches all\n     * possible categories based on its attributes\n     *\n     * @param {Object} item an item in the same format as with train\n     * @returns {Object} of probabilities that this item belongs to a\n     * given category.\n     */\n    score(item) {\n        // Initialize an empty array of odds per category.\n        const odds = {};\n        let category;\n        // Iterate through each key in the item,\n        // then iterate through each category that has been used\n        // in previous calls to `.train()`\n        for (const k in item) {\n            const v = item[k];\n            for (category in this.data) {\n                // Create an empty object for storing key - value combinations\n                // for this category.\n                odds[category] = {};\n\n                // If this item doesn't even have a property, it counts for nothing,\n                // but if it does have the property that we're looking for from\n                // the item to categorize, it counts based on how popular it is\n                // versus the whole population.\n                if (this.data[category][k]) {\n                    odds[category][k + \"_\" + v] =\n                        (this.data[category][k][v] || 0) / this.totalCount;\n                } else {\n                    odds[category][k + \"_\" + v] = 0;\n                }\n            }\n        }\n\n        // Set up a new object that will contain sums of these odds by category\n        const oddsSums = {};\n\n        for (category in odds) {\n            // Tally all of the odds for each category-combination pair -\n            // the non-existence of a category does not add anything to the\n            // score.\n            oddsSums[category] = 0;\n            for (const combination in odds[category]) {\n                oddsSums[category] += odds[category][combination];\n            }\n        }\n\n        return oddsSums;\n    }\n}\n\nexport default BayesianClassifier;\n","/**\n * This is a single-layer [Perceptron Classifier](http://en.wikipedia.org/wiki/Perceptron) that takes\n * arrays of numbers and predicts whether they should be classified\n * as either 0 or 1 (negative or positive examples).\n * @class\n * @example\n * // Create the model\n * var p = new PerceptronModel();\n * // Train the model with input with a diagonal boundary.\n * for (var i = 0; i < 5; i++) {\n *     p.train([1, 1], 1);\n *     p.train([0, 1], 0);\n *     p.train([1, 0], 0);\n *     p.train([0, 0], 0);\n * }\n * p.predict([0, 0]); // 0\n * p.predict([0, 1]); // 0\n * p.predict([1, 0]); // 0\n * p.predict([1, 1]); // 1\n */\nclass PerceptronModel {\n    /*:: bias: number */\n    /*:: weights: Array<number> */\n    constructor() {\n        // The weights, or coefficients of the model;\n        // weights are only populated when training with data.\n        this.weights = [];\n        // The bias term, or intercept; it is also a weight but\n        // it's stored separately for convenience as it is always\n        // multiplied by one.\n        this.bias = 0;\n    }\n    /**\n     * **Predict**: Use an array of features with the weight array and bias\n     * to predict whether an example is labeled 0 or 1.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @returns {number} 1 if the score is over 0, otherwise 0\n     */\n    predict(features) {\n        // Only predict if previously trained\n        // on the same size feature array(s).\n        if (features.length !== this.weights.length) {\n            return null;\n        }\n\n        // Calculate the sum of features times weights,\n        // with the bias added (implicitly times one).\n        let score = 0;\n        for (let i = 0; i < this.weights.length; i++) {\n            score += this.weights[i] * features[i];\n        }\n        score += this.bias;\n\n        // Classify as 1 if the score is over 0, otherwise 0.\n        if (score > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * **Train** the classifier with a new example, which is\n     * a numeric array of features and a 0 or 1 label.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @param {number} label either 0 or 1\n     * @returns {PerceptronModel} this\n     */\n    train(features, label) {\n        // Require that only labels of 0 or 1 are considered.\n        if (label !== 0 && label !== 1) {\n            return null;\n        }\n        // The length of the feature array determines\n        // the length of the weight array.\n        // The perceptron will continue learning as long as\n        // it keeps seeing feature arrays of the same length.\n        // When it sees a new data shape, it initializes.\n        if (features.length !== this.weights.length) {\n            this.weights = features;\n            this.bias = 1;\n        }\n        // Make a prediction based on current weights.\n        const prediction = this.predict(features);\n        // Update the weights if the prediction is wrong.\n        if (typeof prediction === \"number\" && prediction !== label) {\n            const gradient = label - prediction;\n            for (let i = 0; i < this.weights.length; i++) {\n                this.weights[i] += gradient * features[i];\n            }\n            this.bias += gradient;\n        }\n        return this;\n    }\n}\n\nexport default PerceptronModel;\n","/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * Below is an example of using epsilon in [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent),\n * where we're trying to find a local minimum of a function's derivative,\n * given by the `fDerivative` method.\n *\n * @example\n * // From calculation, we expect that the local minimum occurs at x=9/4\n * var x_old = 0;\n * // The algorithm starts at x=6\n * var x_new = 6;\n * var stepSize = 0.01;\n *\n * function fDerivative(x) {\n *   return 4 * Math.pow(x, 3) - 9 * Math.pow(x, 2);\n * }\n *\n * // The loop runs until the difference between the previous\n * // value and the current value is smaller than epsilon - a rough\n * // meaure of 'close enough'\n * while (Math.abs(x_new - x_old) > ss.epsilon) {\n *   x_old = x_new;\n *   x_new = x_old - stepSize * fDerivative(x_old);\n * }\n *\n * console.log('Local minimum occurs at', x_new);\n */\nconst epsilon = 0.0001;\n\nexport default epsilon;\n","/**\n * A [Factorial](https://en.wikipedia.org/wiki/Factorial), usually written n!, is the product of all positive\n * integers less than or equal to n. Often factorial is implemented\n * recursively, but this iterative approach is significantly faster\n * and simpler.\n *\n * @param {number} n input, must be an integer number 1 or greater\n * @returns {number} factorial: n!\n * @throws {Error} if n is less than 0 or not an integer\n * @example\n * factorial(5); // => 120\n */\nfunction factorial(n) {\n    // factorial is mathematically undefined for negative numbers\n    if (n < 0) {\n        throw new Error(\"factorial requires a non-negative value\");\n    }\n\n    if (Math.floor(n) !== n) {\n        throw new Error(\"factorial requires an integer input\");\n    }\n\n    // typically you'll expand the factorial function going down, like\n    // 5! = 5 * 4 * 3 * 2 * 1. This is going in the opposite direction,\n    // counting from 2 up to the number in question, and since anything\n    // multiplied by 1 is itself, the loop only needs to start at 2.\n    let accumulator = 1;\n    for (let i = 2; i <= n; i++) {\n        // for each number up to and including the number `n`, multiply\n        // the accumulator my that number.\n        accumulator *= i;\n    }\n    return accumulator;\n}\n\nexport default factorial;\n","// Define series coefficients\nconst COEFFICIENTS = [\n    0.99999999999999709182,\n    57.156235665862923517,\n    -59.597960355475491248,\n    14.136097974741747174,\n    -0.49191381609762019978,\n    0.33994649984811888699e-4,\n    0.46523628927048575665e-4,\n    -0.98374475304879564677e-4,\n    0.15808870322491248884e-3,\n    -0.21026444172410488319e-3,\n    0.2174396181152126432e-3,\n    -0.16431810653676389022e-3,\n    0.84418223983852743293e-4,\n    -0.2619083840158140867e-4,\n    0.36899182659531622704e-5\n];\n\nconst g = 607 / 128;\nconst LOGSQRT2PI = Math.log(Math.sqrt(2 * Math.PI));\n\n/**\n * Compute the logarithm of the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Lanczos' approximation.\n * This function takes as input any real-value n greater than 0.\n * This function is useful for values of n too large for the normal gamma function (n > 165).\n * The code is based on Lanczo's Gamma approximation, defined [here](http://my.fit.edu/~gabdo/gamma.txt).\n *\n * @param {number} n Any real number greater than zero.\n * @returns {number} The logarithm of gamma of the input value.\n *\n * @example\n * gammaln(500); // 2605.1158503617335\n * gammaln(2.4); // 0.21685932244884043\n */\nfunction gammaln(n) {\n    // Return infinity if value not in domain\n    if (n <= 0) {\n        return Infinity;\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    // Create series approximation\n    let a = COEFFICIENTS[0];\n\n    for (let i = 1; i < 15; i++) {\n        a += COEFFICIENTS[i] / (n + i);\n    }\n\n    const tmp = g + 0.5 + n;\n\n    // Return natural logarithm of gamma(n)\n    return LOGSQRT2PI + Math.log(a) - tmp + (n + 0.5) * Math.log(tmp);\n}\n\nexport default gammaln;\n","/**\n * **Percentage Points of the χ2 (Chi-Squared) Distribution**\n *\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution) is used in the common\n * chi-squared tests for goodness of fit of an observed distribution to a theoretical one, the independence of two\n * criteria of classification of qualitative data, and in confidence interval estimation for a population standard\n * deviation of a normal distribution from a sample standard deviation.\n *\n * Values from Appendix 1, Table III of William W. Hines & Douglas C. Montgomery, \"Probability and Statistics in\n * Engineering and Management Science\", Wiley (1980).\n */\nconst chiSquaredDistributionTable = {\n    1: {\n        0.995: 0,\n        0.99: 0,\n        0.975: 0,\n        0.95: 0,\n        0.9: 0.02,\n        0.5: 0.45,\n        0.1: 2.71,\n        0.05: 3.84,\n        0.025: 5.02,\n        0.01: 6.63,\n        0.005: 7.88\n    },\n    2: {\n        0.995: 0.01,\n        0.99: 0.02,\n        0.975: 0.05,\n        0.95: 0.1,\n        0.9: 0.21,\n        0.5: 1.39,\n        0.1: 4.61,\n        0.05: 5.99,\n        0.025: 7.38,\n        0.01: 9.21,\n        0.005: 10.6\n    },\n    3: {\n        0.995: 0.07,\n        0.99: 0.11,\n        0.975: 0.22,\n        0.95: 0.35,\n        0.9: 0.58,\n        0.5: 2.37,\n        0.1: 6.25,\n        0.05: 7.81,\n        0.025: 9.35,\n        0.01: 11.34,\n        0.005: 12.84\n    },\n    4: {\n        0.995: 0.21,\n        0.99: 0.3,\n        0.975: 0.48,\n        0.95: 0.71,\n        0.9: 1.06,\n        0.5: 3.36,\n        0.1: 7.78,\n        0.05: 9.49,\n        0.025: 11.14,\n        0.01: 13.28,\n        0.005: 14.86\n    },\n    5: {\n        0.995: 0.41,\n        0.99: 0.55,\n        0.975: 0.83,\n        0.95: 1.15,\n        0.9: 1.61,\n        0.5: 4.35,\n        0.1: 9.24,\n        0.05: 11.07,\n        0.025: 12.83,\n        0.01: 15.09,\n        0.005: 16.75\n    },\n    6: {\n        0.995: 0.68,\n        0.99: 0.87,\n        0.975: 1.24,\n        0.95: 1.64,\n        0.9: 2.2,\n        0.5: 5.35,\n        0.1: 10.65,\n        0.05: 12.59,\n        0.025: 14.45,\n        0.01: 16.81,\n        0.005: 18.55\n    },\n    7: {\n        0.995: 0.99,\n        0.99: 1.25,\n        0.975: 1.69,\n        0.95: 2.17,\n        0.9: 2.83,\n        0.5: 6.35,\n        0.1: 12.02,\n        0.05: 14.07,\n        0.025: 16.01,\n        0.01: 18.48,\n        0.005: 20.28\n    },\n    8: {\n        0.995: 1.34,\n        0.99: 1.65,\n        0.975: 2.18,\n        0.95: 2.73,\n        0.9: 3.49,\n        0.5: 7.34,\n        0.1: 13.36,\n        0.05: 15.51,\n        0.025: 17.53,\n        0.01: 20.09,\n        0.005: 21.96\n    },\n    9: {\n        0.995: 1.73,\n        0.99: 2.09,\n        0.975: 2.7,\n        0.95: 3.33,\n        0.9: 4.17,\n        0.5: 8.34,\n        0.1: 14.68,\n        0.05: 16.92,\n        0.025: 19.02,\n        0.01: 21.67,\n        0.005: 23.59\n    },\n    10: {\n        0.995: 2.16,\n        0.99: 2.56,\n        0.975: 3.25,\n        0.95: 3.94,\n        0.9: 4.87,\n        0.5: 9.34,\n        0.1: 15.99,\n        0.05: 18.31,\n        0.025: 20.48,\n        0.01: 23.21,\n        0.005: 25.19\n    },\n    11: {\n        0.995: 2.6,\n        0.99: 3.05,\n        0.975: 3.82,\n        0.95: 4.57,\n        0.9: 5.58,\n        0.5: 10.34,\n        0.1: 17.28,\n        0.05: 19.68,\n        0.025: 21.92,\n        0.01: 24.72,\n        0.005: 26.76\n    },\n    12: {\n        0.995: 3.07,\n        0.99: 3.57,\n        0.975: 4.4,\n        0.95: 5.23,\n        0.9: 6.3,\n        0.5: 11.34,\n        0.1: 18.55,\n        0.05: 21.03,\n        0.025: 23.34,\n        0.01: 26.22,\n        0.005: 28.3\n    },\n    13: {\n        0.995: 3.57,\n        0.99: 4.11,\n        0.975: 5.01,\n        0.95: 5.89,\n        0.9: 7.04,\n        0.5: 12.34,\n        0.1: 19.81,\n        0.05: 22.36,\n        0.025: 24.74,\n        0.01: 27.69,\n        0.005: 29.82\n    },\n    14: {\n        0.995: 4.07,\n        0.99: 4.66,\n        0.975: 5.63,\n        0.95: 6.57,\n        0.9: 7.79,\n        0.5: 13.34,\n        0.1: 21.06,\n        0.05: 23.68,\n        0.025: 26.12,\n        0.01: 29.14,\n        0.005: 31.32\n    },\n    15: {\n        0.995: 4.6,\n        0.99: 5.23,\n        0.975: 6.27,\n        0.95: 7.26,\n        0.9: 8.55,\n        0.5: 14.34,\n        0.1: 22.31,\n        0.05: 25,\n        0.025: 27.49,\n        0.01: 30.58,\n        0.005: 32.8\n    },\n    16: {\n        0.995: 5.14,\n        0.99: 5.81,\n        0.975: 6.91,\n        0.95: 7.96,\n        0.9: 9.31,\n        0.5: 15.34,\n        0.1: 23.54,\n        0.05: 26.3,\n        0.025: 28.85,\n        0.01: 32,\n        0.005: 34.27\n    },\n    17: {\n        0.995: 5.7,\n        0.99: 6.41,\n        0.975: 7.56,\n        0.95: 8.67,\n        0.9: 10.09,\n        0.5: 16.34,\n        0.1: 24.77,\n        0.05: 27.59,\n        0.025: 30.19,\n        0.01: 33.41,\n        0.005: 35.72\n    },\n    18: {\n        0.995: 6.26,\n        0.99: 7.01,\n        0.975: 8.23,\n        0.95: 9.39,\n        0.9: 10.87,\n        0.5: 17.34,\n        0.1: 25.99,\n        0.05: 28.87,\n        0.025: 31.53,\n        0.01: 34.81,\n        0.005: 37.16\n    },\n    19: {\n        0.995: 6.84,\n        0.99: 7.63,\n        0.975: 8.91,\n        0.95: 10.12,\n        0.9: 11.65,\n        0.5: 18.34,\n        0.1: 27.2,\n        0.05: 30.14,\n        0.025: 32.85,\n        0.01: 36.19,\n        0.005: 38.58\n    },\n    20: {\n        0.995: 7.43,\n        0.99: 8.26,\n        0.975: 9.59,\n        0.95: 10.85,\n        0.9: 12.44,\n        0.5: 19.34,\n        0.1: 28.41,\n        0.05: 31.41,\n        0.025: 34.17,\n        0.01: 37.57,\n        0.005: 40\n    },\n    21: {\n        0.995: 8.03,\n        0.99: 8.9,\n        0.975: 10.28,\n        0.95: 11.59,\n        0.9: 13.24,\n        0.5: 20.34,\n        0.1: 29.62,\n        0.05: 32.67,\n        0.025: 35.48,\n        0.01: 38.93,\n        0.005: 41.4\n    },\n    22: {\n        0.995: 8.64,\n        0.99: 9.54,\n        0.975: 10.98,\n        0.95: 12.34,\n        0.9: 14.04,\n        0.5: 21.34,\n        0.1: 30.81,\n        0.05: 33.92,\n        0.025: 36.78,\n        0.01: 40.29,\n        0.005: 42.8\n    },\n    23: {\n        0.995: 9.26,\n        0.99: 10.2,\n        0.975: 11.69,\n        0.95: 13.09,\n        0.9: 14.85,\n        0.5: 22.34,\n        0.1: 32.01,\n        0.05: 35.17,\n        0.025: 38.08,\n        0.01: 41.64,\n        0.005: 44.18\n    },\n    24: {\n        0.995: 9.89,\n        0.99: 10.86,\n        0.975: 12.4,\n        0.95: 13.85,\n        0.9: 15.66,\n        0.5: 23.34,\n        0.1: 33.2,\n        0.05: 36.42,\n        0.025: 39.36,\n        0.01: 42.98,\n        0.005: 45.56\n    },\n    25: {\n        0.995: 10.52,\n        0.99: 11.52,\n        0.975: 13.12,\n        0.95: 14.61,\n        0.9: 16.47,\n        0.5: 24.34,\n        0.1: 34.28,\n        0.05: 37.65,\n        0.025: 40.65,\n        0.01: 44.31,\n        0.005: 46.93\n    },\n    26: {\n        0.995: 11.16,\n        0.99: 12.2,\n        0.975: 13.84,\n        0.95: 15.38,\n        0.9: 17.29,\n        0.5: 25.34,\n        0.1: 35.56,\n        0.05: 38.89,\n        0.025: 41.92,\n        0.01: 45.64,\n        0.005: 48.29\n    },\n    27: {\n        0.995: 11.81,\n        0.99: 12.88,\n        0.975: 14.57,\n        0.95: 16.15,\n        0.9: 18.11,\n        0.5: 26.34,\n        0.1: 36.74,\n        0.05: 40.11,\n        0.025: 43.19,\n        0.01: 46.96,\n        0.005: 49.65\n    },\n    28: {\n        0.995: 12.46,\n        0.99: 13.57,\n        0.975: 15.31,\n        0.95: 16.93,\n        0.9: 18.94,\n        0.5: 27.34,\n        0.1: 37.92,\n        0.05: 41.34,\n        0.025: 44.46,\n        0.01: 48.28,\n        0.005: 50.99\n    },\n    29: {\n        0.995: 13.12,\n        0.99: 14.26,\n        0.975: 16.05,\n        0.95: 17.71,\n        0.9: 19.77,\n        0.5: 28.34,\n        0.1: 39.09,\n        0.05: 42.56,\n        0.025: 45.72,\n        0.01: 49.59,\n        0.005: 52.34\n    },\n    30: {\n        0.995: 13.79,\n        0.99: 14.95,\n        0.975: 16.79,\n        0.95: 18.49,\n        0.9: 20.6,\n        0.5: 29.34,\n        0.1: 40.26,\n        0.05: 43.77,\n        0.025: 46.98,\n        0.01: 50.89,\n        0.005: 53.67\n    },\n    40: {\n        0.995: 20.71,\n        0.99: 22.16,\n        0.975: 24.43,\n        0.95: 26.51,\n        0.9: 29.05,\n        0.5: 39.34,\n        0.1: 51.81,\n        0.05: 55.76,\n        0.025: 59.34,\n        0.01: 63.69,\n        0.005: 66.77\n    },\n    50: {\n        0.995: 27.99,\n        0.99: 29.71,\n        0.975: 32.36,\n        0.95: 34.76,\n        0.9: 37.69,\n        0.5: 49.33,\n        0.1: 63.17,\n        0.05: 67.5,\n        0.025: 71.42,\n        0.01: 76.15,\n        0.005: 79.49\n    },\n    60: {\n        0.995: 35.53,\n        0.99: 37.48,\n        0.975: 40.48,\n        0.95: 43.19,\n        0.9: 46.46,\n        0.5: 59.33,\n        0.1: 74.4,\n        0.05: 79.08,\n        0.025: 83.3,\n        0.01: 88.38,\n        0.005: 91.95\n    },\n    70: {\n        0.995: 43.28,\n        0.99: 45.44,\n        0.975: 48.76,\n        0.95: 51.74,\n        0.9: 55.33,\n        0.5: 69.33,\n        0.1: 85.53,\n        0.05: 90.53,\n        0.025: 95.02,\n        0.01: 100.42,\n        0.005: 104.22\n    },\n    80: {\n        0.995: 51.17,\n        0.99: 53.54,\n        0.975: 57.15,\n        0.95: 60.39,\n        0.9: 64.28,\n        0.5: 79.33,\n        0.1: 96.58,\n        0.05: 101.88,\n        0.025: 106.63,\n        0.01: 112.33,\n        0.005: 116.32\n    },\n    90: {\n        0.995: 59.2,\n        0.99: 61.75,\n        0.975: 65.65,\n        0.95: 69.13,\n        0.9: 73.29,\n        0.5: 89.33,\n        0.1: 107.57,\n        0.05: 113.14,\n        0.025: 118.14,\n        0.01: 124.12,\n        0.005: 128.3\n    },\n    100: {\n        0.995: 67.33,\n        0.99: 70.06,\n        0.975: 74.22,\n        0.95: 77.93,\n        0.9: 82.36,\n        0.5: 99.33,\n        0.1: 118.5,\n        0.05: 124.34,\n        0.025: 129.56,\n        0.01: 135.81,\n        0.005: 140.17\n    }\n};\n\nexport default chiSquaredDistributionTable;\n","import interquartileRange from \"./interquartile_range\";\nimport stddev from \"./sample_standard_deviation\";\n\nconst SQRT_2PI = Math.sqrt(2 * Math.PI);\n\n/**\n * [Well-known kernels](https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use)\n * @private\n */\nconst kernels = {\n    /**\n     * The gaussian kernel.\n     * @private\n     */\n    gaussian: function (u) {\n        return Math.exp(-0.5 * u * u) / SQRT_2PI;\n    }\n};\n\n/**\n * Well known bandwidth selection methods\n * @private\n */\nconst bandwidthMethods = {\n    /**\n     * The [\"normal reference distribution\"\n     * rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html),\n     * a commonly used version of [Silverman's\n     * rule-of-thumb](https://en.wikipedia.org/wiki/Kernel_density_estimation#A_rule-of-thumb_bandwidth_estimator).\n     * @private\n     */\n    nrd: function (x) {\n        let s = stddev(x);\n        const iqr = interquartileRange(x);\n        if (typeof iqr === \"number\") {\n            s = Math.min(s, iqr / 1.34);\n        }\n        return 1.06 * s * Math.pow(x.length, -0.2);\n    }\n};\n\n/**\n * [Kernel density estimation](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n * is a useful tool for, among other things, estimating the shape of the\n * underlying probability distribution from a sample.\n *\n * @name kernelDensityEstimation\n * @param X sample values\n * @param kernel The kernel function to use. If a function is provided, it should return non-negative values and integrate to 1. Defaults to 'gaussian'.\n * @param bandwidthMethod The \"bandwidth selection\" method to use, or a fixed bandwidth value. Defaults to \"nrd\", the commonly-used [\"normal reference distribution\" rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html).\n * @returns {Function} An estimated [probability density function](https://en.wikipedia.org/wiki/Probability_density_function) for the given sample. The returned function runs in `O(X.length)`.\n */\nfunction kernelDensityEstimation(X, kernel, bandwidthMethod) {\n    let kernelFn;\n    if (kernel === undefined) {\n        kernelFn = kernels.gaussian;\n    } else if (typeof kernel === \"string\") {\n        if (!kernels[kernel]) {\n            throw new Error('Unknown kernel \"' + kernel + '\"');\n        }\n        kernelFn = kernels[kernel];\n    } else {\n        kernelFn = kernel;\n    }\n\n    let bandwidth;\n    if (typeof bandwidthMethod === \"undefined\") {\n        bandwidth = bandwidthMethods.nrd(X);\n    } else if (typeof bandwidthMethod === \"string\") {\n        if (!bandwidthMethods[bandwidthMethod]) {\n            throw new Error(\n                'Unknown bandwidth method \"' + bandwidthMethod + '\"'\n            );\n        }\n        bandwidth = bandwidthMethods[bandwidthMethod](X);\n    } else {\n        bandwidth = bandwidthMethod;\n    }\n\n    return function (x) {\n        let i = 0;\n        let sum = 0;\n        for (i = 0; i < X.length; i++) {\n            sum += kernelFn((x - X[i]) / bandwidth);\n        }\n        return sum / bandwidth / X.length;\n    };\n}\n\nexport default kernelDensityEstimation;\n","const SQRT_2PI = Math.sqrt(2 * Math.PI);\n\nfunction cumulativeDistribution(z) {\n    let sum = z,\n        tmp = z;\n\n    // 15 iterations are enough for 4-digit precision\n    for (let i = 1; i < 15; i++) {\n        tmp *= (z * z) / (2 * i + 1);\n        sum += tmp;\n    }\n    return (\n        Math.round((0.5 + (sum / SQRT_2PI) * Math.exp((-z * z) / 2)) * 1e4) /\n        1e4\n    );\n}\n\n/**\n * A standard normal table, also called the unit normal table or Z table,\n * is a mathematical table for the values of Φ (phi), which are the values of\n * the [cumulative distribution function](https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function)\n * of the normal distribution. It is used to find the probability that a\n * statistic is observed below, above, or between values on the standard\n * normal distribution, and by extension, any normal distribution.\n */\nconst standardNormalTable = [];\n\nfor (let z = 0; z <= 3.09; z += 0.01) {\n    standardNormalTable.push(cumulativeDistribution(z));\n}\n\nexport default standardNormalTable;\n","/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n * It uses Horner's method to evaluate the polynomial of τ (tau).\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x) {\n    const t = 1 / (1 + 0.5 * Math.abs(x));\n    const tau =\n        t *\n        Math.exp(\n            -x * x +\n                ((((((((0.17087277 * t - 0.82215223) * t + 1.48851587) * t -\n                    1.13520398) *\n                    t +\n                    0.27886807) *\n                    t -\n                    0.18628806) *\n                    t +\n                    0.09678418) *\n                    t +\n                    0.37409196) *\n                    t +\n                    1.00002368) *\n                    t -\n                1.26551223\n        );\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nexport default errorFunction;\n","/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\nfunction inverseErrorFunction(x) {\n    const a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));\n\n    const inv = Math.sqrt(\n        Math.sqrt(\n            Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -\n                Math.log(1 - x * x) / a\n        ) -\n            (2 / (Math.PI * a) + Math.log(1 - x * x) / 2)\n    );\n\n    if (x >= 0) {\n        return inv;\n    } else {\n        return -inv;\n    }\n}\n\nexport default inverseErrorFunction;\n","/**\n * [Sign](https://en.wikipedia.org/wiki/Sign_function) is a function\n * that extracts the sign of a real number\n *\n * @param {number} x input value\n * @returns {number} sign value either 1, 0 or -1\n * @throws {TypeError} if the input argument x is not a number\n * @private\n *\n * @example\n * sign(2); // => 1\n */\nfunction sign(x) {\n    if (typeof x === \"number\") {\n        if (x < 0) {\n            return -1;\n        } else if (x === 0) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } else {\n        throw new TypeError(\"not a number\");\n    }\n}\n\nexport default sign;\n","/**\n * Calculate Euclidean distance between two points.\n * @param {Array<number>} left First N-dimensional point.\n * @param {Array<number>} right Second N-dimensional point.\n * @returns {number} Distance.\n */\nfunction euclideanDistance(left, right) {\n    let sum = 0;\n    for (let i = 0; i < left.length; i++) {\n        const diff = left[i] - right[i];\n        sum += diff * diff;\n    }\n    return Math.sqrt(sum);\n}\n\nexport default euclideanDistance;\n","import euclideanDistance from \"./euclidean_distance\";\nimport makeMatrix from \"./make_matrix\";\nimport sample from \"./sample\";\n\n/**\n * @typedef {Object} kMeansReturn\n * @property {Array<number>} labels The labels.\n * @property {Array<Array<number>>} centroids The cluster centroids.\n */\n\n/**\n * Perform k-means clustering.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points to be clustered.\n * @param {number} numCluster How many clusters to create.\n * @param {Function} randomSource An optional entropy source that generates uniform values in [0, 1).\n * @return {kMeansReturn} Labels (same length as data) and centroids (same length as numCluster).\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n *\n * @example\n * kMeansCluster([[0.0, 0.5], [1.0, 0.5]], 2); // => {labels: [0, 1], centroids: [[0.0, 0.5], [1.0 0.5]]}\n */\nfunction kMeansCluster(points, numCluster, randomSource = Math.random) {\n    let oldCentroids = null;\n    let newCentroids = sample(points, numCluster, randomSource);\n    let labels = null;\n    let change = Number.MAX_VALUE;\n    while (change !== 0) {\n        labels = labelPoints(points, newCentroids);\n        oldCentroids = newCentroids;\n        newCentroids = calculateCentroids(points, labels, numCluster);\n        change = calculateChange(newCentroids, oldCentroids);\n    }\n    return {\n        labels: labels,\n        centroids: newCentroids\n    };\n}\n\n/**\n * Label each point according to which centroid it is closest to.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<Array<number>>} centroids Current centroids.\n * @return {Array<number>} Group labels.\n */\nfunction labelPoints(points, centroids) {\n    return points.map((p) => {\n        let minDist = Number.MAX_VALUE;\n        let label = -1;\n        for (let i = 0; i < centroids.length; i++) {\n            const dist = euclideanDistance(p, centroids[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                label = i;\n            }\n        }\n        return label;\n    });\n}\n\n/**\n * Calculate centroids for points given labels.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<number>} labels Which groups points belong to.\n * @param {number} numCluster Number of clusters being created.\n * @return {Array<Array<number>>} Centroid for each group.\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n */\nfunction calculateCentroids(points, labels, numCluster) {\n    // Initialize accumulators.\n    const dimension = points[0].length;\n    const centroids = makeMatrix(numCluster, dimension);\n    const counts = Array(numCluster).fill(0);\n\n    // Add points to centroids' accumulators and count points per centroid.\n    const numPoints = points.length;\n    for (let i = 0; i < numPoints; i++) {\n        const point = points[i];\n        const label = labels[i];\n        const current = centroids[label];\n        for (let j = 0; j < dimension; j++) {\n            current[j] += point[j];\n        }\n        counts[label] += 1;\n    }\n\n    // Rescale centroids, checking for any that have no points.\n    for (let i = 0; i < numCluster; i++) {\n        if (counts[i] === 0) {\n            throw new Error(`Centroid ${i} has no friends`);\n        }\n        const centroid = centroids[i];\n        for (let j = 0; j < dimension; j++) {\n            centroid[j] /= counts[i];\n        }\n    }\n\n    return centroids;\n}\n\n/**\n * Calculate the difference between old centroids and new centroids.\n *\n * @private\n * @param {Array<Array<number>>} left One list of centroids.\n * @param {Array<Array<number>>} right Another list of centroids.\n * @return {number} Distance between centroids.\n */\nfunction calculateChange(left, right) {\n    let total = 0;\n    for (let i = 0; i < left.length; i++) {\n        total += euclideanDistance(left[i], right[i]);\n    }\n    return total;\n}\n\nexport default kMeansCluster;\n","import euclideanDistance from \"./euclidean_distance\";\nimport makeMatrix from \"./make_matrix\";\nimport max from \"./max\";\n\n/**\n * Calculate the [silhouette values](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for clustered data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<number>} The silhouette value for each point.\n *\n * @example\n * silhouette([[0.25], [0.75]], [0, 0]); // => [1.0, 1.0]\n */\nfunction silhouette(points, labels) {\n    if (points.length !== labels.length) {\n        throw new Error(\"must have exactly as many labels as points\");\n    }\n    const groupings = createGroups(labels);\n    const distances = calculateAllDistances(points);\n    const result = [];\n    for (let i = 0; i < points.length; i++) {\n        let s = 0;\n        if (groupings[labels[i]].length > 1) {\n            const a = meanDistanceFromPointToGroup(\n                i,\n                groupings[labels[i]],\n                distances\n            );\n            const b = meanDistanceToNearestGroup(\n                i,\n                labels,\n                groupings,\n                distances\n            );\n            s = (b - a) / Math.max(a, b);\n        }\n        result.push(s);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table mapping group IDs to point IDs.\n *\n * @private\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<Array<number>>} An array of length G, each of whose entries is an array\n * containing the indices of the points in that group.\n */\nfunction createGroups(labels) {\n    const numGroups = 1 + max(labels);\n    const result = Array(numGroups);\n    for (let i = 0; i < labels.length; i++) {\n        const label = labels[i];\n        if (result[label] === undefined) {\n            result[label] = [];\n        }\n        result[label].push(i);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table of all inter-point distances.\n *\n * @private\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @return {Array<Array<number>>} A symmetric square array of inter-point distances\n * (zero on the diagonal).\n */\nfunction calculateAllDistances(points) {\n    const numPoints = points.length;\n    const result = makeMatrix(numPoints, numPoints);\n    for (let i = 0; i < numPoints; i++) {\n        for (let j = 0; j < i; j++) {\n            result[i][j] = euclideanDistance(points[i], points[j]);\n            result[j][i] = result[i][j];\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between this point and all the points in the\n * nearest group (as determined by which point in another group is closest).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} labels Labels of points.\n * @param {Array<Array<number>>} groupings An array whose entries are arrays\n * containing the indices of the points in that group.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the nearest\n * group.\n */\nfunction meanDistanceToNearestGroup(which, labels, groupings, distances) {\n    const label = labels[which];\n    let result = Number.MAX_VALUE;\n    for (let i = 0; i < groupings.length; i++) {\n        if (i !== label) {\n            const d = meanDistanceFromPointToGroup(\n                which,\n                groupings[i],\n                distances\n            );\n            if (d < result) {\n                result = d;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between a point and all the points in a group\n * (possibly its own).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} group The indices of all the points in the group in\n * question.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the\n * specified group.\n */\nfunction meanDistanceFromPointToGroup(which, group, distances) {\n    let total = 0;\n    for (let i = 0; i < group.length; i++) {\n        total += distances[which][group[i]];\n    }\n    return total / group.length;\n}\n\nexport default silhouette;\n","/**\n * Relative error.\n *\n * This is more difficult to calculate than it first appears [1,2].  The usual\n * formula for the relative error between an actual value A and an expected\n * value E is `|(A-E)/E|`, but:\n *\n * 1. If the expected value is 0, any other value has infinite relative error,\n *    which is counter-intuitive: if the expected voltage is 0, getting 1/10th\n *    of a volt doesn't feel like an infinitely large error.\n *\n * 2. This formula does not satisfy the mathematical definition of a metric [3].\n *    [4] solved this problem by defining the relative error as `|ln(|A/E|)|`,\n *    but that formula only works if all values are positive: for example, it\n *    reports the relative error of -10 and 10 as 0.\n *\n * Our implementation sticks with convention and returns:\n *\n * - 0 if the actual and expected values are both zero\n * - Infinity if the actual value is non-zero and the expected value is zero\n * - `|(A-E)/E|` in all other cases\n *\n * [1] https://math.stackexchange.com/questions/677852/how-to-calculate-relative-error-when-true-value-is-zero\n * [2] https://en.wikipedia.org/wiki/Relative_change_and_difference\n * [3] https://en.wikipedia.org/wiki/Metric_(mathematics)#Definition\n * [4] F.W.J. Olver: \"A New Approach to Error Arithmetic.\" SIAM Journal on\n *     Numerical Analysis, 15(2), 1978, 10.1137/0715024.\n *\n * @param {number} actual The actual value.\n * @param {number} expected The expected value.\n * @return {number} The relative error.\n */\nfunction relativeError(actual, expected) {\n    if (actual === 0 && expected === 0) {\n        return 0;\n    }\n    return Math.abs((actual - expected) / expected);\n}\n\nexport default relativeError;\n","/**\n * When adding a new value to a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the new\n * value to add.\n *\n * @since 2.5.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} newValue the added value\n * @returns {number} the new mean\n *\n * @example\n * addToMean(14, 5, 53); // => 20.5\n */\nfunction addToMean(mean, n, newValue) {\n    return mean + (newValue - mean) / (n + 1);\n}\n\nexport default addToMean;\n","import epsilon from \"./epsilon\";\nimport relativeError from \"./relative_error\";\n\n/**\n * Approximate equality.\n *\n * @param {number} actual The value to be tested.\n * @param {number} expected The reference value.\n * @param {number} tolerance The acceptable relative difference.\n * @return {boolean} Whether numbers are within tolerance.\n */\nfunction approxEqual(actual, expected, tolerance = epsilon) {\n    return relativeError(actual, expected) <= tolerance;\n}\n\nexport default approxEqual;\n","/**\n * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)\n * is the probability discrete\n * distribution of a random variable which takes value 1 with success\n * probability `p` and value 0 with failure\n * probability `q` = 1 - `p`. It can be used, for example, to represent the\n * toss of a coin, where \"1\" is defined to mean \"heads\" and \"0\" is defined\n * to mean \"tails\" (or vice versa). It is\n * a special case of a Binomial Distribution\n * where `n` = 1.\n *\n * @param {number} p input value, between 0 and 1 inclusive\n * @returns {number[]} values of bernoulli distribution at this point\n * @throws {Error} if p is outside 0 and 1\n * @example\n * bernoulliDistribution(0.3); // => [0.7, 0.3]\n */\nfunction bernoulliDistribution(p) /*: number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1)\n    if (p < 0 || p > 1) {\n        throw new Error(\n            \"bernoulliDistribution requires probability to be between 0 and 1 inclusive\"\n        );\n    }\n\n    return [1 - p, p];\n}\n\nexport default bernoulliDistribution;\n","import epsilon from \"./epsilon\";\n\n/**\n * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution) is the discrete probability\n * distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields\n * success with probability `probability`. Such a success/failure experiment is also called a Bernoulli experiment or\n * Bernoulli trial; when trials = 1, the Binomial Distribution is a Bernoulli Distribution.\n *\n * @param {number} trials number of trials to simulate\n * @param {number} probability\n * @returns {number[]} output\n */\nfunction binomialDistribution(trials, probability) /*: ?number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1),\n    // that `n` is an integer, strictly positive.\n    if (probability < 0 || probability > 1 || trials <= 0 || trials % 1 !== 0) {\n        return undefined;\n    }\n\n    // We initialize `x`, the random variable, and `accumulator`, an accumulator\n    // for the cumulative distribution function to 0. `distribution_functions`\n    // is the object we'll return with the `probability_of_x` and the\n    // `cumulativeProbability_of_x`, as well as the calculated mean &\n    // variance. We iterate until the `cumulativeProbability_of_x` is\n    // within `epsilon` of 1.0.\n    let x = 0;\n    let cumulativeProbability = 0;\n    const cells = [];\n    let binomialCoefficient = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] =\n            binomialCoefficient *\n            Math.pow(probability, x) *\n            Math.pow(1 - probability, trials - x);\n        cumulativeProbability += cells[x];\n        x++;\n        binomialCoefficient = (binomialCoefficient * (trials - x + 1)) / x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default binomialDistribution;\n","import sign from \"./sign\";\n\n/**\n * [Bisection method](https://en.wikipedia.org/wiki/Bisection_method) is a root-finding\n * method that repeatedly bisects an interval to find the root.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {Function} func input function\n * @param {number} start - start of interval\n * @param {number} end - end of interval\n * @param {number} maxIterations - the maximum number of iterations\n * @param {number} errorTolerance - the error tolerance\n * @returns {number} estimated root value\n * @throws {TypeError} Argument func must be a function\n *\n * @example\n * bisect(Math.cos,0,4,100,0.003); // => 1.572265625\n */\nfunction bisect(func, start, end, maxIterations, errorTolerance) {\n    if (typeof func !== \"function\")\n        throw new TypeError(\"func must be a function\");\n\n    for (let i = 0; i < maxIterations; i++) {\n        const output = (start + end) / 2;\n\n        if (\n            func(output) === 0 ||\n            Math.abs((end - start) / 2) < errorTolerance\n        ) {\n            return output;\n        }\n\n        if (sign(func(output)) === sign(func(start))) {\n            start = output;\n        } else {\n            end = output;\n        }\n    }\n\n    throw new Error(\"maximum number of iterations exceeded\");\n}\n\nexport default bisect;\n","import chiSquaredDistributionTable from \"./chi_squared_distribution_table\";\nimport mean from \"./mean\";\n\n/**\n * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)\n * uses a measure of goodness of fit which is the sum of differences between observed and expected outcome frequencies\n * (that is, counts of observations), each squared and divided by the number of observations expected given the\n * hypothesized distribution. The resulting χ2 statistic, `chiSquared`, can be compared to the chi-squared distribution\n * to determine the goodness of fit. In order to determine the degrees of freedom of the chi-squared distribution, one\n * takes the total number of observed frequencies and subtracts the number of estimated parameters. The test statistic\n * follows, approximately, a chi-square distribution with (k − c) degrees of freedom where `k` is the number of non-empty\n * cells and `c` is the number of estimated parameters for the distribution.\n *\n * @param {Array<number>} data\n * @param {Function} distributionType a function that returns a point in a distribution:\n * for instance, binomial, bernoulli, or poisson\n * @param {number} significance\n * @returns {number} chi squared goodness of fit\n * @example\n * // Data from Poisson goodness-of-fit example 10-19 in William W. Hines & Douglas C. Montgomery,\n * // \"Probability and Statistics in Engineering and Management Science\", Wiley (1980).\n * var data1019 = [\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n *     2, 2, 2, 2, 2, 2, 2, 2, 2,\n *     3, 3, 3, 3\n * ];\n * ss.chiSquaredGoodnessOfFit(data1019, ss.poissonDistribution, 0.05); //= false\n */\nfunction chiSquaredGoodnessOfFit(data, distributionType, significance) {\n    // Estimate from the sample data, a weighted mean.\n    const inputMean = mean(data);\n    // Calculated value of the χ2 statistic.\n    let chiSquared = 0;\n    // Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test.\n    // Lose one degree of freedom for estimating `lambda` from the sample data.\n    const c = 1;\n    // The hypothesized distribution.\n    // Generate the hypothesized distribution.\n    const hypothesizedDistribution = distributionType(inputMean);\n    const observedFrequencies = [];\n    const expectedFrequencies = [];\n\n    // Create an array holding a histogram from the sample data, of\n    // the form `{ value: numberOfOcurrences }`\n    for (let i = 0; i < data.length; i++) {\n        if (observedFrequencies[data[i]] === undefined) {\n            observedFrequencies[data[i]] = 0;\n        }\n        observedFrequencies[data[i]]++;\n    }\n\n    // The histogram we created might be sparse - there might be gaps\n    // between values. So we iterate through the histogram, making\n    // sure that instead of undefined, gaps have 0 values.\n    for (let i = 0; i < observedFrequencies.length; i++) {\n        if (observedFrequencies[i] === undefined) {\n            observedFrequencies[i] = 0;\n        }\n    }\n\n    // Create an array holding a histogram of expected data given the\n    // sample size and hypothesized distribution.\n    for (const k in hypothesizedDistribution) {\n        if (k in observedFrequencies) {\n            expectedFrequencies[+k] = hypothesizedDistribution[k] * data.length;\n        }\n    }\n\n    // Working backward through the expected frequencies, collapse classes\n    // if less than three observations are expected for a class.\n    // This transformation is applied to the observed frequencies as well.\n    for (let k = expectedFrequencies.length - 1; k >= 0; k--) {\n        if (expectedFrequencies[k] < 3) {\n            expectedFrequencies[k - 1] += expectedFrequencies[k];\n            expectedFrequencies.pop();\n\n            observedFrequencies[k - 1] += observedFrequencies[k];\n            observedFrequencies.pop();\n        }\n    }\n\n    // Iterate through the squared differences between observed & expected\n    // frequencies, accumulating the `chiSquared` statistic.\n    for (let k = 0; k < observedFrequencies.length; k++) {\n        chiSquared +=\n            Math.pow(observedFrequencies[k] - expectedFrequencies[k], 2) /\n            expectedFrequencies[k];\n    }\n\n    // Calculate degrees of freedom for this test and look it up in the\n    // `chiSquaredDistributionTable` in order to\n    // accept or reject the goodness-of-fit of the hypothesized distribution.\n    // Degrees of freedom, calculated as (number of class intervals -\n    // number of hypothesized distribution parameters estimated - 1)\n    const degreesOfFreedom = observedFrequencies.length - c - 1;\n    return (\n        chiSquaredDistributionTable[degreesOfFreedom][significance] < chiSquared\n    );\n}\n\nexport default chiSquaredGoodnessOfFit;\n","/**\n * Split an array into chunks of a specified size. This function\n * has the same behavior as [PHP's array_chunk](http://php.net/manual/en/function.array-chunk.php)\n * function, and thus will insert smaller-sized chunks at the end if\n * the input size is not divisible by the chunk size.\n *\n * `x` is expected to be an array, and `chunkSize` a number.\n * The `x` array can contain any kind of data.\n *\n * @param {Array} x a sample\n * @param {number} chunkSize size of each output array. must be a positive integer\n * @returns {Array<Array>} a chunked array\n * @throws {Error} if chunk size is less than 1 or not an integer\n * @example\n * chunk([1, 2, 3, 4, 5, 6], 2);\n * // => [[1, 2], [3, 4], [5, 6]]\n */\nfunction chunk(x, chunkSize) {\n    // a list of result chunks, as arrays in an array\n    const output = [];\n\n    // `chunkSize` must be zero or higher - otherwise the loop below,\n    // in which we call `start += chunkSize`, will loop infinitely.\n    // So, we'll detect and throw in that case to indicate\n    // invalid input.\n    if (chunkSize < 1) {\n        throw new Error(\"chunk size must be a positive number\");\n    }\n\n    if (Math.floor(chunkSize) !== chunkSize) {\n        throw new Error(\"chunk size must be an integer\");\n    }\n\n    // `start` is the index at which `.slice` will start selecting\n    // new array elements\n    for (let start = 0; start < x.length; start += chunkSize) {\n        // for each chunk, slice that part of the array and add it\n        // to the output. The `.slice` function does not change\n        // the original array.\n        output.push(x.slice(start, start + chunkSize));\n    }\n    return output;\n}\n\nexport default chunk;\n","import mean from \"./mean\";\nimport sampleStandardDeviation from \"./sample_standard_deviation\";\n\n/**\n * The`coefficient of variation`_ is the ratio of the standard deviation to the mean.\n * .._`coefficient of variation`: https://en.wikipedia.org/wiki/Coefficient_of_variation\n *\n *\n * @param {Array} x input\n * @returns {number} coefficient of variation\n * @example\n * coefficientOfVariation([1, 2, 3, 4]).toFixed(3); // => 0.516\n * coefficientOfVariation([1, 2, 3, 4, 5]).toFixed(3); // => 0.527\n * coefficientOfVariation([-1, 0, 1, 2, 3, 4]).toFixed(3); // => 1.247\n */\nfunction coefficientOfVariation(x) {\n    return sampleStandardDeviation(x) / mean(x);\n}\n\nexport default coefficientOfVariation;\n","/**\n * Implementation of Combinations\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * https://en.wikipedia.org/wiki/Combination\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinations([1, 2, 3], 2); // => [[1,2], [1,3], [2,3]]\n */\n\nfunction combinations(x, k) {\n    let i;\n    let subI;\n    const combinationList = [];\n    let subsetCombinations;\n    let next;\n\n    for (i = 0; i < x.length; i++) {\n        if (k === 1) {\n            combinationList.push([x[i]]);\n        } else {\n            subsetCombinations = combinations(x.slice(i + 1, x.length), k - 1);\n            for (subI = 0; subI < subsetCombinations.length; subI++) {\n                next = subsetCombinations[subI];\n                next.unshift(x[i]);\n                combinationList.push(next);\n            }\n        }\n    }\n    return combinationList;\n}\n\nexport default combinations;\n","/**\n * Implementation of [Combinations](https://en.wikipedia.org/wiki/Combination) with replacement\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * 'With replacement' means that a given element can be chosen multiple times.\n * Unlike permutation, order doesn't matter for combinations.\n *\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinationsReplacement([1, 2], 2); // => [[1, 1], [1, 2], [2, 2]]\n */\nfunction combinationsReplacement(x, k) {\n    const combinationList = [];\n\n    for (let i = 0; i < x.length; i++) {\n        if (k === 1) {\n            // If we're requested to find only one element, we don't need\n            // to recurse: just push `x[i]` onto the list of combinations.\n            combinationList.push([x[i]]);\n        } else {\n            // Otherwise, recursively find combinations, given `k - 1`. Note that\n            // we request `k - 1`, so if you were looking for k=3 combinations, we're\n            // requesting k=2. This -1 gets reversed in the for loop right after this\n            // code, since we concatenate `x[i]` onto the selected combinations,\n            // bringing `k` back up to your requested level.\n            // This recursion may go many levels deep, since it only stops once\n            // k=1.\n            const subsetCombinations = combinationsReplacement(\n                x.slice(i, x.length),\n                k - 1\n            );\n\n            for (let j = 0; j < subsetCombinations.length; j++) {\n                combinationList.push([x[i]].concat(subsetCombinations[j]));\n            }\n        }\n    }\n\n    return combinationList;\n}\n\nexport default combinationsReplacement;\n","import combineMeans from \"./combine_means\";\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n    const newMean = combineMeans(mean1, n1, mean2, n2);\n\n    return (\n        (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) +\n            n2 * (variance2 + Math.pow(mean2 - newMean, 2))) /\n        (n1 + n2)\n    );\n}\n\nexport default combineVariances;\n","/**\n * **[Logistic Cumulative Distribution Function](https://en.wikipedia.org/wiki/Logistic_distribution)**\n *\n * @param {number} x\n * @returns {number} cumulative standard logistic probability\n */\nfunction cumulativeStdLogisticProbability(x) {\n    return 1 / (Math.exp(-x) + 1);\n}\n\nexport default cumulativeStdLogisticProbability;\n","import standardNormalTable from \"./standard_normal_table\";\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n    // Calculate the position of this value.\n    const absZ = Math.abs(z);\n    // Each row begins with a different\n    // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n    // corresponds to a range of 0.01 in the input values, so the value is\n    // multiplied by 100.\n    const index = Math.min(\n        Math.round(absZ * 100),\n        standardNormalTable.length - 1\n    );\n\n    // The index we calculate must be in the table as a positive value,\n    // but we still pay attention to whether the input is positive\n    // or negative, and flip the output value as a last step.\n    if (z >= 0) {\n        return standardNormalTable[index];\n    } else {\n        // due to floating-point arithmetic, values in the table with\n        // 4 significant figures can nevertheless end up as repeating\n        // fractions when they're computed here.\n        return +(1 - standardNormalTable[index]).toFixed(4);\n    }\n}\n\nexport default cumulativeStdNormalProbability;\n","import max from \"./max\";\nimport min from \"./min\";\n\n/**\n * Given an array of x, this will find the extent of the\n * x and return an array of breaks that can be used\n * to categorize the x into a number of classes. The\n * returned array will always be 1 longer than the number of\n * classes because it includes the minimum value.\n *\n * @param {Array<number>} x an array of number values\n * @param {number} nClasses number of desired classes\n * @returns {Array<number>} array of class break positions\n * @example\n * equalIntervalBreaks([1, 2, 3, 4, 5, 6], 4); // => [1, 2.25, 3.5, 4.75, 6]\n */\nfunction equalIntervalBreaks(x, nClasses) {\n    if (x.length < 2) {\n        return x;\n    }\n\n    const theMin = min(x);\n    const theMax = max(x);\n\n    // the first break will always be the minimum value\n    // in the xset\n    const breaks = [theMin];\n\n    // The size of each break is the full range of the x\n    // divided by the number of classes requested\n    const breakSize = (theMax - theMin) / nClasses;\n\n    // In the case of nClasses = 1, this loop won't run\n    // and the returned breaks will be [min, max]\n    for (let i = 1; i < nClasses; i++) {\n        breaks.push(breaks[0] + breakSize * i);\n    }\n\n    // the last break will always be the\n    // maximum.\n    breaks.push(theMax);\n\n    return breaks;\n}\n\nexport default equalIntervalBreaks;\n","/**\n * This computes the minimum & maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {Array<number>} minimum & maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * extent([1, 2, 3, 4]);\n * // => [1, 4]\n */\nfunction extent(x) {\n    if (x.length === 0) {\n        throw new Error(\"extent requires at least one data point\");\n    }\n\n    let min = x[0];\n    let max = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > max) {\n            max = x[i];\n        }\n        if (x[i] < min) {\n            min = x[i];\n        }\n    }\n    return [min, max];\n}\n\nexport default extent;\n","/**\n * The extent is the lowest & highest number in the array. With a sorted array,\n * the first element in the array is always the lowest while the last element is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {Array<number>} minimum & maximum value\n * @example\n * extentSorted([-100, -10, 1, 2, 5]); // => [-100, 5]\n */\nfunction extentSorted(x) {\n    return [x[0], x[x.length - 1]];\n}\n\nexport default extentSorted;\n","import factorial from \"./factorial\";\n\n/**\n * Compute the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Nemes' approximation.\n * The gamma of n is equivalent to (n-1)!, but unlike the factorial function, gamma is defined for all real n except zero\n * and negative integers (where NaN is returned). Note, the gamma function is also well-defined for complex numbers,\n * though this implementation currently does not handle complex numbers as input values.\n * Nemes' approximation is defined [here](https://arxiv.org/abs/1003.6020) as Theorem 2.2.\n * Negative values use [Euler's reflection formula](https://en.wikipedia.org/wiki/Gamma_function#Properties) for computation.\n *\n * @param {number} n Any real number except for zero and negative integers.\n * @returns {number} The gamma of the input value.\n *\n * @example\n * gamma(11.5); // 11899423.084037038\n * gamma(-11.5); // 2.29575810481609e-8\n * gamma(5); // 24\n */\nfunction gamma(n) {\n    if (Number.isInteger(n)) {\n        if (n <= 0) {\n            // gamma not defined for zero or negative integers\n            return NaN;\n        } else {\n            // use factorial for integer inputs\n            return factorial(n - 1);\n        }\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    if (n < 0) {\n        // Use Euler's reflection formula for negative inputs\n        // see:  https://en.wikipedia.org/wiki/Gamma_function#Properties\n        return Math.PI / (Math.sin(Math.PI * -n) * gamma(-n));\n    } else {\n        // Nemes' expansion approximation\n        const seriesCoefficient =\n            Math.pow(n / Math.E, n) * Math.sqrt(2 * Math.PI * (n + 1 / 6));\n\n        const seriesDenom = n + 1 / 4;\n\n        const seriesExpansion =\n            1 +\n            1 / 144 / Math.pow(seriesDenom, 2) -\n            1 / 12960 / Math.pow(seriesDenom, 3) -\n            257 / 207360 / Math.pow(seriesDenom, 4) -\n            52 / 2612736 / Math.pow(seriesDenom, 5) +\n            5741173 / 9405849600 / Math.pow(seriesDenom, 6) +\n            37529 / 18811699200 / Math.pow(seriesDenom, 7);\n\n        return seriesCoefficient * seriesExpansion;\n    }\n}\n\nexport default gamma;\n","/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = ss.geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\nfunction geometricMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"geometricMean requires at least one data point\");\n    }\n\n    // the starting value.\n    let value = 1;\n\n    for (let i = 0; i < x.length; i++) {\n        // the geometric mean is only valid for positive numbers\n        if (x[i] < 0) {\n            throw new Error(\n                \"geometricMean requires only non-negative numbers as input\"\n            );\n        }\n\n        // repeatedly multiply the value by each number\n        value *= x[i];\n    }\n\n    return Math.pow(value, 1 / x.length);\n}\n\nexport default geometricMean;\n","/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"harmonicMean requires at least one data point\");\n    }\n\n    let reciprocalSum = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error(\n                \"harmonicMean requires only positive numbers as input\"\n            );\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\nexport default harmonicMean;\n","/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data) {\n    let m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    const dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        let sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        let point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (let i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m =\n            (dataLength * sumXY - sumX * sumY) /\n            (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - (m * sumX) / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nexport default linearRegression;\n","/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nexport default linearRegressionLine;\n","/**\n * The [log average](https://en.wikipedia.org/wiki/https://en.wikipedia.org/wiki/Geometric_mean#Relationship_with_logarithms)\n * is an equivalent way of computing the geometric mean of an array suitable for large or small products.\n *\n * It's found by calculating the average logarithm of the elements and exponentiating.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n */\nfunction logAverage(x) {\n    if (x.length === 0) {\n        throw new Error(\"logAverage requires at least one data point\");\n    }\n\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] < 0) {\n            throw new Error(\n                \"logAverage requires only non-negative numbers as input\"\n            );\n        }\n        value += Math.log(x[i]);\n    }\n\n    return Math.exp(value / x.length);\n}\n\nexport default logAverage;\n","/**\n * The [Logit](https://en.wikipedia.org/wiki/Logit)\n * is the inverse of cumulativeStdLogisticProbability,\n * and is also known as the logistic quantile function.\n *\n * @param {number} p\n * @returns {number} logit\n */\nfunction logit(p) {\n    if (p <= 0 || p >= 1) {\n        throw new Error(\"p must be strictly between zero and one\");\n    }\n    return Math.log(p / (1 - p));\n}\n\nexport default logit;\n","/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\nfunction maxSorted(x) {\n    return x[x.length - 1];\n}\n\nexport default maxSorted;\n","import quantileSorted from \"./quantile_sorted\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\nfunction medianSorted(sorted) {\n    return quantileSorted(sorted, 0.5);\n}\n\nexport default medianSorted;\n","/**\n * The minimum is the lowest number in the array. With a sorted array,\n * the first element in the array is always the smallest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} minimum value\n * @example\n * minSorted([-100, -10, 1, 2, 5]); // => -100\n */\nfunction minSorted(x) {\n    return x[0];\n}\n\nexport default minSorted;\n","import modeSorted from \"./mode_sorted\";\nimport numericSort from \"./numeric_sort\";\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n log(n))` because it needs to sort the array internally\n * before running an `O(n)` search to find the mode.\n *\n * @param {Array<number>} x input\n * @returns {number} mode\n * @example\n * mode([0, 0, 1]); // => 0\n */\nfunction mode(x) {\n    // Sorting the array lets us iterate through it below and be sure\n    // that every time we see a new number it's new and we'll never\n    // see the same number twice\n    return modeSorted(numericSort(x));\n}\n\nexport default mode;\n","/* globals Map: false */\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * modeFast uses a Map object to keep track of the mode, instead of the approach\n * used with `mode`, a sorted array. As a result, it is faster\n * than `mode` and supports any data type that can be compared with `==`.\n * It also requires a\n * [JavaScript environment with support for Map](https://kangax.github.io/compat-table/es6/#test-Map),\n * and will throw an error if Map is not available.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * @param {Array<*>} x a sample of one or more data points\n * @returns {?*} mode\n * @throws {ReferenceError} if the JavaScript environment doesn't support Map\n * @throws {Error} if x is empty\n * @example\n * modeFast(['rabbits', 'rabbits', 'squirrels']); // => 'rabbits'\n */\nfunction modeFast(x) {\n    // This index will reflect the incidence of different values, indexing\n    // them like\n    // { value: count }\n    const index = new Map();\n\n    // A running `mode` and the number of times it has been encountered.\n    let mode;\n    let modeCount = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        let newCount = index.get(x[i]);\n        if (newCount === undefined) {\n            newCount = 1;\n        } else {\n            newCount++;\n        }\n        if (newCount > modeCount) {\n            mode = x[i];\n            modeCount = newCount;\n        }\n        index.set(x[i], newCount);\n    }\n\n    if (modeCount === 0) {\n        throw new Error(\"mode requires at last one data point\");\n    }\n\n    return mode;\n}\n\nexport default modeFast;\n","import mean from \"./mean\";\nimport shuffleInPlace from \"./shuffle_in_place\";\n\n/**\n * Conducts a [permutation test](https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests)\n * to determine if two data sets are *significantly* different from each other, using\n * the difference of means between the groups as the test statistic.\n * The function allows for the following hypotheses:\n * - two_tail = Null hypothesis: the two distributions are equal.\n * - greater = Null hypothesis: observations from sampleX tend to be smaller than those from sampleY.\n * - less = Null hypothesis: observations from sampleX tend to be greater than those from sampleY.\n * [Learn more about one-tail vs two-tail tests.](https://en.wikipedia.org/wiki/One-_and_two-tailed_tests)\n *\n * @param {Array<number>} sampleX first dataset (e.g. treatment data)\n * @param {Array<number>} sampleY second dataset (e.g. control data)\n * @param {string} alternative alternative hypothesis, either 'two_sided' (default), 'greater', or 'less'\n * @param {number} k number of values in permutation distribution.\n * @param {Function} [randomSource=Math.random] an optional entropy source\n * @returns {number} p-value The probability of observing the difference between groups (as or more extreme than what we did), assuming the null hypothesis.\n *\n * @example\n * var control = [2, 5, 3, 6, 7, 2, 5];\n * var treatment = [20, 5, 13, 12, 7, 2, 2];\n * permutationTest(control, treatment); // ~0.1324\n */\nfunction permutationTest(sampleX, sampleY, alternative, k, randomSource) {\n    // Set default arguments\n    if (k === undefined) {\n        k = 10000;\n    }\n    if (alternative === undefined) {\n        alternative = \"two_side\";\n    }\n    if (\n        alternative !== \"two_side\" &&\n        alternative !== \"greater\" &&\n        alternative !== \"less\"\n    ) {\n        throw new Error(\n            \"`alternative` must be either 'two_side', 'greater', or 'less'\"\n        );\n    }\n\n    // get means for each sample\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n\n    // calculate initial test statistic. This will be our point of comparison with\n    // the generated test statistics.\n    const testStatistic = meanX - meanY;\n\n    // create test-statistic distribution\n    const testStatDsn = new Array(k);\n\n    // combine datsets so we can easily shuffle later\n    const allData = sampleX.concat(sampleY);\n    const midIndex = Math.floor(allData.length / 2);\n\n    for (let i = 0; i < k; i++) {\n        // 1. shuffle data assignments\n        shuffleInPlace(allData, randomSource);\n        const permLeft = allData.slice(0, midIndex);\n        const permRight = allData.slice(midIndex, allData.length);\n\n        // 2.re-calculate test statistic\n        const permTestStatistic = mean(permLeft) - mean(permRight);\n\n        // 3. store test statistic to build test statistic distribution\n        testStatDsn[i] = permTestStatistic;\n    }\n\n    // Calculate p-value depending on alternative\n    // For this test, we calculate the percentage of 'extreme' test statistics (subject to our hypothesis)\n    // more info on permutation test p-value calculations: https://onlinecourses.science.psu.edu/stat464/node/35\n    let numExtremeTStats = 0;\n    if (alternative === \"two_side\") {\n        for (let i = 0; i <= k; i++) {\n            if (Math.abs(testStatDsn[i]) >= Math.abs(testStatistic)) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else if (alternative === \"greater\") {\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] >= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else {\n        // alternative === 'less'\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] <= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    }\n\n    return numExtremeTStats / k;\n}\n\nexport default permutationTest;\n","/**\n * Implementation of [Heap's Algorithm](https://en.wikipedia.org/wiki/Heap%27s_algorithm)\n * for generating permutations.\n *\n * @param {Array} elements any type of data\n * @returns {Array<Array>} array of permutations\n */\nfunction permutationsHeap(elements) {\n    const indexes = new Array(elements.length);\n    const permutations = [elements.slice()];\n\n    for (let i = 0; i < elements.length; i++) {\n        indexes[i] = 0;\n    }\n\n    for (let i = 0; i < elements.length; ) {\n        if (indexes[i] < i) {\n            // At odd indexes, swap from indexes[i] instead\n            // of from the beginning of the array\n            let swapFrom = 0;\n            if (i % 2 !== 0) {\n                swapFrom = indexes[i];\n            }\n\n            // swap between swapFrom and i, using\n            // a temporary variable as storage.\n            const temp = elements[swapFrom];\n            elements[swapFrom] = elements[i];\n            elements[i] = temp;\n\n            permutations.push(elements.slice());\n            indexes[i]++;\n            i = 0;\n        } else {\n            indexes[i] = 0;\n            i++;\n        }\n    }\n\n    return permutations;\n}\n\nexport default permutationsHeap;\n","import epsilon from \"./epsilon\";\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */ {\n    // Check that lambda is strictly positive\n    if (lambda <= 0) {\n        return undefined;\n    }\n\n    // our current place in the distribution\n    let x = 0;\n    // and we keep track of the current cumulative probability, in\n    // order to know when to stop calculating chances.\n    let cumulativeProbability = 0;\n    // the calculated cells to be returned\n    const cells = [];\n    let factorialX = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] = (Math.exp(-lambda) * Math.pow(lambda, x)) / factorialX;\n        cumulativeProbability += cells[x];\n        x++;\n        factorialX *= x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default poissonDistribution;\n","import epsilon from \"./epsilon\";\nimport inverseErrorFunction from \"./inverse_error_function\";\n\n/**\n * The [Probit](http://en.wikipedia.org/wiki/Probit)\n * is the inverse of cumulativeStdNormalProbability(),\n * and is also known as the normal quantile function.\n *\n * It returns the number of standard deviations from the mean\n * where the p'th quantile of values can be found in a normal distribution.\n * So, for example, probit(0.5 + 0.6827/2) ≈ 1 because 68.27% of values are\n * normally found within 1 standard deviation above or below the mean.\n *\n * @param {number} p\n * @returns {number} probit\n */\nfunction probit(p) {\n    if (p === 0) {\n        p = epsilon;\n    } else if (p >= 1) {\n        p = 1 - epsilon;\n    }\n    return Math.sqrt(2) * inverseErrorFunction(2 * p - 1);\n}\n\nexport default probit;\n","/**\n * The [product](https://en.wikipedia.org/wiki/Product_(mathematics)) of an array\n * is the result of multiplying all numbers together, starting using one as the multiplicative identity.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} product of all input numbers\n * @example\n * product([1, 2, 3, 4]); // => 24\n */\nfunction product(x) {\n    let value = 1;\n    for (let i = 0; i < x.length; i++) {\n        value *= x[i];\n    }\n    return value;\n}\n\nexport default product;\n","import numericSort from \"./numeric_sort\";\nimport quantileRankSorted from \"./quantile_rank_sorted\";\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. It will copy and sort your array before each run, so\n * if you know your array is already sorted, you should use `quantileRankSorted`\n * instead.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRank([4, 3, 1, 2], 3); // => 0.75\n * quantileRank([4, 3, 2, 3, 1], 3); // => 0.7\n * quantileRank([2, 4, 1, 3], 6); // => 1\n * quantileRank([5, 3, 1, 2, 3], 4); // => 0.8\n */\nfunction quantileRank(x, value) {\n    // Cloning and sorting the array\n    const sortedCopy = numericSort(x);\n\n    return quantileRankSorted(sortedCopy, value);\n}\n\nexport default quantileRank;\n","/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n    if (x.length < 2) {\n        return 1;\n    }\n\n    // Compute the average y value for the actual\n    // data set in order to compute the\n    // _total sum of squares_\n    let sum = 0;\n    for (let i = 0; i < x.length; i++) {\n        sum += x[i][1];\n    }\n    const average = sum / x.length;\n\n    // Compute the total sum of squares - the\n    // squared difference between each point\n    // and the average of all points.\n    let sumOfSquares = 0;\n    for (let j = 0; j < x.length; j++) {\n        sumOfSquares += Math.pow(average - x[j][1], 2);\n    }\n\n    // Finally estimate the error: the squared\n    // difference between the estimate and the actual data\n    // value at each point.\n    let err = 0;\n    for (let k = 0; k < x.length; k++) {\n        err += Math.pow(x[k][1] - func(x[k][0]), 2);\n    }\n\n    // As the error grows larger, its ratio to the\n    // sum of squares increases and the r squared\n    // value grows lower.\n    return 1 - err / sumOfSquares;\n}\n\nexport default rSquared;\n","import mean from \"./mean\";\n\n/**\n * [Kurtosis](http://en.wikipedia.org/wiki/Kurtosis) is\n * a measure of the heaviness of a distribution's tails relative to its\n * variance. The kurtosis value can be positive or negative, or even undefined.\n *\n * Implementation is based on Fisher's excess kurtosis definition and uses\n * unbiased moment estimators. This is the version found in Excel and available\n * in several statistical packages, including SAS and SciPy.\n *\n * @param {Array<number>} x a sample of 4 or more data points\n * @returns {number} sample kurtosis\n * @throws {Error} if x has length less than 4\n * @example\n * sampleKurtosis([1, 2, 2, 3, 5]); // => 1.4555765595463122\n */\nfunction sampleKurtosis(x) {\n    const n = x.length;\n\n    if (n < 4) {\n        throw new Error(\"sampleKurtosis requires at least four data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let secondCentralMoment = 0;\n    let fourthCentralMoment = 0;\n\n    for (let i = 0; i < n; i++) {\n        tempValue = x[i] - meanValue;\n        secondCentralMoment += tempValue * tempValue;\n        fourthCentralMoment += tempValue * tempValue * tempValue * tempValue;\n    }\n\n    return (\n        ((n - 1) / ((n - 2) * (n - 3))) *\n        ((n * (n + 1) * fourthCentralMoment) /\n            (secondCentralMoment * secondCentralMoment) -\n            3 * (n - 1))\n    );\n}\n\nexport default sampleKurtosis;\n","import sampleCorrelation from \"./sample_correlation\";\n\n/**\n * The [rank correlation](https://en.wikipedia.org/wiki/Rank_correlation) is\n * a measure of the strength of monotonic relationship between two arrays\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample rank correlation\n */\nfunction sampleRankCorrelation(x, y) {\n    const xIndexes = x\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n    const yIndexes = y\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n\n    // At this step, we have an array of indexes\n    // that map from sorted numbers to their original indexes. We reverse\n    // that so that it is an array of the sorted destination index.\n    const xRanks = Array(xIndexes.length);\n    const yRanks = Array(xIndexes.length);\n    for (let i = 0; i < xIndexes.length; i++) {\n        xRanks[xIndexes[i]] = i;\n        yRanks[yIndexes[i]] = i;\n    }\n\n    return sampleCorrelation(xRanks, yRanks);\n}\n\nexport default sampleRankCorrelation;\n","import mean from \"./mean\";\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n    if (x.length < 3) {\n        throw new Error(\"sampleSkewness requires at least three data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let sumSquaredDeviations = 0;\n    let sumCubedDeviations = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    const theSampleStandardDeviation = Math.sqrt(\n        sumSquaredDeviations / besselsCorrection\n    );\n\n    const n = x.length;\n    const cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return (n * sumCubedDeviations) / ((n - 1) * (n - 2) * cubedS);\n}\n\nexport default sampleSkewness;\n","/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    const length = x.length;\n    const sample = [];\n\n    for (let i = 0; i < n; i++) {\n        const index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\nexport default sampleWithReplacement;\n","import max from \"./max\";\nimport silhouette from \"./silhouette\";\n\n/**\n * Calculate the [silhouette metric](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for a set of N-dimensional points arranged in groups. The metric is the largest\n * individual silhouette value for the data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {number} The silhouette metric for the groupings.\n *\n * @example\n * silhouetteMetric([[0.25], [0.75]], [0, 0]); // => 1.0\n */\nfunction silhouetteMetric(points, labels) {\n    const values = silhouette(points, labels);\n    return max(values);\n}\n\nexport default silhouetteMetric;\n","/**\n * When removing a value from a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the value to remove.\n *\n * @since 3.0.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} value the value to remove\n * @returns {number} the new mean\n *\n * @example\n * subtractFromMean(20.5, 6, 53); // => 14\n */\nfunction subtractFromMean(mean, n, value) {\n    return (mean * n - value) / (n - 1);\n}\n\nexport default subtractFromMean;\n","import mean from \"./mean\";\nimport standardDeviation from \"./standard_deviation\";\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n    // The mean of the sample\n    const sampleMean = mean(x);\n\n    // The standard deviation of the sample\n    const sd = standardDeviation(x);\n\n    // Square root the length of the sample\n    const rootN = Math.sqrt(x.length);\n\n    // returning the t value\n    return (sampleMean - expectedValue) / (sd / rootN);\n}\n\nexport default tTest;\n","import mean from \"./mean\";\nimport sampleVariance from \"./sample_variance\";\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n    const n = sampleX.length;\n    const m = sampleY.length;\n\n    // If either sample doesn't actually have any values, we can't\n    // compute this at all, so we return `null`.\n    if (!n || !m) {\n        return null;\n    }\n\n    // default difference (mu) is zero\n    if (!difference) {\n        difference = 0;\n    }\n\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n    const sampleVarianceX = sampleVariance(sampleX);\n    const sampleVarianceY = sampleVariance(sampleY);\n\n    if (\n        typeof meanX === \"number\" &&\n        typeof meanY === \"number\" &&\n        typeof sampleVarianceX === \"number\" &&\n        typeof sampleVarianceY === \"number\"\n    ) {\n        const weightedVariance =\n            ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) /\n            (n + m - 2);\n\n        return (\n            (meanX - meanY - difference) /\n            Math.sqrt(weightedVariance * (1 / n + 1 / m))\n        );\n    }\n}\n\nexport default tTestTwoSample;\n","/**\n * This function calculates the Wilcoxon rank sum statistic for the first sample\n * with respect to the second. The Wilcoxon rank sum test is a non-parametric\n * alternative to the t-test which is equivalent to the\n * [Mann-Whitney U test](https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test).\n * The statistic is calculated by pooling all the observations together, ranking them,\n * and then summing the ranks associated with one of the samples. If this rank sum is\n * sufficiently large or small we reject the hypothesis that the two samples come\n * from the same distribution in favor of the alternative that one is shifted with\n * respect to the other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @returns {number} rank sum for sampleX\n *\n * @example\n * wilcoxonRankSum([1, 4, 8], [9, 12, 15]); // => 6\n */\nfunction wilcoxonRankSum(sampleX, sampleY) {\n    if (!sampleX.length || !sampleY.length) {\n        throw new Error(\"Neither sample can be empty\");\n    }\n\n    const pooledSamples = sampleX\n        .map((x) => ({ label: \"x\", value: x }))\n        .concat(sampleY.map((y) => ({ label: \"y\", value: y })))\n        .sort((a, b) => a.value - b.value);\n\n    for (let rank = 0; rank < pooledSamples.length; rank++) {\n        pooledSamples[rank].rank = rank;\n    }\n\n    let tiedRanks = [pooledSamples[0].rank];\n    for (let i = 1; i < pooledSamples.length; i++) {\n        if (pooledSamples[i].value === pooledSamples[i - 1].value) {\n            tiedRanks.push(pooledSamples[i].rank);\n            if (i === pooledSamples.length - 1) {\n                replaceRanksInPlace(pooledSamples, tiedRanks);\n            }\n        } else if (tiedRanks.length > 1) {\n            replaceRanksInPlace(pooledSamples, tiedRanks);\n        } else {\n            tiedRanks = [pooledSamples[i].rank];\n        }\n    }\n\n    function replaceRanksInPlace(pooledSamples, tiedRanks) {\n        const average = (tiedRanks[0] + tiedRanks[tiedRanks.length - 1]) / 2;\n        for (let i = 0; i < tiedRanks.length; i++) {\n            pooledSamples[tiedRanks[i]].rank = average;\n        }\n    }\n\n    let rankSum = 0;\n\n    for (let i = 0; i < pooledSamples.length; i++) {\n        const sample = pooledSamples[i];\n        if (sample.label === \"x\") {\n            rankSum += sample.rank + 1;\n        }\n    }\n\n    return rankSum;\n}\n\nexport default wilcoxonRankSum;\n","/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x, mean, standardDeviation) {\n    return (x - mean) / standardDeviation;\n}\n\nexport default zScore;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","/**\n * todo reservoir sampling is better to support stream data\n * Algorithm R:\n * Vitter, Jeffrey S. (1 March 1985). \"Random sampling with a reservoir\" (PDF). ACM Transactions on Mathematical Software. 11 (1): 37–57. CiteSeerX 10.1.1.138.784. doi:10.1145/3147.3165.\n */\nexport function reservoirSampling(dataSource, size = 500) {\n    if (dataSource.length <= size)\n        return dataSource;\n    let sampleSpace = dataSource.slice(0, size);\n    let len = dataSource.length;\n    for (let i = size + 1; i < len; i++) {\n        let pos = Math.round(Math.random() * i);\n        if (pos < size) {\n            sampleSpace[pos] = dataSource[i];\n        }\n    }\n    return sampleSpace;\n}\nfunction linearCongruentialGenerator(size, seed) {\n    if (size === 0)\n        return [];\n    const m = 2147483647;\n    const a = 1103515245;\n    const c = 12345;\n    let ans = [seed];\n    for (let i = 1; i < size; i++) {\n        ans.push(((ans[i - 1] * a + c) % m));\n    }\n    return ans.map(v => v / m);\n}\nexport function uniformSampling(dataSource, size) {\n    let sampleIndexes = linearCongruentialGenerator(size, Math.random() * 2147483647);\n    let ans = [];\n    for (let i = 0; i < size; i++) {\n        let index = Math.floor(sampleIndexes[i] * size) % size;\n        ans.push(dataSource[index]);\n    }\n    return ans;\n}\n","class Base {\n    constructor(props) {\n        const { dataSource, dimensions, measures } = props;\n        this.dataSource = dataSource;\n        this.dimensions = dimensions;\n        this.measures = measures;\n    }\n    normalize() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.valueParser = [];\n        this.ranges = [];\n        this.dimensions.forEach(dim => {\n            this.valueSets.push(new Map());\n            this.valueParser.push([]);\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                    this.valueParser[index].push(value);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach((mea, index) => {\n            normalizedRecord[mea] = (record[mea] - this.ranges[index][0]) / (this.ranges[index][1] - this.ranges[index][0]);\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n}\nexport class KNN extends Base {\n    constructor(props) {\n        super(props);\n        const { K } = props;\n        this.K = K;\n        this.normalize();\n    }\n    getNeighbors(targetRecord, features, weights = []) {\n        if (weights.length !== features.length) {\n            features.forEach(f => {\n                weights.push(1);\n            });\n        }\n        // let normalizedRecord = this.normalizeRecord(targetRecord);\n        let dimFeatures = [];\n        let meaFeatures = [];\n        let dimWeights = [];\n        let meaWeights = [];\n        let dimSets = new Set(this.dimensions);\n        for (let i = 0; i < features.length; i++) {\n            if (dimSets.has(features[i])) {\n                dimFeatures.push(features[i]);\n                dimWeights.push(weights[i]);\n            }\n            else {\n                meaFeatures.push(features[i]);\n                meaWeights.push(weights[i]);\n            }\n        }\n        // let legalFeatures = features.filter(f => this.measures.includes(f));\n        let distances = [];\n        this.normalizedDataSource.forEach((record, rIndex) => {\n            let dis = 0;\n            meaFeatures.forEach((feature, index) => {\n                dis += ((record[feature] - targetRecord[feature]) * meaWeights[index]) ** 2;\n            });\n            dimFeatures.forEach((feature, index) => {\n                if (record[feature] !== targetRecord[feature]) {\n                    dis += dimWeights[index] ** 2;\n                }\n            });\n            distances.push({\n                dis,\n                index: rIndex\n            });\n        });\n        distances.sort((a, b) => {\n            return a.dis - b.dis;\n        });\n        let ans = [];\n        let len = Math.min(this.K, distances.length);\n        for (let i = 0; i < len; i++) {\n            ans.push(this.normalizedDataSource[distances[i].index]);\n        }\n        return ans;\n    }\n    getTargetValue(targets, neighbors) {\n        let ans = [];\n        targets.forEach(tar => {\n            let votes = new Map();\n            neighbors.forEach(nei => {\n                if (!votes.has(nei[tar])) {\n                    votes.set(nei[tar], 0);\n                }\n                votes.set(nei[tar], votes.get(nei[tar]) + 1);\n            });\n            let mostCount = 0;\n            let mostFeature = 0;\n            for (let vote of votes) {\n                if (vote[1] > mostCount) {\n                    mostCount = vote[1];\n                    mostFeature = vote[0];\n                }\n            }\n            let dimIndex = this.dimensions.indexOf(tar);\n            if (dimIndex > -1) {\n                ans.push(this.valueParser[dimIndex][mostFeature]);\n            }\n            else {\n                ans.push(mostFeature);\n            }\n        });\n        return ans;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","module.exports = require('./lib/axios');","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sum_unsafe = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_1 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += subset[i][mea];\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_1(i, len);\n    }\n    return sums;\n};\nexports.sum = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_2 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_2(i, len);\n    }\n    return sums;\n};\nexports.count = function (subset, MEASURES) {\n    var cnts = {};\n    MEASURES.forEach(function (mea) {\n        cnts[mea] = 0;\n    });\n    for (var i = 0, len = subset.length; i < len; i++) {\n        MEASURES.forEach(function (mea) {\n            cnts[mea]++;\n        });\n    }\n    return cnts;\n};\nexports.mean = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_3 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_3(i, len);\n    }\n    measures.forEach(function (mea) {\n        sums[mea] /= subset.length;\n    });\n    return sums;\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","module.exports = {\n  \"version\": \"0.22.0\"\n};","import { KNN } from \"../../ml/classification/knn\";\nexport class GroupIntention extends KNN {\n    getTargetValuePercent(targets, targetRecord, neighbors) {\n        let ans = [];\n        targets.forEach((target, index) => {\n            let sameCount = 0;\n            neighbors.forEach(nei => {\n                if (nei[target] === targetRecord[target]) {\n                    sameCount++;\n                }\n            });\n            ans.push(sameCount / neighbors.length);\n        });\n        return ans;\n    }\n    getSignificance(features, targets) {\n        let ans = 0;\n        this.normalizedDataSource.forEach(record => {\n            let neighbors = this.getNeighbors(record, features);\n            let percents = this.getTargetValuePercent(targets, record, neighbors);\n            let sig = 0;\n            percents.forEach(per => {\n                sig += per;\n            });\n            sig /= percents.length;\n            ans += sig;\n        });\n        ans /= this.normalizedDataSource.length;\n        return ans;\n    }\n}\n","import { getMeaSetsBasedOnClusterGroups, getDimClusterGroups } from './subspaces';\nimport { CrammersVThreshold, PearsonCorrelation } from './config';\nimport { Outier } from '../ml/index';\nimport { getCombination, mapPositive } from '../statistics/index';\nimport { CHANNEL } from '../constant';\nimport { entropy, normalize } from '../statistics/index';\nimport aggregate from 'cube-core';\nimport { oneDLinearRegression } from '../statistics/index';\nimport { GroupIntention } from \"./intention/groups\";\nconst SPLITER = '=;=';\nfunction crossGroups(dimensionGroups, measureGroups) {\n    let viewSpaces = [];\n    for (let dimensions of dimensionGroups) {\n        for (let measures of measureGroups) {\n            viewSpaces.push({\n                dimensions,\n                measures\n            });\n        }\n    }\n    return viewSpaces;\n}\nfunction getDimSetsFromClusterGroups(groups) {\n    let dimSets = [];\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nfunction getCombinationFromClusterGroups(groups, limitSize = CHANNEL.maxDimensionNumber) {\n    let fieldSets = [];\n    for (let group of groups) {\n        let combineFieldSet = getCombination(group, 1, limitSize);\n        fieldSets.push(...combineFieldSet);\n    }\n    return fieldSets;\n}\nexport const getGeneralIntentionSpace = async function (aggData, dimensions, measures) {\n    let score = 0;\n    let significance = 0;\n    for (let mea of measures) {\n        let fL = aggData.map(r => r[mea]);\n        let pL = normalize(mapPositive(fL));\n        let value = entropy(pL);\n        score += value;\n        significance += value / Math.log2(fL.length);\n    }\n    score /= measures.length;\n    significance /= measures.length;\n    significance = 1 - significance;\n    return {\n        dimensions,\n        measures,\n        type: 'default_general',\n        score,\n        impurity: score,\n        significance,\n        order: 'asc'\n    };\n};\nexport const getOutlierIntentionSpace = async function getOutlierIntentionSpace(aggData, dimensions, measures) {\n    let iForest = new Outier.IsolationForest([], measures, aggData);\n    iForest.buildIsolationForest();\n    let scoreList = iForest.estimateOutierScore();\n    let maxIndex = 0;\n    let score = 0;\n    for (let i = 0; i < scoreList.length; i++) {\n        if (scoreList[i] > score) {\n            score = scoreList[i];\n            maxIndex = i;\n        }\n    }\n    let des = {};\n    dimensions.concat(measures).forEach(mea => { des[mea] = aggData[maxIndex][mea]; });\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc',\n        description: des\n    };\n};\nexport const getTrendIntentionSpace = async function (aggData, dimensions, measures) {\n    if (dimensions.length !== 1)\n        return null;\n    let orderedData = [...aggData];\n    orderedData.sort((a, b) => {\n        if (a[dimensions[0]] > b[dimensions[0]])\n            return 1;\n        if (a[dimensions[0]] === b[dimensions[0]])\n            return 0;\n        if (a[dimensions[0]] < b[dimensions[0]])\n            return -1;\n    });\n    let score = 0;\n    for (let mea of measures) {\n        let linearModel = new oneDLinearRegression(orderedData, dimensions[0], mea);\n        linearModel.normalizeDimensions(dimensions);\n        score += linearModel.significance();\n    }\n    score /= measures.length;\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc'\n    };\n};\nexport const getGroupIntentionSpace = async function (aggData, dimensions, measures) {\n    if (dimensions.length < 2)\n        return null;\n    let score = 0;\n    let groupIntention = new GroupIntention({\n        dataSource: aggData,\n        dimensions,\n        measures,\n        K: 8\n    });\n    score = groupIntention.getSignificance(measures.concat(dimensions.slice(0, -1)), dimensions.slice(-1));\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc'\n    };\n};\n// export const IntentionWorkerCollection: Map<string, IntentionWorker> = new Map();\nexport var DefaultIWorker;\n(function (DefaultIWorker) {\n    DefaultIWorker[\"outlier\"] = \"default_outlier\";\n    DefaultIWorker[\"cluster\"] = \"default_group\";\n    DefaultIWorker[\"trend\"] = \"default_trend\";\n})(DefaultIWorker || (DefaultIWorker = {}));\nexport class IntentionWorkerCollection {\n    constructor() {\n        this.workers = new Map();\n    }\n    register(name, iWorker) {\n        if (this.workers.has(name)) {\n            throw new Error(`There has been a worker named: ${name} already.`);\n        }\n        else {\n            this.workers.set(name, [true, iWorker]);\n        }\n    }\n    enable(name, status) {\n        if (!this.workers.has(name)) {\n            throw new Error(`Intention Worker \"${name}\" does not exist.`);\n        }\n        else {\n            let iWorkerWithStatus = this.workers.get(name);\n            iWorkerWithStatus[0] = status;\n            this.workers.set(name, iWorkerWithStatus);\n        }\n    }\n    each(func) {\n        for (let [name, iWorker] of this.workers) {\n            if (iWorker[0]) {\n                func(iWorker[1], name);\n            }\n        }\n    }\n    static init(props = { withDefaultIWorkers: true }) {\n        const { withDefaultIWorkers = true } = props;\n        if (!IntentionWorkerCollection.colletion) {\n            IntentionWorkerCollection.colletion = new IntentionWorkerCollection();\n            if (withDefaultIWorkers) {\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.outlier, getOutlierIntentionSpace);\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.cluster, getGroupIntentionSpace);\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.trend, getTrendIntentionSpace);\n            }\n        }\n        for (let key in DefaultIWorker) {\n            IntentionWorkerCollection.colletion.enable(DefaultIWorker[key], withDefaultIWorkers);\n        }\n        return IntentionWorkerCollection.colletion;\n    }\n}\nexport async function getIntentionSpaces(cubePool, viewSpaces, Collection) {\n    let ansSpace = [];\n    for (let space of viewSpaces) {\n        const { dimensions, measures } = space;\n        let key = dimensions.join(SPLITER);\n        if (cubePool.has(key)) {\n            let aggData = cubePool.get(key);\n            let generalSpace = await getGeneralIntentionSpace(aggData, dimensions, measures);\n            Collection.each(async (iWorker, name) => {\n                try {\n                    let iSpace = await iWorker(aggData, dimensions, measures);\n                    if (iSpace !== null) {\n                        iSpace.type = name;\n                        iSpace.impurity = generalSpace.impurity;\n                        ansSpace.push(iSpace);\n                    }\n                }\n                catch (error) {\n                    console.error('worker failed', { dimensions, measures, aggData }, error);\n                }\n            });\n        }\n    }\n    return ansSpace;\n}\nexport async function getVisSpaces(props) {\n    const { dataSource, dimensions, measures, collection, dimension_correlation_threshold = CrammersVThreshold, measure_correlation_threshold = PearsonCorrelation.strong, max_dimension_num_in_view = 3, max_measure_num_in_view = 3, } = props;\n    // 1. get dimension cluster groups.\n    // 2. get measure cluster groups.\n    // 3. get dimension groups * measure groups = subspaces + aggregate\n    // 4. calculate each subspace intention score (entropy, outlier, trend for temporal & oridinal field)\n    // 5. filter each intend subspaces with threadshold\n    // 6.manage those spaces / order them.\n    let visableDimensions = dimensions; //.filter(dim => !isFieldUnique(dataSource, dim));\n    let dimensionGroups = getDimClusterGroups(dataSource, visableDimensions, dimension_correlation_threshold);\n    // let dimensionSets = getDimSetsFromClusterGroups(dimensionGroups);\n    let dimensionSets = getCombinationFromClusterGroups(dimensionGroups, max_dimension_num_in_view);\n    let measureGroups = getMeaSetsBasedOnClusterGroups(dataSource, measures, measure_correlation_threshold);\n    let measureSets = getCombinationFromClusterGroups(measureGroups, max_measure_num_in_view);\n    let viewSpaces = crossGroups(dimensionSets, measureSets);\n    let cubePool = new Map();\n    // for (let group of dimensionGroups) {\n    // todo: similar cuboids computation using cube-core\n    let t0 = new Date().getTime();\n    for (let group of dimensionSets) {\n        let key = group.join(SPLITER);\n        let aggData = aggregate({\n            dataSource,\n            dimensions: group,\n            measures,\n            asFields: measures,\n            operator: 'sum'\n        });\n        cubePool.set(key, aggData);\n    }\n    let t1 = new Date().getTime();\n    console.log('cube cost', t1 - t0);\n    cubePool.set('*', dataSource);\n    const usedCollection = collection || IntentionWorkerCollection.init();\n    ;\n    // usedCollection.enable(DefaultIWorker.cluster, false);\n    let ansSpace = await getIntentionSpaces(cubePool, viewSpaces, usedCollection);\n    return ansSpace;\n}\n","import { crammersV, pearsonCC } from \"../../statistics\";\nimport { getDimClusterGroups, getMeaSetsBasedOnClusterGroups } from \"../subspaces\";\nimport { CrammersVThreshold, PearsonCorrelation } from \"../config\";\nexport class DataGraph {\n    constructor(dimensions, measures) {\n        this.DIMENSION_CORRELATION_THRESHOLD = CrammersVThreshold;\n        this.MEASURE_CORRELATION_THRESHOLD = PearsonCorrelation.strong;\n        this.dimensions = dimensions;\n        this.measures = measures;\n        // this.computeDGraph(dataSource);\n        // this.computeMGraph(dataSource);\n    }\n    computeGraph(dataSource, fields, cc) {\n        let matrix = fields.map((f) => fields.map(() => 0));\n        for (let i = 0; i < fields.length; i++) {\n            matrix[i][i] = 1;\n            for (let j = i + 1; j < fields.length; j++) {\n                matrix[i][j] = matrix[j][i] = cc(dataSource, fields[i], fields[j]);\n            }\n        }\n        return matrix;\n    }\n    computeDGraph(dataSource, cc = crammersV) {\n        this.DG = this.computeGraph(dataSource, this.dimensions, cc);\n        return this.DG;\n    }\n    computeMGraph(dataSource, cc = pearsonCC) {\n        this.MG = this.computeGraph(dataSource, this.measures, cc);\n        return this.MG;\n    }\n    clusterDGraph(dataSource, CORRELATION_THRESHOLD) {\n        const { dimensions, DIMENSION_CORRELATION_THRESHOLD } = this;\n        this.DClusters = getDimClusterGroups(dataSource, dimensions, CORRELATION_THRESHOLD || DIMENSION_CORRELATION_THRESHOLD);\n        return this.DClusters;\n    }\n    clusterMGraph(dataSource, CORRELATION_THRESHOLD) {\n        const { measures, MEASURE_CORRELATION_THRESHOLD } = this;\n        this.MClusters = getMeaSetsBasedOnClusterGroups(dataSource, measures, CORRELATION_THRESHOLD || MEASURE_CORRELATION_THRESHOLD);\n        return this.MClusters;\n    }\n}\n","import { IForestOutlierWorker } from '../workers/IForestOutlier';\nimport { LRTrendWorker } from '../workers/LRTrend';\nexport var DefaultIWorker;\n(function (DefaultIWorker) {\n    DefaultIWorker[\"outlier\"] = \"default_outlier\";\n    // cluster = 'default_group',\n    DefaultIWorker[\"trend\"] = \"default_trend\";\n})(DefaultIWorker || (DefaultIWorker = {}));\n/**\n * collection of insight workers. it helps to manage all the workers in a centralized way.\n */\nexport class InsightWorkerCollection {\n    constructor() {\n        this.workers = new Map();\n    }\n    register(name, iWorker) {\n        if (this.workers.has(name)) {\n            throw new Error(`There has been a worker named: ${name} already.`);\n        }\n        else {\n            this.workers.set(name, [true, iWorker]);\n        }\n    }\n    /**\n     * set a existed worker's status.\n     * @param name insight worker's name used for register.\n     * @param status whether the worker should be used.\n     */\n    enable(name, status) {\n        if (!this.workers.has(name)) {\n            throw new Error(`Intention Worker \"${name}\" does not exist.`);\n        }\n        else {\n            let iWorkerWithStatus = this.workers.get(name);\n            iWorkerWithStatus[0] = status;\n            this.workers.set(name, iWorkerWithStatus);\n        }\n    }\n    /**\n     * enumerate all enabled insight workers.\n     * @param func (what is going to be done with the given worker)\n     */\n    each(func) {\n        for (let [name, iWorker] of this.workers) {\n            if (iWorker[0]) {\n                func(iWorker[1], name);\n            }\n        }\n    }\n    static init(props = { withDefaultIWorkers: true }) {\n        const { withDefaultIWorkers = true } = props;\n        if (!InsightWorkerCollection.colletion) {\n            InsightWorkerCollection.colletion = new InsightWorkerCollection();\n            if (withDefaultIWorkers) {\n                InsightWorkerCollection.colletion.register(DefaultIWorker.outlier, IForestOutlierWorker);\n                // InsightWorkerCollection.colletion.register(DefaultIWorker.cluster, KNNClusterWorker)\n                InsightWorkerCollection.colletion.register(DefaultIWorker.trend, LRTrendWorker);\n            }\n        }\n        Object.values(DefaultIWorker).forEach(workerName => {\n            InsightWorkerCollection.colletion.enable(workerName, withDefaultIWorkers);\n        });\n        return InsightWorkerCollection.colletion;\n    }\n}\n","const FULL_FIELD_USE_THRESHOLD = 25;\nconst PARTS_FIELD_THRESHOLD = 500;\nconst fixOmiga = Math.round((100 - FULL_FIELD_USE_THRESHOLD) ** 2 / PARTS_FIELD_THRESHOLD);\nexport function autoFieldSelect(_fields) {\n    const x = _fields.length;\n    const fields = [..._fields];\n    fields.sort((fa, fb) => fa.features.entropy - fb.features.entropy);\n    if (x < FULL_FIELD_USE_THRESHOLD)\n        return fields;\n    if (x < PARTS_FIELD_THRESHOLD) {\n        return fields.slice(0, Math.round(Math.sqrt(fixOmiga * (x - FULL_FIELD_USE_THRESHOLD)) + FULL_FIELD_USE_THRESHOLD));\n    }\n    else {\n        return fields.slice(0, 100);\n    }\n}\nexport function fieldSelectByPercent(_fields, percent) {\n    const x = _fields.length;\n    const fields = [..._fields];\n    fields.sort((fa, fb) => fa.features.entropy - fb.features.entropy);\n    return fields.slice(0, Math.round(x * percent));\n}\n","import * as Utils from './utils/index';\nimport specification from './specification';\nimport * as Distribution from './distribution';\nimport * as Insight from './insights/index';\nimport * as Cleaner from './cleaner/index';\nimport * as UnivariateSummary from './univariateSummary/index';\nimport * as DashBoard from './dashboard/index';\nimport * as Sampling from './sampling/index';\nimport * as Statistics from './statistics/index';\nimport * as Computation from './computation';\nimport { Cluster, Outier, Classification } from './ml/index';\nexport * from './commonTypes';\nexport * from './insights/InsightFlow/interfaces';\nexport { DashBoard, Sampling, Utils, Statistics, UnivariateSummary, Distribution, specification, Cleaner, Insight, Cluster, Outier, Classification, Computation };\nconsole.log('This is a test version of visual-insights');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar periodCube_1 = require(\"./periodCube\");\nexports.periodCube = periodCube_1.default;\nvar momentCube_1 = require(\"./momentCube\");\nexports.momentCube = momentCube_1.default;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node(aggFunc) {\n        this.children = new Map();\n        this._rawData = [];\n        this.aggFunc = aggFunc;\n        this.cache = false;\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this._rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (measures) {\n        if (measures === void 0) { measures = []; }\n        if (!this.cache) {\n            this._aggData = this.aggFunc(this.rawData, measures);\n            this.cache = true;\n        }\n        return this._aggData;\n    };\n    Node.prototype.clearCache = function () {\n        this.cache = false;\n    };\n    Object.defineProperty(Node.prototype, \"rawData\", {\n        get: function () {\n            var e_1, _a;\n            if (!this.cache) {\n                if (this.children.size !== 0) {\n                    var children = this.children.values();\n                    var rawData = [];\n                    try {\n                        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                            var child = children_1_1.value;\n                            var i = void 0;\n                            var data = child.rawData;\n                            var len = data.length;\n                            for (i = 0; i < len; i++) {\n                                rawData.push(data[i]);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._rawData = rawData;\n                }\n                this.cache = true;\n            }\n            return this._rawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nvar periodCube = /** @class */ (function () {\n    function periodCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n    }\n    periodCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_3, _a;\n            if (level === dimensions.length) {\n                return node.aggData(measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var _b = __read(children_3_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    periodCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    periodCube.prototype.buildTree = function () {\n        var tree = new Node(this.aggFunc);\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    periodCube.prototype.insertNode = function (record, node, level) {\n        node.push(record);\n        node.cache = false;\n        if (level < this.dimensions.length) {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node(this.aggFunc));\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    periodCube.prototype.aggTree = function (node) {\n        var e_4, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_4 = __values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_a = children_4.return)) _a.call(children_4);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    periodCube.prototype.aggNode = function (node) {\n        var e_5, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_5 = __values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_a = children_5.return)) _a.call(children_5);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    return periodCube;\n}());\nexports.default = periodCube;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node() {\n        this.children = new Map();\n        this.rawData = [];\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this.rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (aggFunc, measures) {\n        if (measures === void 0) { measures = []; }\n        this._aggData = aggFunc(this.rawData, measures);\n        return this._aggData;\n    };\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_1, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var _b = __read(children_1_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar momentCube = /** @class */ (function () {\n    function momentCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n        this.buildTree();\n        this.aggTree();\n    }\n    momentCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node.aggData(aggFunc, measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    momentCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    momentCube.prototype.setData = function (props) {\n        var _a = props.aggFunc, aggFunc = _a === void 0 ? this.aggFunc : _a, _b = props.factTable, factTable = _b === void 0 ? this.factTable : _b, _c = props.dimensions, dimensions = _c === void 0 ? this.dimensions : _c, _d = props.measures, measures = _d === void 0 ? this.measures : _d;\n        if (dimensions !== this.dimensions || factTable !== this.factTable) {\n            this.dimensions = dimensions;\n            this.factTable = factTable;\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.buildTree();\n            this.aggTree();\n        }\n        else if (measures !== this.measures || aggFunc !== this.aggFunc) {\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.aggTree();\n        }\n    };\n    momentCube.prototype.buildTree = function () {\n        var tree = new Node();\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    momentCube.prototype.insertNode = function (record, node, level) {\n        if (level === this.dimensions.length) {\n            node.push(record);\n        }\n        else {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node());\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    momentCube.prototype.aggTree = function (node) {\n        var e_3, _a;\n        if (node === void 0) { node = this.tree; }\n        if (node.children.size > 0) {\n            node.rawData = [];\n            var children = node.children.values();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var child = children_3_1.value;\n                    var i = void 0;\n                    var data = this.aggTree(child).rawData;\n                    var len = data.length;\n                    for (i = 0; i < len; i++) {\n                        node.rawData.push(data[i]);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        node.aggData(this.aggFunc, this.measures);\n        return node;\n    };\n    return momentCube;\n}());\nexports.default = momentCube;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tree2Table(props) {\n    var dimensions = props.dimensions, measures = props.measures, cube = props.cube;\n    var aggFunc = cube.aggFunc;\n    var table = [];\n    function dfs(node, record, level) {\n        var e_1, _a, _b;\n        if (node.children.size === 0) {\n            var values = node._aggData;\n            table.push(__assign(__assign({}, record), values));\n            return;\n        }\n        try {\n            for (var _c = __values(node.children.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), childName = _e[0], child = _e[1];\n                var r = __assign(__assign({}, record), (_b = {}, _b[dimensions[level]] = childName, _b));\n                dfs(child, r, level + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    dfs(cube.tree, {}, 0);\n    return table;\n}\nexports.tree2Table = tree2Table;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","/* eslint no-restricted-globals: 0 */\nimport { Cluster } from 'visual-insights';\nimport { timer } from './timer';\n\nconst PearsonThreshold = 0.5;\nfunction sum (arr) {\n  let ans = 0;\n  let len = arr.length;\n  for (let i = 0; i < len; i++) {\n    ans += arr[i];\n  }\n  return ans;\n}\nconst cluster = (e) => {\n  try {\n    const { spaces, maxGroupNumber } = e.data;\n    let result = [];\n    for (let space of spaces) {\n      const { edgesInMST, groups } = Cluster.kruskalWithFullMST(space.matrix, maxGroupNumber, PearsonThreshold);\n      let measureGroups = new Map();\n      for (let i = 0; i < groups.length; i++) {\n        if (!measureGroups.has(groups[i])) {\n          measureGroups.set(groups[i], [])\n        }\n        measureGroups.get(groups[i]).push(space.measures[i])\n      }\n      for (let group of measureGroups.values()) {\n        result.push({\n          dimensions: space.dimensions,\n          measures: group.map(mea => mea.name),\n          score: sum(group.map(mea => mea.value))\n        })\n      }\n    }\n    result.sort((a, b) => a.score - b.score)\n    self.postMessage({\n      success: true,\n      data: result\n    })\n  } catch (error) {\n    self.postMessage({\n      success: false,\n      message: error.toString()\n    }) \n  }\n}\n\nself.addEventListener('message', timer(cluster), false);\n","/**\n * \n * @param {task} task is a function \n */\nexport function timer (task) {\n  return function (e) {\n    let startTime = new Date().getTime();\n    try {\n      task(e);\n    } finally {\n      let cost = new Date().getTime() - startTime;\n      console.log(`Task [${task.name}] cost ${cost} ms.`)\n    }\n  }\n}"],"sourceRoot":""}