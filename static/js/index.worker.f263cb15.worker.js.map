{"version":3,"sources":["../webpack/bootstrap","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../../../node_modules/visual-insights/build/esm/statistics/correlation.js","../../../node_modules/visual-insights/build/esm/statistics/utils.js","../../../node_modules/visual-insights/build/esm/statistics/linearRegression.js","../../../node_modules/visual-insights/build/esm/statistics/aggregation.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/visual-insights/build/esm/constant.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../../node_modules/visual-insights/build/esm/utils/common.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/visual-insights/build/esm/ml/cluster/kruskal.js","../../../node_modules/visual-insights/build/esm/ml/index.js","../../../node_modules/visual-insights/build/esm/ml/outlier/isolationForest.js","../../../node_modules/visual-insights/build/esm/insights/config.js","../../../node_modules/axios/lib/utils.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/specification/encoding.js","../../../node_modules/visual-insights/build/esm/distribution.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/cube-core/built/index.js","../../../node_modules/visual-insights/build/esm/univariateSummary/index.js","../../../node_modules/visual-insights/build/esm/statistics/aggregators.js","../../src/sum.js","../../src/mean.js","../../src/sum_nth_power_deviations.js","../../src/variance.js","../../src/standard_deviation.js","../../src/mode_sorted.js","../../src/numeric_sort.js","../../src/min.js","../../src/max.js","../../src/sum_simple.js","../../src/quantile_sorted.js","../../src/quickselect.js","../../src/quantile.js","../../src/quantile_rank_sorted.js","../../src/interquartile_range.js","../../src/median.js","../../src/median_absolute_deviation.js","../../src/shuffle_in_place.js","../../src/shuffle.js","../../src/sample.js","../../src/make_matrix.js","../../src/unique_count_sorted.js","../../src/ckmeans.js","../../src/sample_covariance.js","../../src/sample_variance.js","../../src/sample_standard_deviation.js","../../src/sample_correlation.js","../../src/combine_means.js","../../src/mean_simple.js","../../src/root_mean_square.js","../../src/bayesian_classifier.js","../../src/perceptron.js","../../src/epsilon.js","../../src/factorial.js","../../src/gammaln.js","../../src/chi_squared_distribution_table.js","../../src/kernel_density_estimation.js","../../src/standard_normal_table.js","../../src/error_function.js","../../src/inverse_error_function.js","../../src/sign.js","../../src/euclidean_distance.js","../../src/k_means_cluster.js","../../src/silhouette.js","../../src/relative_error.js","../../src/add_to_mean.js","../../src/approx_equal.js","../../src/bernoulli_distribution.js","../../src/binomial_distribution.js","../../src/bisect.js","../../src/chi_squared_goodness_of_fit.js","../../src/chunk.js","../../src/coefficient_of_variation.js","../../src/combinations.js","../../src/combinations_replacement.js","../../src/combine_variances.js","../../src/cumulative_std_logistic_probability.js","../../src/cumulative_std_normal_probability.js","../../src/equal_interval_breaks.js","../../src/extent.js","../../src/extent_sorted.js","../../src/gamma.js","../../src/geometric_mean.js","../../src/harmonic_mean.js","../../src/linear_regression.js","../../src/linear_regression_line.js","../../src/log_average.js","../../src/logit.js","../../src/max_sorted.js","../../src/median_sorted.js","../../src/min_sorted.js","../../src/mode.js","../../src/mode_fast.js","../../src/permutation_test.js","../../src/permutations_heap.js","../../src/poisson_distribution.js","../../src/probit.js","../../src/product.js","../../src/quantile_rank.js","../../src/r_squared.js","../../src/sample_kurtosis.js","../../src/sample_rank_correlation.js","../../src/sample_skewness.js","../../src/sample_with_replacement.js","../../src/silhouette_metric.js","../../src/subtract_from_mean.js","../../src/t_test.js","../../src/t_test_two_sample.js","../../src/wilcoxon_rank_sum.js","../../src/z_score.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/axios/lib/defaults.js","../../../node_modules/axios/lib/cancel/Cancel.js","../../../node_modules/visual-insights/build/esm/sampling/index.js","../../../node_modules/visual-insights/build/esm/index.js","../../../node_modules/visual-insights/build/esm/ml/classification/knn.js","../../../node_modules/visual-insights/build/esm/insights/intention/groups.js","../../../node_modules/dayjs/dayjs.min.js","../../../node_modules/axios/index.js","../../../node_modules/cube-core/built/utils/aggregation.js","../../../node_modules/axios/lib/helpers/bind.js","../../../node_modules/axios/lib/helpers/buildURL.js","../../../node_modules/axios/lib/core/enhanceError.js","../../../node_modules/axios/lib/adapters/xhr.js","../../../node_modules/axios/lib/core/createError.js","../../../node_modules/axios/lib/cancel/isCancel.js","../../../node_modules/axios/lib/core/mergeConfig.js","../../../node_modules/axios/lib/env/data.js","../../../node_modules/visual-insights/build/esm/insights/subspaces.js","../../../node_modules/visual-insights/build/esm/insights/impurity.js","../../../node_modules/visual-insights/build/esm/insights/dev.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/fieldSummary.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/dataGraph.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/workerCollection.js","../../../node_modules/visual-insights/build/esm/cube/cuboid.js","../../../node_modules/visual-insights/build/esm/cube/index.js","../../../node_modules/visual-insights/build/esm/insights/workers/IForestOutlier.js","../../../node_modules/visual-insights/build/esm/insights/workers/LRTrend.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/select.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/patterns/general.js","../../../node_modules/visual-insights/build/esm/insights/InsightFlow/engine.js","../../../node_modules/visual-insights/build/esm/computation/parser.js","../../../node_modules/visual-insights/build/esm/computation/clickhouse/dataGraph.js","../../../node_modules/visual-insights/build/esm/computation/clickhouse/statistics.js","../../../node_modules/visual-insights/build/esm/computation/clickhouse/specification.js","../../../node_modules/visual-insights/build/esm/computation/clickhouse/utils.js","../../../node_modules/visual-insights/build/esm/computation/clickhouse/index.js","../../../node_modules/dayjs/plugin/customParseFormat.js","../../../node_modules/regenerator-runtime/runtime.js","../../../node_modules/cube-core/built/core/index.js","../../../node_modules/cube-core/built/core/periodCube.js","../../../node_modules/cube-core/built/core/momentCube.js","../../../node_modules/cube-core/built/utils/transform.js","../../../node_modules/axios/lib/axios.js","../../../node_modules/axios/lib/core/Axios.js","../../../node_modules/axios/lib/core/InterceptorManager.js","../../../node_modules/axios/lib/core/dispatchRequest.js","../../../node_modules/axios/lib/core/transformData.js","../../../node_modules/process/browser.js","../../../node_modules/axios/lib/helpers/normalizeHeaderName.js","../../../node_modules/axios/lib/core/settle.js","../../../node_modules/axios/lib/helpers/cookies.js","../../../node_modules/axios/lib/core/buildFullPath.js","../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../../node_modules/axios/lib/helpers/combineURLs.js","../../../node_modules/axios/lib/helpers/parseHeaders.js","../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../../node_modules/axios/lib/helpers/validator.js","../../../node_modules/axios/lib/cancel/CancelToken.js","../../../node_modules/axios/lib/helpers/spread.js","../../../node_modules/axios/lib/helpers/isAxiosError.js","utils/transform.ts","utils/index.ts","workers/engine/utils.ts","workers/engine/clickhouse.ts","../../../node_modules/visual-insights/build/esm/insights/workers/KNNCluster.js","workers/engine/core.ts","workers/engine/service.ts","workers/engine/index.worker.js?worker"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_createForOfIteratorHelper","allowArrayLike","it","iterator","Array","isArray","length","F","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","chiSquared","nestTree","xSet","ySet","rowSums","Map","colSums","totalSum","x","set","y","node","counter","chis","observed","expected","crammersV","dataSource","fieldX","fieldY","Set","len","record","add","has","Math","sqrt","min","size","pearsonCC","xBar","sum","map","row","yBar","pow","arr","mapPositive","a","abs","filter","getCombination","elements","start","end","ans","combine","push","normalize","frequencyList","entropy","probabilityList","log2","getRangeBy","by","maxValue","Infinity","minValue","max","oneDLinearRegression","X","Y","this","normalizedDataSource","dimensions","valueSets","forEach","dim","index","toString","normalizedRecord","normalizeRecord","keys","mea","meanX","meanY","beta","mean","numerator","denominator","getRegressionEquation","alpha","SSR","SST","yHat","E","cumulativeLogisticDistribution","r_squared","pValue","SPLITOR","SFMapper","count","getAggregator","op","groupBy","rows","groups","join","stdAggregate","props","measures","ops","result","group","aggs","meaIndex","opFunc","dimValues","split","dimIndex","getAggHashKey","values","stdAggregateFromCuboid","generalOpNames","includes","generalOps","opName","opIndex","sumByCol","distMergeBy","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arrayLikeToArray","iter","from","unsupportedIterableToArray","CHANNEL","maxDimensionNumber","maxMeasureNumber","EULER","PERCENT_THRESHOLD_AS_UNIQUE_INDEX","DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP","DEFAULT_BIN_NUM","BIN_NUM_FOR_ANALYTIC","VERSION","_classCallCheck","instance","Constructor","_defineProperties","descriptor","configurable","writable","_createClass","protoProps","staticProps","deepcopy","data","JSON","parse","stringify","copyData","isFieldCategory","fieldName","every","isFieldContinous","TIME_RULES","isFieldTime","isNaN","Number","some","rule","test","memberCount","field","member","entries","groupContinousField","newField","groupNumber","item","segWidth","ranges","left","right","precision","log10","rangeIndex","findIndex","range","toPrecision","groupCategoryField","members","sort","b","v","_slicedToArray","_arr","_n","_d","_s","_i","turnAdjMatrix2List","matrix","edges","j","find","parents","union","n1","n2","p1","p2","findWithEffect","sizes","unionWithEffect","size1","size2","kruskalMST","threshold","edgesInMST","inCutEdge","edge","cluster","method","groupMaxSize","limitSize","kruskalWithLimitSize","kruskal","meas","Outier","IsolationForest","treeNumber","Psi","ceil","sampleSize","floor","limitHeight","iForest","normalizeDimensions","normalizedSampleData","depth","rand","random","randField","dimLength","meaLength","randValue","leftSubData","rightSubData","buildIsolationTree","log","iTree","pathLength","nodeSize","AFS","getPathLength","samples","uniformSampling","recordScoreList","recordScore","avgPathLength","KNN","CrammersVThreshold","PearsonCorrelation","strong","weak","require","val","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","obj","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","assignValue","slice","extend","thisArg","trim","str","replace","stripBOM","content","charCodeAt","_getPrototypeOf","setPrototypeOf","__proto__","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","Super","NewTarget","_setPrototypeOf","_inherits","subClass","superClass","geomTypes","interval","line","area","point","path","density","findBestField","type","fieldRankList","semanticType","choosen","encoding","fields","spec","visualElements","position","color","shape","opacity","facets","page","highFacets","priority","fieldLeft","typeIndex","channelList","channel","specification","dataView","impurity","analyticType","originDimField","dimCardinality","features","unique","geomType","geom","schema","isUniformDistribution","_unsupportedIterableToArray","minLen","__assign","index_1","transform_1","aggregation_1","operatorMap","sum_unsafe","createCube","_a","_b","aggFunc","_c","factTable","periodCube","momentCube","default","asFields","operator","cube","table","tree2Table","as","__export","MIN_QUAN_MEMBER_SIZE","getFieldType","getFieldEntropy","maxEntropy","getFloatFieldEntropy","_max","_min","rangeStep","rangeCounts","fill","pl","colKey","opKey","_sum","dist","originalRange","fixRange","bins","recordBins","let","transition","correction","Error","sumNthPowerDeviations","const","tempValue","meanValue","variance","standardDeviation","modeSorted","sorted","last","NaN","maxSeen","seenThis","numericSort","sumSimple","quantileSorted","idx","quickselect","k","z","exp","sd","swap","tmp","quantile","copy","indices","quantileIndex","compare","stack","pop","quantileSelect","results","quantileRankSorted","mid","lo","hi","u","interquartileRange","q1","q2","median","medianAbsoluteDeviation","medianValue","medianAbsoluteDeviations","shuffleInPlace","randomSource","temporary","shuffle","sample","makeMatrix","columns","column","uniqueCountSorted","lastSeenValue","uniqueValueCount","ssq","sums","sumsOfSquares","sji","muji","fillMatrixColumn","iMin","iMax","backtrackMatrix","jlow","ssqjlow","ssqj","jhigh","sampleCovariance","xmean","ymean","sampleVariance","sampleStandardDeviation","sampleVarianceX","sampleCorrelation","combineMeans","mean1","mean2","meanSimple","rootMeanSquare","sumOfSquares","BayesianClassifier","totalCount","train","category","score","odds","oddsSums","combination","PerceptronModel","weights","bias","predict","label","prediction","gradient","epsilon","factorial","accumulator","COEFFICIENTS","LOGSQRT2PI","PI","chiSquaredDistributionTable","1","0.995","0.99","0.975","0.95","0.9","0.5","0.1","0.05","0.025","0.01","0.005","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","40","50","60","70","80","90","100","SQRT_2PI","kernels","gaussian","bandwidthMethods","nrd","stddev","iqr","kernelDensityEstimation","kernel","bandwidthMethod","kernelFn","bandwidth","cumulativeDistribution","round","standardNormalTable","errorFunction","tau","inverseErrorFunction","inv","sign","euclideanDistance","diff","labelPoints","points","centroids","minDist","MAX_VALUE","calculateCentroids","labels","numCluster","dimension","counts","numPoints","current","centroid","calculateChange","total","silhouette","groupings","numGroups","distances","meanDistanceFromPointToGroup","meanDistanceToNearestGroup","which","relativeError","actual","newValue","tolerance","trials","probability","cumulativeProbability","cells","binomialCoefficient","func","maxIterations","errorTolerance","output","distributionType","significance","hypothesizedDistribution","observedFrequencies","expectedFrequencies","degreesOfFreedom","chunkSize","nClusters","nValues","shift","shiftedValue","clusters","clusterRight","clusterLeft","combinations","subI","subsetCombinations","combinationList","unshift","combinationsReplacement","concat","variance1","variance2","newMean","absZ","toFixed","nClasses","theMin","theMax","breaks","breakSize","gamma","isInteger","sin","seriesDenom","g","reciprocalSum","oldCentroids","newCentroids","change","dataLength","sumX","sumY","sumXX","sumXY","mb","modeCount","newCount","sampleX","sampleY","alternative","testStatistic","testStatDsn","allData","midIndex","permLeft","permRight","permTestStatistic","numExtremeTStats","indexes","permutations","swapFrom","temp","lambda","factorialX","average","secondCentralMoment","fourthCentralMoment","xIndexes","pair","yIndexes","xRanks","yRanks","sumSquaredDeviations","sumCubedDeviations","besselsCorrection","theSampleStandardDeviation","expectedValue","difference","sampleVarianceY","weightedVariance","pooledSamples","rank","tiedRanks","replaceRanksInPlace","rankSum","_defineProperty","_arrayLikeToArray","arr2","utils","normalizeHeaderName","enhanceError","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","defaults","transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","rawValue","parser","encoder","stringifySafely","transformResponse","strictJSONParsing","responseType","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","Cancel","message","__CANCEL__","sampleIndexes","seed","linearCongruentialGenerator","console","K","targetRecord","dimFeatures","meaFeatures","dimWeights","meaWeights","dimSets","rIndex","dis","feature","targets","neighbors","tar","votes","nei","mostCount","mostFeature","vote","indexOf","valueParser","GroupIntention","sameCount","getNeighbors","percents","getTargetValuePercent","sig","per","h","$","M","weekdays","months","String","utcOffset","date","year","month","clone","w","D","ms","Q","toLowerCase","_","S","O","locale","$L","utc","$u","$x","$offset","$d","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","unix","valueOf","getTime","toDate","$locale","weekStart","$set","daysInMonth","subtract","format","invalidDate","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","toJSON","toISOString","toUTCString","$i","isDayjs","en","Ls","subset","_loop_1","_loop_2","MEASURES","cnts","_loop_3","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","parts","hashmarkIndex","config","code","request","response","isAxiosError","description","number","fileName","lineNumber","columnNumber","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","signal","removeEventListener","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","toUpperCase","onreadystatechange","readyState","responseURL","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","config1","config2","getMergedValue","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","getDimCorrelationMatrix","getMeaCorrelationMatrix","getDimClusterGroups","max_number_of_group","maxDimNumberInView","dimCorrelationMatrix","Cluster","getDimSetsBasedOnClusterGroups","correlation_threshold","max_dimensions_in_space","combineDimSet","getMeaSetsBasedOnClusterGroups","soft_max_measures_in_view","correlationMatrix","subspaceSearching","should_dimensions_correlated","getRelatedVertices","adjMatrix","vertices","verticesInGraph","topK","verStatus","targetVertexIndex","corValue","shouldDimensionsCorrelated","insightExtraction","impurityList","dimSet","dset","aggData","aggregate","fL","pL","SPLITER","crossGroups","dimensionGroups","measureGroups","viewSpaces","getCombinationFromClusterGroups","fieldSets","combineFieldSet","DefaultIWorker","getGeneralIntentionSpace","order","getOutlierIntentionSpace","buildIsolationForest","scoreList","estimateOutierScore","maxIndex","des","getTrendIntentionSpace","orderedData","linearModel","getGroupIntentionSpace","groupIntention","getSignificance","IntentionWorkerCollection","workers","iWorker","iWorkerWithStatus","withDefaultIWorkers","colletion","register","outlier","trend","enable","getIntentionSpaces","cubePool","Collection","ansSpace","space","generalSpace","each","iSpace","getVisSpaces","collection","dimension_correlation_threshold","measure_correlation_threshold","max_dimension_num_in_view","max_measure_num_in_view","dimensionSets","measureSets","t0","t1","usedCollection","TESTS","boolean","integer","getFieldsSummary","fieldKeys","dictonary","valueMap","dataType","types","splice","inferDataType","useFloatEntropy","DataGraph","DIMENSION_CORRELATION_THRESHOLD","MEASURE_CORRELATION_THRESHOLD","cc","DG","computeGraph","MG","CORRELATION_THRESHOLD","DClusters","MClusters","DEFAULT_OPS","Cuboid","state","hashKey","groupValues","cuboid","getRawState","operatorOfMeasures","newRow","CUBOID_KEY_SPLITOR","Cube","dimOrder","cuboids","orderedDims","d1","d2","sortDimension","dimKey","currDimSet","existingParentKeys","nullParentKeys","parentKey","minCost","minCuboidKey","pCuboid","parentCuboid","getCuboid","computeFromCuboid","computeRanges","baseCuboid","setData","cuboidKey","cuboidState","setState","cbs","ck","cb","baseKey","buildBaseCuboid","IForestOutlierWorker","LRTrendWorker","InsightWorkerCollection","workerName","fixOmiga","autoFieldSelect","_fields","fa","fb","fieldSelectByPercent","percent","entropyAcc","fl","tLog","ent","meaImp","BIN_SIZE","viewStrength","_key","totalEntLoss","condEnt","logs","groupRows","groupProb","subEnt","noiseGroup","VIEngine","_dimensions","_measures","DIMENSION_NUM_IN_VIEW","MAX","MIN","MEASURE_NUM_IN_VIEW","aggregators","workerCollection","dataGraph","subSpaces","insightSpaces","rawDataSource","storage","version","dataStorage","raw","view","exportCuboids","fieldDictonary","clear","loadCuboid","mutFields","_mutFields","rawFields","selectMode","cookedFieldKeys","rawIndices","transedField","newFieldKey","cookedFields","cookedFieldDictonary","rawIndex","dims","computeDGraph","computeMGraph","clusterDGraph","clusterMGraph","subspaces","context","imp","globalMeasures","globalDist","getState","localDist","conEnt","distList","freq","reduce","subEnt1","noiseFre","viewSpace","getSpaceImpurity","jobPool","job","all","setInsightScores","insightSpace","fieldsInVis","dAggData","fd","getFieldInfoInVisBeta","DB_DATA_TYPE_TO_DATA_TYPE","DEFAULT_SEMANTIC_TYPE","DEFAULT_ANALYTIC_TYPE","inferSemanticTypeFromDataType","inferAnalyticTypeFromDataType","parseCell","parseInt","parseTable","rawRows","rawRow","rowValues","fid","CHDataGraph","viewName","SOFT_MAX_DIM_IN_VIEW","SOFT_MAX_MEA_IN_VIEW","colKeys","CHStatistics","chUtils","col1","col2","query","rawViewInfo","viewInfo","V","res","imps","pureSpec","viewSize","rankedFields","CHUtils","protocol","host","port","sql","axios","BIN_PREFIX","createBins","binRanges","binSize","ClickHouseEngine","dataViewName","dataViewMetas","dbMetas","statistics","queryw","dataStr","getFieldMetas","metas","metaRaw","fr","infos","baseMetas","rawColUniques","colUniques","summary","rawEnt","dbDataType","tableName","VIEW_NAME","buildFieldsSummary","featureTransform","viewFields","rawField","relativeViewField","vf","mergedField","continuousFields","rangeQuery","rawRanges","statValues","getContinuousRanges","binFields","binQuery","bi","binContinuousFields","viewMeta","originField","limit","fieldsInView","fk","Boolean","fIndex","rawDataView","getFieldInfoInVis","queryAggDataView","detailSize","LTS","LT","L","LL","LLL","LLLL","zone","offset","afternoon","milliseconds","SS","Do","ordinal","day","ZZ","formats","regex","exec","hours","customParseFormat","parseTwoDigitYear","minutes","seconds","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","periodCube_1","momentCube_1","__read","ar","__spread","__values","Node","children","_rawData","cache","_aggData","rawData","clearCache","e_1","children_1","children_1_1","child","e_1_1","return","getNode","search","level","e_2","children_2","children_2_1","childName","e_2_1","tree","e_3","children_3","children_3_1","e_3_1","buildTree","insertNode","aggTree","e_4","children_4","children_4_1","e_4_1","aggNode","e_5","children_5","children_5_1","e_5_1","assign","dfs","Axios","mergeConfig","createInstance","defaultConfig","instanceConfig","CancelToken","isCancel","promises","spread","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","promise","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","handlers","use","options","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","write","expires","domain","secure","cookie","toGMTString","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","hash","hostname","pathname","location","requestURL","thing","deprecatedWarnings","formatMessage","opt","desc","opts","warn","allowUnknown","executor","resolvePromise","token","_listeners","onfulfilled","_resolve","listener","callback","payload","dayjs","isSetEqual","B","bset","intersect","RathCHEngine","createInsightSpaces","dimIndices","meaIndices","assSpacesT1","assSpacesT2","t1_score","iteMeaIndices","iteDimIndices","Computation","KNNClusterWorker","RathEngine","exploreViews","ansSpaces","taskPool","task","ansSet","globalDistMapByMeasure","pbDist","ld","EKL","kl","globalPbDist","localSum","px","py","card","Insight","EngineRef","initEngine","engineMode","setCHConfig","destroyEngine","startPipeLine","prints","viewSampleData","times","performance","fieldMetas","fieldsProps","engine","setFields","univarSelection","buildGraph","clusterFields","buildCube","buildSubspaces","uvsView","buildDataGraph","fastInsightRecommand","loadData","specify","scanDetails","spaceIndex","scanDetail","associate","exportResult","ser","serialize","engineStorage","importFromUploads","deSerialize","syncEngine","subInsight","searchPointInterests","onSuccess","onFailed","req","res_start","res_spec","res_asso","res_details","res_result","res_sync","res_subinsight","res_upload","router","postMessage","success"],"mappings":"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","file":"static/js/index.worker.f263cb15.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 73);\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * chiSquared implementation using adjacency list(spare graph), which is ableto handle fields with large cardinality.\n * @param nestTree hash tree with depth = 2, represents the relationship between var x and var y.\n * @param xSet value set of var x.\n * @param ySet value set of var y.\n */\nexport function chiSquared(nestTree, xSet, ySet) {\n    if (typeof nestTree === 'undefined' || typeof xSet === 'undefined' || typeof ySet === 'undefined') {\n        return 0;\n    }\n    let rowSums = new Map();\n    let colSums = new Map();\n    let totalSum = 0;\n    for (let x of xSet) {\n        rowSums.set(x, 0);\n    }\n    for (let y of ySet) {\n        colSums.set(y, 0);\n    }\n    for (let [x, node] of nestTree) {\n        for (let [y, counter] of node) {\n            rowSums.set(x, rowSums.get(x) + counter);\n            colSums.set(y, colSums.get(y) + counter);\n            totalSum += counter;\n        }\n    }\n    let chis = 0;\n    for (let [x, node] of nestTree) {\n        for (let [y, observed] of node) {\n            let expected = rowSums.get(x) * colSums.get(y) / totalSum;\n            chis += (observed - expected) ** 2 / expected;\n        }\n    }\n    return chis;\n}\n/**\n * crammersV implementation using adjacency list(spare graph), which is ableto handle fields with large cardinality.\n * @param dataSource array of records.\n * @param fieldX field key of var X.\n * @param fieldY field key of varY.\n */\nexport const crammersV = (dataSource, fieldX, fieldY) => {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    const V = Math.sqrt(chis / (dataSource.length * Math.min(xSet.size - 1, ySet.size - 1)));\n    return V;\n};\nexport function chiSquaredFromDataSource(dataSource, fieldX, fieldY) {\n    const xSet = new Set();\n    const ySet = new Set();\n    const nestTree = new Map();\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        let record = dataSource[i];\n        xSet.add(record[fieldX]);\n        ySet.add(record[fieldY]);\n        if (!nestTree.has(record[fieldX])) {\n            nestTree.set(record[fieldX], new Map());\n        }\n        let node = nestTree.get(record[fieldX]);\n        if (!node.has(record[fieldY])) {\n            node.set(record[fieldY], 0);\n        }\n        node.set(record[fieldY], node.get(record[fieldY]) + 1);\n    }\n    const chis = chiSquared(nestTree, xSet, ySet);\n    return chis;\n}\n/**\n * Pearson correlation coefficient\n * @param dataSource array of records\n * @param fieldX field key of var X.\n * @param fieldY field key of var Y.\n */\nexport const pearsonCC = (dataSource, fieldX, fieldY) => {\n    let r = 0;\n    let xBar = sum(dataSource.map(row => row[fieldX])) / dataSource.length;\n    let yBar = sum(dataSource.map(row => row[fieldY])) / dataSource.length;\n    r = sum(dataSource.map(row => (row[fieldX] - xBar) * (row[fieldY] - yBar))) /\n        Math.sqrt(sum(dataSource.map(row => Math.pow(row[fieldX] - xBar, 2))) * sum(dataSource.map(row => Math.pow(row[fieldY] - yBar, 2))));\n    return r;\n};\nfunction sum(arr) {\n    let s = 0;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        // if (typeof dataSource[i][field])\n        s += arr[i];\n    }\n    return s;\n}\n// can be used for test. do not delete these code. it is implementation with adj matrix. can be faster in dense graph cases.\n// export function crammersV(dataSource: DataSource, fieldX: string, fieldY: string): number {\n//   const xSet = new Set(dataSource.map(d => d[fieldX]))\n//   const ySet = new Set(dataSource.map(d => d[fieldY]))\n//   const xMembers = [...xSet];\n//   const yMembers = [...ySet];\n//   let xDict = {};\n//   let yDict = {};\n//   for (let i = 0; i < xMembers.length; i++) {\n//     xDict[xMembers[i]] = i;\n//   }\n//   for (let i = 0; i < yMembers.length; i++) {\n//     yDict[yMembers[i]] = i;\n//   }\n//   // let matrix: number[][] = xMembers.map(x => yMembers.map(y => 0));\n//   let matrix: number[][] = [];\n//   for (let  i = 0; i < xMembers.length; i++) {\n//     matrix.push([]);\n//     for (let j = 0; j < yMembers.length; j++) {\n//       matrix[i].push(0);\n//     }\n//   }\n//   for (let record of dataSource) {\n//     matrix[xDict[record[fieldX]]][yDict[record[fieldY]]]++;\n//   }\n//   const chis = chiSquared(matrix);\n//   const V = Math.sqrt(chis / (dataSource.length * Math.min(xMembers.length - 1, yMembers.length - 1)))\n//   return V;\n// }\n// export function chiSquared(matrix: number[][] = [[]]): number {\n//   let rowSums = matrix.map(m => 0);\n//   let colSums = matrix[0].map(m => 0);\n//   let totalSum = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       rowSums[i] += matrix[i][j];\n//       colSums[j] += matrix[i][j];\n//       totalSum += matrix[i][j];\n//     }\n//   }\n//   let chis = 0;\n//   for (let i = 0; i < matrix.length; i++) {\n//     for (let j = 0; j < matrix[i].length; j++) {\n//       let observed = matrix[i][j];\n//       let expected = rowSums[i] * colSums[j] / totalSum;\n//       chis += (observed - expected) ** 2 / expected;\n//     }\n//   }\n//   return chis;\n// }\n","export function linearMapPositive(arr) {\n    let min = Math.min(...arr);\n    return arr.map(a => a - min + 1);\n}\nexport function mapPositive(arr) {\n    return arr.map(a => Math.abs(a)).filter(a => a !== 0);\n}\nexport function getCombination(elements, start = 1, end = elements.length) {\n    let ans = [];\n    const combine = (step, set, size) => {\n        if (set.length === size) {\n            ans.push([...set]);\n            return;\n        }\n        if (step >= elements.length) {\n            return;\n        }\n        combine(step + 1, [...set, elements[step]], size);\n        combine(step + 1, set, size);\n    };\n    for (let i = start; i <= end; i++) {\n        combine(0, [], i);\n    }\n    return ans;\n}\nexport function normalize(frequencyList) {\n    let sum = 0;\n    for (let f of frequencyList) {\n        sum += f;\n    }\n    return frequencyList.map(f => f / sum);\n}\nexport const entropy = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * Math.log2(p);\n    }\n    return -sum;\n};\nexport const gini = (probabilityList) => {\n    let sum = 0;\n    for (let p of probabilityList) {\n        sum += p * (1 - p);\n    }\n    return sum;\n};\nexport function getRangeBy(dataSource, by) {\n    let maxValue = -Infinity;\n    let minValue = Infinity;\n    for (let row of dataSource) {\n        maxValue = Math.max(row[by], maxValue);\n        minValue = Math.min(row[by], minValue);\n    }\n    return [minValue, maxValue];\n}\n","export class oneDLinearRegression {\n    constructor(dataSource, X, Y) {\n        this.dataSource = dataSource;\n        this.X = X;\n        this.Y = Y;\n        this.normalizedDataSource = dataSource;\n    }\n    normalizeDimensions(dimensions) {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.dataSource.forEach(record => {\n            dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record, dimensions);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record, dimensions) {\n        let normalizedRecord = {};\n        Object.keys(record).forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    mean() {\n        let meanX = 0;\n        let meanY = 0;\n        if (this.normalizedDataSource.length === 0)\n            return [meanX, meanY];\n        this.normalizedDataSource.forEach((record, index) => {\n            meanX += record[this.X];\n            meanY += record[this.Y];\n        });\n        meanX /= this.normalizedDataSource.length;\n        meanY /= this.normalizedDataSource.length;\n        return [meanX, meanY];\n    }\n    getRegressionEquation() {\n        if (this.normalizedDataSource.length === 0)\n            return [0, 0];\n        const [meanX, meanY] = this.mean();\n        let beta = 0;\n        let alpha = 0;\n        let numerator = 0;\n        let denominator = 0;\n        this.normalizedDataSource.forEach(record => {\n            numerator += (record[this.X] - meanX) * (record[this.Y] - meanY);\n            denominator += (record[this.X] - meanX) ** 2;\n        });\n        beta = numerator / denominator;\n        alpha = meanY - meanX * beta;\n        return [alpha, beta];\n    }\n    r_squared() {\n        const [, meanY] = this.mean();\n        const [alpha, beta] = this.getRegressionEquation();\n        let SSR = 0;\n        let SST = 0;\n        this.normalizedDataSource.forEach(record => {\n            let x = record[this.X];\n            let y = record[this.Y];\n            let yHat = x * beta + alpha;\n            SSR += (yHat - meanY) ** 2;\n            SST += (y - meanY) ** 2;\n        });\n        return SSR / SST;\n    }\n    cumulativeLogisticDistribution(x) {\n        const lambda = 2;\n        const mu = 0.2;\n        return 1 / (1 + Math.pow(Math.E, -(x - mu) / lambda));\n    }\n    pValue() {\n        const [, beta] = this.getRegressionEquation();\n        const value = this.cumulativeLogisticDistribution(Math.abs(beta));\n        if (value > 0.5) {\n            return 2 * (1 - value);\n        }\n        else {\n            return 2 * value;\n        }\n    }\n    significance() {\n        let r_squared = this.r_squared();\n        let p_value = this.pValue();\n        return r_squared * (1 - p_value);\n    }\n}\n","import { min, max, sum, mean } from 'simple-statistics';\nimport { distMergeBy, sumByCol } from './aggregators';\nconst SPLITOR = '_join_';\nconst count = function (x) {\n    return x.length;\n};\nexport const SFMapper = {\n    sum,\n    max,\n    mean,\n    min,\n    count\n};\nexport function getAggregator(op) {\n    const func = SFMapper[op] || sum;\n    return func;\n}\nexport function groupBy(rows, by) {\n    const groups = new Map();\n    for (let record of rows) {\n        const key = by.map((d) => record[d]).join(SPLITOR);\n        if (!groups.has(key)) {\n            groups.set(key, []);\n        }\n        groups.get(key).push(record);\n    }\n    return groups;\n}\nexport function simpleAggregate(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            const opFunc = getAggregator(ops[meaIndex]);\n            aggs[mea] = opFunc(group.map(r => r[mea]));\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function stdAggregate(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            aggs[mea] = {};\n            ops.forEach(op => {\n                const opFunc = getAggregator(op);\n                aggs[mea][op] = opFunc(group.map((r) => r[mea]));\n            });\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function getAggHashKey(values) {\n    return values.join(SPLITOR);\n}\nexport function stdAggregateByGroups(props) {\n    const { groups, measures, ops, dimensions } = props;\n    const result = [];\n    for (let [key, group] of groups) {\n        const aggs = {};\n        measures.forEach((mea, meaIndex) => {\n            aggs[mea] = {};\n            ops.forEach(op => {\n                const opFunc = getAggregator(op);\n                aggs[mea][op] = opFunc(group.map((r) => r[mea]));\n            });\n        });\n        const dimValues = key.split(SPLITOR);\n        dimensions.forEach((dim, dimIndex) => {\n            aggs[dim] = dimValues[dimIndex];\n        });\n        result.push(aggs);\n    }\n    return result;\n}\nexport function stdAggregateFromCuboid(props) {\n    const { dataSource, dimensions, measures, ops } = props;\n    const groups = groupBy(dataSource, dimensions);\n    const result = [];\n    // TODO: need a formal solution for distributive\\algebraic\\holistic aggregators.\n    const generalOpNames = ops.filter(op => !(['sum', 'count', 'mean', 'dist'].includes(op)));\n    const generalOps = generalOpNames.map(opName => getAggregator(opName));\n    for (let [key, group] of groups) {\n        const aggs = {};\n        for (let meaIndex = 0; meaIndex < measures.length; meaIndex++) {\n            const mea = measures[meaIndex];\n            aggs[mea] = {};\n            generalOps.forEach((op, opIndex) => {\n                const opName = generalOpNames[opIndex];\n                aggs[mea][opName] = op(group.map((r) => r[mea][opName]));\n            });\n            // 讨论：描述的简洁性 vs 性能\n            aggs[mea][\"sum\"] = sumByCol(group, mea, 'sum');\n            aggs[mea][\"count\"] = sumByCol(group, mea, 'count');\n            // aggs[mea][\"sum\"] = getAggregator('sum')(group.map((r) => r[mea][\"sum\"]));\n            // aggs[mea][\"count\"] = getAggregator('sum')(group.map((r) => r[mea]['count']));\n            aggs[mea][\"mean\"] = aggs[mea]['sum'] / aggs[mea]['count'];\n            aggs[mea]['dist'] = distMergeBy(group, mea, 'dist');\n        }\n        const dimValues = key.split(SPLITOR);\n        for (let dimIndex = 0; dimIndex < dimensions.length; dimIndex++) {\n            aggs[dimensions[dimIndex]] = dimValues[dimIndex];\n        }\n        result.push(aggs);\n    }\n    return result;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const CHANNEL = {\n    maxDimensionNumber: 8,\n    maxMeasureNumber: 6\n};\nexport const EULER = 0.5772156649;\nexport const PERCENT_THRESHOLD_AS_UNIQUE_INDEX = 0.95;\nexport const DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP = 40;\nexport const DEFAULT_BIN_NUM = 8;\nexport const BIN_NUM_FOR_ANALYTIC = DEFAULT_BIN_NUM * 2;\nexport const VERSION = '0.7.5';\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const JOIN_SYMBOL = '_';\nconst MAGIC_NUMBER = 5;\nfunction deepcopy(data) {\n    return JSON.parse(JSON.stringify(data));\n}\nfunction copyData(data) {\n    return data.map(r => ({\n        ...r\n    }));\n}\nfunction isFieldCategory(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'string'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldContinous(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return typeof record[fieldName] === 'number'\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction isFieldNumeric(dataSource, fieldName) {\n    return dataSource.every(record => {\n        return !isNaN(record[fieldName])\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nconst TIME_RULES = [\n    /^[0-9]{2,4}[-/][0-9]{1,2}([-/][0-9]{1,2})?$/,\n    /^[0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4}$/,\n    /^[0-9]{4}[0-9]{2}[0-9]{2}$/,\n    /^[0-9]{2,4}[-/][0-9]{1,2}[-/][0-9]{1,2} [0-9]{1,2}:[0-9]{1-2}:[0-9]{1-2}$/ // YYYY-MM-DD HH:mm:ss\n];\nfunction isFieldTime(dataSource, fieldName) {\n    return dataSource.every(record => {\n        // todo: tmp solotion here.\n        if (!isNaN(Number(record[fieldName])) && Number(record[fieldName]) >= 1800 && Number(record[fieldName]) <= 2200) {\n            return true;\n        }\n        return (typeof record[fieldName] === 'string'\n            // && /^[0-9]{0,4}[-/][0-9]{0,2}([-/][0-9]{0,2}$)?/.test(record[fieldName]))\n            && TIME_RULES.some(rule => rule.test(record[fieldName])))\n            || typeof record[fieldName] === 'undefined'\n            || record[fieldName] === null;\n    });\n}\nfunction aggregate({ dataSource, fields, bys, method = 'sum' }) {\n    let tmp = [];\n    for (let by of bys) {\n        let map = new Map();\n        for (let record of dataSource) {\n            let key = JSON.stringify(fields.map(field => record[field]));\n            if (!map.has(key)) {\n                map.set(key, 0);\n            }\n            map.set(key, map.get(key) + record[by]);\n        }\n        for (let [key, value] of map) {\n            let row = {\n                index: key,\n                [by]: value\n            };\n            let dims = JSON.parse(key);\n            for (let i = 0; i < fields.length; i++) {\n                row[fields[i]] = dims[i];\n            }\n            tmp.push(row);\n        }\n    }\n    let ans = new Map();\n    for (let record of tmp) {\n        if (!ans.has(record.index)) {\n            ans.set(record.index, {});\n        }\n        ans.set(record.index, { ...ans.get(record.index), ...record });\n    }\n    return [...ans.values()];\n}\nfunction memberCount(dataSource, field) {\n    const counter = new Map();\n    for (let row of dataSource) {\n        let member = row[field];\n        if (!counter.has(member)) {\n            counter.set(member, 0);\n        }\n        counter.set(member, counter.get(member) + 1);\n    }\n    return [...counter.entries()];\n}\nfunction groupContinousField({ dataSource, field, newField = `${field}(con-group)`, groupNumber }) {\n    // const members = memberCount(dataSource, field);\n    // todo: outlier detection\n    const values = dataSource.map(item => item[field]);\n    const max = Math.max(...values); // Number.EPSILON * ;\n    const min = Math.min(...values);\n    const segWidth = (max - min) / groupNumber;\n    let ranges = [];\n    for (let i = 0; i < groupNumber; i++) {\n        let left = min + i * segWidth;\n        let right = min + (i + 1) * segWidth;\n        ranges.push([left, right]);\n    }\n    ranges[0][0] = -Infinity;\n    ranges[ranges.length - 1][1] = Infinity;\n    let precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n    for (let i = 0; i < dataSource.length; i++) {\n        let record = dataSource[i];\n        let rangeIndex = ranges.findIndex(r => (r[0] <= record[field] && record[field] < r[1]));\n        let range = ranges[rangeIndex];\n        if (typeof range !== 'undefined') {\n            record[newField] = `${rangeIndex + 1}:[${Number(range[0].toPrecision(precision))}, ${Number(range[1].toPrecision(precision))})`;\n        }\n        else {\n            record[newField] = 'null';\n        }\n    }\n    return dataSource;\n}\nfunction groupCategoryField({ dataSource, field, newField = `${field}(cat-group)`, groupNumber }) {\n    // auto category should obey Power law distrubution.\n    let members = memberCount(dataSource, field);\n    members.sort((a, b) => b[1] - a[1]);\n    let sum = members.map(v => v[1]);\n    groupNumber = members.length;\n    for (let i = sum.length - 2; i >= 0; i--) {\n        sum[i] = sum[i + 1] + sum[i];\n    }\n    for (let i = 0; i < members.length - 2; i++) {\n        // strict mode\n        // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n        if (members[i][1] * MAGIC_NUMBER >= sum[i + 1] && members[i + 1][1] / MAGIC_NUMBER < sum[i + 2]) {\n            groupNumber = i + 2;\n            break;\n        }\n    }\n    // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n    if (groupNumber === members.length) {\n        return dataSource.map(record => {\n            return {\n                ...record,\n                [newField]: record[field]\n            };\n        });\n    }\n    let set = new Set();\n    for (let i = groupNumber - 1; i < members.length; i++) {\n        set.add(members[i][0]);\n    }\n    for (let record of dataSource) {\n        if (set.has(record[field])) {\n            record[newField] = 'others';\n        }\n        else {\n            record[newField] = record[field];\n        }\n    }\n    return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\nfunction DKL(p1List, p2List) {\n    let sum = 0;\n    const len = Math.max(p1List.length, p2List.length);\n    for (let i = 0; i < len; i++) {\n        let p1 = p1List[i] || 0;\n        let p2 = p2List[i] || 0;\n        sum += p1 * Math.log2(p1 / p2);\n    }\n    return sum;\n}\nfunction isFieldUnique(dataSource, field) {\n    let set = new Set();\n    let validCount = 0;\n    let len = dataSource.length;\n    for (let i = 0; i < len; i++) {\n        if (dataSource[i][field] !== undefined && dataSource[i][field] !== null && dataSource[i][field] !== '') {\n            validCount++;\n            set.add(dataSource[i][field]);\n        }\n    }\n    if (set.size === validCount)\n        return true;\n    return false;\n}\nexport { deepcopy, copyData, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL, isFieldUnique };\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n    // only for the special matrix here(corelational matrix)\n    let edges = [];\n    for (let i = 0; i < matrix.length; i++) {\n        for (let j = i + 1; j < matrix[i].length; j++) {\n            edges.push([[i, j], Math.abs(matrix[i][j])]);\n        }\n    }\n    return edges;\n}\nfunction find(parents, n) {\n    return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\nfunction union(parents, n1, n2) {\n    let p1 = find(parents, n1);\n    let p2 = find(parents, n2);\n    parents[p1] = p2;\n    // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n    // may check and prove whether it's necessary.\n    find(parents, n1);\n    find(parents, n2);\n}\nfunction findWithEffect(parents, sizes, n) {\n    if (parents[n] === n) {\n        return n;\n    }\n    parents[n] = findWithEffect(parents, sizes, parents[n]);\n    sizes[n] = sizes[parents[n]];\n    return parents[n];\n}\nfunction unionWithEffect(parents, sizes, n1, n2) {\n    let p1 = findWithEffect(parents, sizes, n1);\n    let p2 = findWithEffect(parents, sizes, n2);\n    let size1 = sizes[p1];\n    let size2 = sizes[p2];\n    parents[p1] = p2;\n    sizes[p1] = sizes[p2] = size1 + size2;\n    findWithEffect(parents, sizes, n1);\n    findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\nfunction kruskal(matrix, groupNumber, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\n// todo: delete kruskal with limit size, use largest size to limit it(uncontrolled group number but better), need discuss.\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\nfunction kruskalWithLimitSize(matrix, limitSize) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const parents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    let groups = new Map();\n    for (let i = 0; i < parents.length; i++) {\n        if (!groups.has(parents[i])) {\n            groups.set(parents[i], []);\n        }\n        groups.get(parents[i]).push(i);\n    }\n    return groups;\n}\nexport function kruskalMSTWithLimitSize(matrix, limitSize = 4) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    const cloneParents = matrix.map((m, i) => i);\n    const sizes = matrix.map(() => 1);\n    for (let edge of edges) {\n        if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n            if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n                if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n                    edgesInMST.push([edge[0], edge[1], true]);\n                    union(cloneParents, edge[0][0], edge[0][1]);\n                }\n                continue;\n            }\n            unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], false]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = findWithEffect(parents, sizes, i);\n            cloneParents[i] = find(cloneParents, i);\n        }\n        let set = new Set(parents);\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups: parents };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\nexport function kruskalMST(matrix, groupNumber = 4, threshold = 0) {\n    const edges = turnAdjMatrix2List(matrix);\n    edges.sort((a, b) => b[1] - a[1]);\n    const edgesInMST = [];\n    const parents = matrix.map((m, i) => i);\n    let groups = [...parents];\n    let inCutEdge = false;\n    for (let edge of edges) {\n        if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n            union(parents, edge[0][0], edge[0][1]);\n            // fuck typescript\n            // edgesInMST.push([...edge, inCutEdge]);\n            edgesInMST.push([edge[0], edge[1], inCutEdge]);\n        }\n        for (let i = 0; i < parents.length; i++) {\n            parents[i] = find(parents, i);\n        }\n        let set = new Set(parents);\n        // TODO:\n        // + use kruskalMST instead of kruskal.\n        if (set.size <= groupNumber || edge[1] < threshold) {\n            inCutEdge = true;\n        }\n        else {\n            groups = [...parents];\n        }\n        if (set.size === 1) {\n            break;\n        }\n    }\n    return { edgesInMST, groups };\n}\nfunction cluster({ matrix, measures, method = 'kruskal', groupMaxSize = 4, limitSize = false, threshold = 0 }) {\n    // const groups = kruskal({ matrix, groupMaxSize });\n    let groups;\n    if (limitSize) {\n        groups = kruskalWithLimitSize(matrix, groupMaxSize);\n    }\n    else {\n        groups = kruskal(matrix, groupMaxSize, threshold);\n    }\n    let ans = [];\n    for (let meas of groups.values()) {\n        ans.push(meas.map(meaIndex => measures[meaIndex]));\n    }\n    return ans;\n}\nexport default cluster;\n","import * as Cluster from './cluster/index';\nimport { KNN } from './classification/knn';\nimport { IsolationForest } from './outlier/isolationForest';\nconst Outier = {\n    IsolationForest\n};\nconst Classification = {\n    KNN\n};\nexport { Cluster, Outier, Classification };\n","import { uniformSampling } from \"../../sampling\";\nimport { EULER } from \"../../constant\";\nexport class IsolationForest {\n    constructor(dimensions, measures, dataSource, treeNumber = 100, Psi = 256) {\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.dataSource = dataSource;\n        if (dataSource.length < Psi) {\n            this.treeNumber = Math.max(1, Math.ceil(Psi / 50));\n            this.sampleSize = Math.max(2, Math.floor(dataSource.length / 2));\n        }\n        else {\n            this.treeNumber = treeNumber;\n            this.sampleSize = Psi;\n        }\n        this.limitHeight = Math.ceil(Math.log2(this.sampleSize));\n        this.iForest = [];\n        this.normalizeDimensions();\n    }\n    normalizeDimensions() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.ranges = [];\n        this.dimensions.forEach(() => {\n            this.valueSets.push(new Map());\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach(mea => {\n            normalizedRecord[mea] = record[mea];\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n    buildIsolationTree(normalizedSampleData, depth) {\n        if (depth >= this.limitHeight || normalizedSampleData.length <= 1) {\n            return null;\n        }\n        else {\n            let rand = Math.random();\n            let randField = this.measures[0] || this.dimensions[0];\n            let dimLength = this.dimensions.length;\n            let meaLength = this.measures.length;\n            let randValue = 0;\n            if (rand >= dimLength / (dimLength + meaLength)) {\n                let index = Math.floor(Math.random() * meaLength) % meaLength;\n                randField = this.measures[index];\n                randValue = this.ranges[index][0] + (this.ranges[index][1] - this.ranges[index][0]) * Math.random();\n            }\n            else {\n                let index = Math.floor(Math.random() * dimLength) % dimLength;\n                randField = this.dimensions[index];\n                randValue = Math.floor(this.valueSets[index].size * Math.random()) % this.valueSets[index].size;\n            }\n            // random in range not in distribution.\n            // let randValue = normalizedSampleData[Math.floor(Math.random() * normalizedSampleData.length) % normalizedSampleData.length][randField];\n            let leftSubData = [];\n            let rightSubData = [];\n            for (let record of normalizedSampleData) {\n                if (record[randField] < randValue) {\n                    leftSubData.push(record);\n                }\n                else {\n                    rightSubData.push(record);\n                }\n            }\n            let node = {\n                field: randField,\n                value: randValue,\n                size: normalizedSampleData.length\n            };\n            node.left = this.buildIsolationTree(leftSubData, depth + 1);\n            node.right = this.buildIsolationTree(rightSubData, depth + 1);\n            return node;\n        }\n    }\n    /**\n     * average unsuccessful searches in BST (Preiss, 1999)\n     * @param Psi\n     */\n    AFS(Psi) {\n        if (Psi > 2)\n            return 2 * (Math.log(Psi - 1) + EULER) - 2 * (Psi - 1) / Psi;\n        if (Psi === 2)\n            return 1;\n        return 0;\n    }\n    getPathLength(record, iTree, pathLength, nodeSize) {\n        if (iTree === null) {\n            return pathLength + this.AFS(nodeSize);\n        }\n        let value = record[iTree.field];\n        if (value < iTree.value) {\n            return this.getPathLength(record, iTree.left, pathLength + 1, iTree.size);\n        }\n        else {\n            return this.getPathLength(record, iTree.right, pathLength + 1, iTree.size);\n        }\n    }\n    buildIsolationForest() {\n        this.iForest = [];\n        for (let i = 0; i < this.treeNumber; i++) {\n            let samples = uniformSampling(this.normalizedDataSource, this.sampleSize);\n            let iTree = this.buildIsolationTree(samples, 0);\n            this.iForest.push(iTree);\n        }\n        return this.iForest;\n    }\n    // public evaluate (record: Record): number {\n    // }\n    estimateOutierScore() {\n        this.recordScoreList = [];\n        this.normalizedDataSource.forEach(record => {\n            let recordScore = 0;\n            let avgPathLength = 0;\n            this.iForest.forEach(iTree => {\n                avgPathLength += this.getPathLength(record, iTree, 0, this.sampleSize);\n            });\n            avgPathLength /= this.iForest.length;\n            recordScore = Math.pow(2, -(avgPathLength / this.AFS(this.sampleSize)));\n            this.recordScoreList.push(recordScore);\n        });\n        return this.recordScoreList;\n    }\n}\n","export const TopKSingleField = 6;\nexport const TopKView = 15;\nexport const Depth = 4;\nexport const VisualLimit = 8;\nexport const TopKPercentField = 0.8;\nexport const CrammersVThreshold = 0.3;\nexport const PearsonCorrelation = {\n    strong: 0.5,\n    weak: 0.3\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export const geomTypes = {\n    interval: [0, 10],\n    line: [11, Infinity],\n    area: [11, Infinity],\n    point: [0, 1000],\n    path: [0, 100],\n    density: [1001, Infinity],\n};\nfunction getVisualElements() {\n    return {\n        position: 2,\n        color: 1,\n        size: 1,\n        shape: 1,\n        opacity: 1,\n        facets: 2,\n        page: 1,\n        filter: 1,\n        highFacets: 1000\n    };\n}\nfunction findBestField(type, fieldRankList) {\n    for (let i = fieldRankList.length - 1; i >= 0; i--) {\n        if (fieldRankList[i].semanticType === type && !fieldRankList[i].choosen) {\n            return fieldRankList[i];\n        }\n    }\n    return false;\n}\nexport function encoding(fields) {\n    let spec = {};\n    let visualElements = getVisualElements();\n    let fieldRankList = fields.map((field) => {\n        return {\n            ...field,\n            choosen: false,\n        };\n    });\n    const priority = [\n        [\"quantitative\", [\"position\", \"size\", \"color\", \"highFacets\", \"opacity\", \"filter\"]],\n        [\"temporal\", [\"position\", \"size\", \"opacity\", \"filter\"]],\n        [\"ordinal\", [\"position\", \"color\", \"opacity\", \"facets\", \"size\", \"filter\", \"highFacets\"]],\n        [\"nominal\", [\"position\", \"color\", \"facets\", \"shape\", \"filter\", \"hightFacets\"]],\n    ];\n    let fieldLeft = fieldRankList.length;\n    for (let typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n        let type = priority[typeIndex][0];\n        let channelList = priority[typeIndex][1];\n        for (let i = 0; i < channelList.length && fieldLeft > 0; i++) {\n            let channel = channelList[i];\n            let field;\n            while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n                if (typeof spec[channel] === \"undefined\") {\n                    spec[channel] = [];\n                }\n                spec[channel].push(field.key);\n                visualElements[channel]--;\n                fieldLeft--;\n                field.choosen = true;\n            }\n        }\n    }\n    return spec;\n}\nexport function specification(fields, dataView) {\n    let rankedFields = fields.sort((a, b) => a.impurity - b.impurity);\n    let spec = encoding(rankedFields);\n    const dimensions = new Set(fields.filter(f => f.analyticType === 'dimension').map(f => f.key));\n    const measures = new Set(fields.filter(f => f.analyticType === 'measure').map(f => f.key));\n    // todo: design a better rule for choosing geom type.\n    if (spec.position && spec.position.length === 2) {\n        if ((dimensions.has(spec.position[0]) && measures.has(spec.position[1])) ||\n            (dimensions.has(spec.position[1]) && measures.has(spec.position[0]))) {\n            const dimIndex = dimensions.has(spec.position[0]) ? 0 : 1;\n            const dim = spec.position[dimIndex];\n            const mea = spec.position[(dimIndex + 1) % 2];\n            spec.position = [dim, mea];\n            const originDimField = fields.find((f) => f.key === dim);\n            const dimCardinality = originDimField ? originDimField.features.unique : 0;\n            spec.geomType = [\"interval\", \"line\", \"area\"].filter((geom) => {\n                return dimCardinality >= geomTypes[geom][0] && dimCardinality <= geomTypes[geom][1];\n            });\n            if (originDimField.semanticType === 'nominal') {\n                spec.geomType = [\"interval\"];\n            }\n        }\n        else {\n            // ['point', 'path', 'heatmap']\n            spec.geomType = [\"point\", \"density\"].filter((geom) => {\n                return dataView.length >= geomTypes[geom][0] && dataView.length <= geomTypes[geom][1];\n            });\n        }\n    }\n    return { schema: spec, dataView };\n}\n","import { memberCount } from './utils/index';\nfunction isUniformDistribution(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    return members.every(member => member[1] === 1);\n}\nexport { isUniformDistribution };\n","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./core/index\");\n// import { JsonRecord } from './types';\nvar transform_1 = require(\"./utils/transform\");\nvar aggregation_1 = require(\"./utils/aggregation\");\nvar operatorMap = {\n    'sum': aggregation_1.sum_unsafe,\n    'mean': aggregation_1.mean,\n    'count': aggregation_1.count,\n};\nfunction copyDataSource(data) {\n    return data.map(function (row) {\n        return __assign({}, row);\n    });\n}\nfunction aggregate(props) {\n    var dimensions = props.dimensions, measures = props.measures, asFields = props.asFields, operator = props.operator, dataSource = props.dataSource;\n    var data = [];\n    var cube = createCube({\n        type: 'moment',\n        aggFunc: operatorMap[operator] || aggregation_1.count,\n        dimensions: dimensions,\n        measures: measures,\n        factTable: dataSource\n    });\n    var table = transform_1.tree2Table({ dimensions: dimensions, measures: measures, cube: cube });\n    table.forEach(function (row) {\n        asFields.forEach(function (as, i) {\n            row[as] = row[measures[i]];\n        });\n    });\n    return table;\n}\nfunction createCube(_a) {\n    var type = _a.type, _b = _a.aggFunc, aggFunc = _b === void 0 ? aggregation_1.count : _b, _c = _a.factTable, factTable = _c === void 0 ? [] : _c, _d = _a.dimensions, dimensions = _d === void 0 ? [] : _d, _e = _a.measures, measures = _e === void 0 ? [] : _e;\n    switch (type) {\n        case \"period\":\n            return new index_1.periodCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        case \"moment\":\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n        default:\n            return new index_1.momentCube({\n                aggFunc: aggFunc,\n                factTable: factTable,\n                dimensions: dimensions,\n                measures: measures\n            });\n    }\n}\nexports.createCube = createCube;\nexports.default = aggregate;\n__export(require(\"./utils/aggregation\"));\n","import { isFieldTime, isFieldContinous, memberCount, isFieldCategory, deepcopy, groupContinousField, groupCategoryField } from '../utils/index';\nimport { normalize, entropy } from '../statistics/index';\nimport { isUniformDistribution } from '../distribution';\nimport { BIN_NUM_FOR_ANALYTIC } from '../constant';\nconst MIN_QUAN_MEMBER_SIZE = BIN_NUM_FOR_ANALYTIC;\n/**\n *\n * @param dataSource\n * @param field\n * todo: should accept BIField type and calculate the semantic type basic on it.\n */\nexport function getFieldType(dataSource, field) {\n    if (isFieldTime(dataSource, field)) {\n        return 'temporal';\n    }\n    else if (isFieldContinous(dataSource, field)) {\n        // Todo:\n        // here is only a tmp solution. we still hope to divided ordinal type and quantitative type.\n        // if (memberCount(dataSource, field).length > MIN_QUAN_MEMBER_SIZE) {\n        //   return 'quantitative'\n        // } else {\n        //   return 'ordinal';\n        // }\n        // TODO: 讨论这里的严格逻辑\n        // [2022.2.8] 由ordinal字段被当做quantitative字段处理导致的效果变差的问题。\n        // 参考 https://ewgw6z7tk0.feishu.cn/docs/doccnfuCntXAx5K0SA9jOxgKxYe\n        if (memberCount(dataSource, field).length > MIN_QUAN_MEMBER_SIZE) {\n            return 'quantitative';\n        }\n        else {\n            return 'ordinal';\n        }\n        return 'quantitative';\n    }\n    else if (isFieldCategory(dataSource, field)) {\n        // isFieldCategory is a safety checking here, for sometimes dirty data value can be object.\n        return 'nominal';\n    }\n    else {\n        // todo do something(like cleaning)\n        return 'nominal';\n    }\n}\nexport function getAllFieldTypes(dataSource, fields) {\n    let fieldsWithType = [];\n    for (let field of fields) {\n        fieldsWithType.push({\n            name: field,\n            type: getFieldType(dataSource, field)\n        });\n    }\n    return fieldsWithType;\n}\nexport function getFieldDistribution(dataSource, field) {\n    let members = memberCount(dataSource, field);\n    // members.sort((a, b) => a[1] - b[1]);\n    return members.map(m => {\n        return { memberName: m[0], count: m[1] };\n    });\n}\nexport function getAllFieldsDistribution(dataSource, fields) {\n    let fieldsDistribution = [];\n    for (let field of fields) {\n        fieldsDistribution.push({\n            fieldName: field,\n            distribution: getFieldDistribution(dataSource, field)\n        });\n    }\n    return fieldsDistribution;\n}\nexport function getFieldEntropy(dataSource, field) {\n    const members = memberCount(dataSource, field);\n    const frequencyList = members.map(m => m[1]);\n    const probabilityList = normalize(frequencyList);\n    const fieldEntropy = entropy(probabilityList);\n    const maxEntropy = Math.log2(members.length);\n    return {\n        fieldName: field,\n        entropy: fieldEntropy,\n        maxEntropy\n    };\n}\nexport function getFloatFieldEntropy(dataSource, field) {\n    let _max = -Infinity;\n    let _min = Infinity;\n    for (let i = 0; i < dataSource.length; i++) {\n        _max = Math.max(_max, dataSource[i][field]);\n        _min = Math.min(_min, dataSource[i][field]);\n    }\n    const rangeStep = (_max - _min) / BIN_NUM_FOR_ANALYTIC;\n    const rangeCounts = new Array(BIN_NUM_FOR_ANALYTIC + 1).fill(0);\n    for (let i = 0; i < dataSource.length; i++) {\n        const value = dataSource[i][field];\n        const valueIndex = Math.floor((value - _min) / rangeStep);\n        rangeCounts[valueIndex]++;\n    }\n    rangeCounts[BIN_NUM_FOR_ANALYTIC - 1] += rangeCounts[BIN_NUM_FOR_ANALYTIC];\n    const pl = normalize(rangeCounts.slice(0, BIN_NUM_FOR_ANALYTIC));\n    const fieldEntropy = entropy(pl);\n    const maxEntropy = Math.log2(BIN_NUM_FOR_ANALYTIC);\n    return {\n        fieldName: field,\n        entropy: fieldEntropy,\n        maxEntropy\n    };\n}\nexport function getAllFieldsEntropy(dataSource, fields) {\n    let fieldEntropyList = [];\n    for (let field of fields) {\n        fieldEntropyList.push(getFieldEntropy(dataSource, field));\n    }\n    return fieldEntropyList;\n}\nexport function groupFields(dataSource, fields) {\n    let groupedData = deepcopy(dataSource);\n    let newFields = [];\n    for (let field of fields) {\n        let newFieldName = `${field.name}(group)`;\n        if (field.type === 'quantitative' && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE * 2) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupContinousField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: 'ordinal'\n                });\n            }\n        }\n        else if ((field.type === 'ordinal' || field.type === 'nominal') && memberCount(dataSource, field.name).length > MIN_QUAN_MEMBER_SIZE) {\n            if (!isUniformDistribution(dataSource, field.name)) {\n                groupedData = groupCategoryField({\n                    dataSource: groupedData,\n                    field: field.name,\n                    newField: newFieldName,\n                    groupNumber: 8\n                });\n                newFields.push({\n                    name: newFieldName,\n                    type: field.type\n                });\n            }\n        }\n    }\n    return {\n        groupedData,\n        fields,\n        newFields\n    };\n}\n","import { DEFAULT_BIN_NUM } from '../constant';\n/**\n * 只针对 stdAggregateFromCuboid 设计的写法，其他地方不要使用，不具备通用型。\n * @param rows\n * @param colKey\n * @param opKey\n * @returns\n */\nexport function sumByCol(rows, colKey, opKey) {\n    let _sum = 0;\n    for (let i = 0; i < rows.length; i++) {\n        _sum += rows[i][colKey][opKey];\n    }\n    return _sum;\n}\n// for cases when all values are same\nfunction fixRange(originalRange) {\n    if (originalRange[0] === originalRange[1]) {\n        return [originalRange[0], originalRange[1] + 0.1];\n    }\n    return originalRange;\n}\nexport const dist = function (values, originalRange) {\n    const range = fixRange(originalRange);\n    const step = (range[1] - range[0]) / DEFAULT_BIN_NUM;\n    const bins = new Array(DEFAULT_BIN_NUM + 1).fill(0);\n    for (let value of values) {\n        const vIndex = Math.floor((value - range[0]) / step);\n        bins[vIndex]++;\n    }\n    bins[DEFAULT_BIN_NUM - 1] += bins[DEFAULT_BIN_NUM];\n    return bins.slice(0, -1);\n};\nexport function distMergeBy(rows, colKey, opKey) {\n    const bins = new Array(DEFAULT_BIN_NUM).fill(0);\n    for (let i = 0; i < rows.length; i++) {\n        const recordBins = rows[i][colKey][opKey];\n        for (let j = 0; j < bins.length; j++) {\n            bins[j] += recordBins[j];\n        }\n    }\n    return bins;\n}\n","/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x) {\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    let sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    let correction = 0;\n\n    let transition;\n\n    for (let i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += sum - transition + x[i];\n        } else {\n            correction += x[i] - transition + sum;\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nexport default sum;\n","import sum from \"./sum\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x) {\n    if (x.length === 0) {\n        throw new Error(\"mean requires at least one data point\");\n    }\n\n    return sum(x) / x.length;\n}\n\nexport default mean;\n","import mean from \"./mean\";\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n *\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * sumNthPowerDeviations(input, 2) / input.length;\n */\nfunction sumNthPowerDeviations(x, n) {\n    const meanValue = mean(x);\n    let sum = 0;\n    let tempValue;\n    let i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nexport default sumNthPowerDeviations;\n","import sumNthPowerDeviations from \"./sum_nth_power_deviations\";\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x) {\n    if (x.length === 0) {\n        throw new Error(\"variance requires at least one data point\");\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nexport default variance;\n","import variance from \"./variance\";\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x) {\n    if (x.length === 1) {\n        return 0;\n    }\n    const v = variance(x);\n    return Math.sqrt(v);\n}\n\nexport default standardDeviation;\n","/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)` because the input is sorted.\n *\n * @param {Array<number>} sorted a sample of one or more data points\n * @returns {number} mode\n * @throws {Error} if sorted is empty\n * @example\n * modeSorted([0, 0, 1]); // => 0\n */\nfunction modeSorted(sorted) {\n    // Handle edge cases:\n    // The mode of an empty list is undefined\n    if (sorted.length === 0) {\n        throw new Error(\"mode requires at least one data point\");\n    } else if (sorted.length === 1) {\n        return sorted[0];\n    }\n\n    // This assumes it is dealing with an array of size > 1, since size\n    // 0 and 1 are handled immediately. Hence it starts at index 1 in the\n    // array.\n    let last = sorted[0],\n        // store the mode as we find new modes\n        value = NaN,\n        // store how many times we've seen the mode\n        maxSeen = 0,\n        // how many times the current candidate for the mode\n        // has been seen\n        seenThis = 1;\n\n    // end at sorted.length + 1 to fix the case in which the mode is\n    // the highest number that occurs in the sequence. the last iteration\n    // compares sorted[i], which is undefined, to the highest number\n    // in the series\n    for (let i = 1; i < sorted.length + 1; i++) {\n        // we're seeing a new number pass by\n        if (sorted[i] !== last) {\n            // the last number is the new mode since we saw it more\n            // often than the old one\n            if (seenThis > maxSeen) {\n                maxSeen = seenThis;\n                value = last;\n            }\n            seenThis = 1;\n            last = sorted[i];\n            // if this isn't a new number, it's one more occurrence of\n            // the potential mode\n        } else {\n            seenThis++;\n        }\n    }\n    return value;\n}\n\nexport default modeSorted;\n","/**\n * Sort an array of numbers by their numeric value, ensuring that the\n * array is not changed in place.\n *\n * This is necessary because the default behavior of .sort\n * in JavaScript is to sort arrays as string values\n *\n *     [1, 10, 12, 102, 20].sort()\n *     // output\n *     [1, 10, 102, 12, 20]\n *\n * @param {Array<number>} x input array\n * @return {Array<number>} sorted array\n * @private\n * @example\n * numericSort([3, 2, 1]) // => [1, 2, 3]\n */\nfunction numericSort(x) {\n    return (\n        x\n            // ensure the array is not changed in-place\n            .slice()\n            // comparator function that treats input as numeric\n            .sort(function (a, b) {\n                return a - b;\n            })\n    );\n}\n\nexport default numericSort;\n","/**\n * The min is the lowest number in the array.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} minimum value\n * @example\n * min([1, 5, -10, 100, 2]); // => -10\n */\nfunction min(x) {\n    if (x.length === 0) {\n        throw new Error(\"min requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] < value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default min;\n","/**\n * This computes the maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * max([1, 2, 3, 4]);\n * // => 4\n */\nfunction max(x) {\n    if (x.length === 0) {\n        throw new Error(\"max requires at least one data point\");\n    }\n\n    let value = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > value) {\n            value = x[i];\n        }\n    }\n    return value;\n}\n\nexport default max;\n","/**\n * The simple [sum](https://en.wikipedia.org/wiki/Summation) of an array\n * is the result of adding all numbers together, starting from zero.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sumSimple([1, 2, 3]); // => 6\n */\nfunction sumSimple(x) {\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        value += x[i];\n    }\n    return value;\n}\n\nexport default sumSimple;\n","/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x, p) {\n    const idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error(\"quantile requires at least one data point.\");\n    } else if (p < 0 || p > 1) {\n        throw new Error(\"quantiles must be between 0 and 1\");\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nexport default quantileSorted;\n","/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} [left] left index\n * @param {number} [right] right index\n * @returns {void} mutates input array\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr, k, left, right) {\n    left = left || 0;\n    right = right || arr.length - 1;\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp((2 * z) / 3);\n            let sd = 0.5 * Math.sqrt((z * s * (n - s)) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            const newLeft = Math.max(left, Math.floor(k - (m * s) / n + sd));\n            const newRight = Math.min(\n                right,\n                Math.floor(k + ((n - m) * s) / n + sd)\n            );\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        const t = arr[k];\n        let i = left;\n        let j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nexport default quickselect;\n","import quantileSorted from \"./quantile_sorted\";\nimport quickselect from \"./quickselect\";\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {Array<number> | number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x, p) {\n    const copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        const results = [];\n        // For each requested quantile\n        for (let i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        const idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    const indices = [0];\n    for (let i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    const stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        const r = Math.ceil(stack.pop());\n        const l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        const m = Math.floor((l + r) / 2);\n        quantileSelect(\n            arr,\n            indices[m],\n            Math.floor(indices[l]),\n            Math.ceil(indices[r])\n        );\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len, p) {\n    const idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nexport default quantile;\n","/* eslint no-bitwise: 0 */\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. With a sorted array, leveraging binary search, we can find\n * this information in logarithmic time.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRankSorted([1, 2, 3, 4], 3); // => 0.75\n * quantileRankSorted([1, 2, 3, 3, 4], 3); // => 0.7\n * quantileRankSorted([1, 2, 3, 4], 6); // => 1\n * quantileRankSorted([1, 2, 3, 3, 5], 4); // => 0.8\n */\nfunction quantileRankSorted(x, value) {\n    // Value is lesser than any value in the array\n    if (value < x[0]) {\n        return 0;\n    }\n\n    // Value is greater than any value in the array\n    if (value > x[x.length - 1]) {\n        return 1;\n    }\n\n    let l = lowerBound(x, value);\n\n    // Value is not in the array\n    if (x[l] !== value) {\n        return l / x.length;\n    }\n\n    l++;\n\n    const u = upperBound(x, value);\n\n    // The value exists only once in the array\n    if (u === l) {\n        return l / x.length;\n    }\n\n    // Here, we are basically computing the mean of the range of indices\n    // containing our searched value. But, instead, of initializing an\n    // array and looping over it, there is a dedicated math formula that\n    // we apply below to get the result.\n    const r = u - l + 1;\n    const sum = (r * (u + l)) / 2;\n    const mean = sum / r;\n\n    return mean / x.length;\n}\n\nfunction lowerBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value <= x[mid]) {\n            hi = mid;\n        } else {\n            lo = -~mid;\n        }\n    }\n\n    return lo;\n}\n\nfunction upperBound(x, value) {\n    let mid = 0;\n    let lo = 0;\n    let hi = x.length;\n\n    while (lo < hi) {\n        mid = (lo + hi) >>> 1;\n\n        if (value >= x[mid]) {\n            lo = -~mid;\n        } else {\n            hi = mid;\n        }\n    }\n\n    return lo;\n}\n\nexport default quantileRankSorted;\n","import quantile from \"./quantile\";\n\n/**\n * The [Interquartile range](http://en.wikipedia.org/wiki/Interquartile_range) is\n * a measure of statistical dispersion, or how scattered, spread, or\n * concentrated a distribution is. It's computed as the difference between\n * the third quartile and first quartile.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @returns {number} interquartile range: the span between lower and upper quartile,\n * 0.25 and 0.75\n * @example\n * interquartileRange([0, 1, 2, 3]); // => 2\n */\nfunction interquartileRange(x) {\n    // Interquartile range is the span between the upper quartile,\n    // at `0.75`, and lower quartile, `0.25`\n    const q1 = quantile(x, 0.75);\n    const q2 = quantile(x, 0.25);\n\n    if (typeof q1 === \"number\" && typeof q2 === \"number\") {\n        return q1 - q2;\n    }\n}\n\nexport default interquartileRange;\n","import quantile from \"./quantile\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} x input\n * @returns {number} median value\n * @example\n * median([10, 2, 5, 100, 2, 1]); // => 3.5\n */\nfunction median(x) {\n    return +quantile(x, 0.5);\n}\n\nexport default median;\n","import median from \"./median\";\n\n/**\n * The [Median Absolute Deviation](http://en.wikipedia.org/wiki/Median_absolute_deviation) is\n * a robust measure of statistical\n * dispersion. It is more resilient to outliers than the standard deviation.\n *\n * @param {Array<number>} x input array\n * @returns {number} median absolute deviation\n * @example\n * medianAbsoluteDeviation([1, 1, 2, 2, 4, 6, 9]); // => 1\n */\nfunction medianAbsoluteDeviation(x) {\n    const medianValue = median(x);\n    const medianAbsoluteDeviations = [];\n\n    // Make a list of absolute deviations from the median\n    for (let i = 0; i < x.length; i++) {\n        medianAbsoluteDeviations.push(Math.abs(x[i] - medianValue));\n    }\n\n    // Find the median value of that list\n    return median(medianAbsoluteDeviations);\n}\n\nexport default medianAbsoluteDeviation;\n","/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * in-place - which means that it **will change the order of the original\n * array by reference**.\n *\n * This is an algorithm that generates a random [permutation](https://en.wikipedia.org/wiki/Permutation)\n * of a set.\n *\n * @param {Array} x sample of one or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @returns {Array} x\n * @example\n * var x = [1, 2, 3, 4];\n * shuffleInPlace(x);\n * // x is shuffled to a value like [2, 1, 4, 3]\n */\nfunction shuffleInPlace(x, randomSource) {\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    // store the current length of the x to determine\n    // when no elements remain to shuffle.\n    let length = x.length;\n\n    // temporary is used to hold an item when it is being\n    // swapped between indices.\n    let temporary;\n\n    // The index to swap at each stage.\n    let index;\n\n    // While there are still items to shuffle\n    while (length > 0) {\n        // choose a random index within the subset of the array\n        // that is not yet shuffled\n        index = Math.floor(randomSource() * length--);\n\n        // store the value that we'll move temporarily\n        temporary = x[length];\n\n        // swap the value at `x[length]` with `x[index]`\n        x[length] = x[index];\n        x[index] = temporary;\n    }\n\n    return x;\n}\n\nexport default shuffleInPlace;\n","import shuffleInPlace from \"./shuffle_in_place\";\n\n/**\n * A [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle)\n * is a fast way to create a random permutation of a finite set. This is\n * a function around `shuffle_in_place` that adds the guarantee that\n * it will not modify its input.\n *\n * @param {Array} x sample of 0 or more numbers\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} shuffled version of input\n * @example\n * var shuffled = shuffle([1, 2, 3, 4]);\n * shuffled; // = [2, 3, 1, 4] or any other random permutation\n */\nfunction shuffle(x, randomSource) {\n    // slice the original array so that it is not modified\n    const sample = x.slice();\n\n    // and then shuffle that shallow-copied array, in place\n    return shuffleInPlace(sample, randomSource);\n}\n\nexport default shuffle;\n","import shuffle from \"./shuffle\";\n\n/**\n * Create a [simple random sample](http://en.wikipedia.org/wiki/Simple_random_sample)\n * from a given array of `n` elements.\n *\n * The sampled values will be in any order, not necessarily the order\n * they appear in the input.\n *\n * @param {Array<any>} x input array. can contain any type\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} subset of n elements in original array\n *\n * @example\n * var values = [1, 2, 4, 5, 6, 7, 8, 9];\n * sample(values, 3); // returns 3 random values, like [2, 5, 8];\n */\nfunction sample(x, n, randomSource) {\n    // shuffle the original array using a fisher-yates shuffle\n    const shuffled = shuffle(x, randomSource);\n\n    // and then return a subset of it - the first `n` elements.\n    return shuffled.slice(0, n);\n}\n\nexport default sample;\n","/**\n * Create a new column x row matrix.\n *\n * @private\n * @param {number} columns\n * @param {number} rows\n * @return {Array<Array<number>>} matrix\n * @example\n * makeMatrix(10, 10);\n */\nfunction makeMatrix(columns, rows) {\n    const matrix = [];\n    for (let i = 0; i < columns; i++) {\n        const column = [];\n        for (let j = 0; j < rows; j++) {\n            column.push(0);\n        }\n        matrix.push(column);\n    }\n    return matrix;\n}\n\nexport default makeMatrix;\n","/**\n * For a sorted input, counting the number of unique values\n * is possible in constant time and constant memory. This is\n * a simple implementation of the algorithm.\n *\n * Values are compared with `===`, so objects and non-primitive objects\n * are not handled in any special way.\n *\n * @param {Array<*>} x an array of any kind of value\n * @returns {number} count of unique values\n * @example\n * uniqueCountSorted([1, 2, 3]); // => 3\n * uniqueCountSorted([1, 1, 1]); // => 1\n */\nfunction uniqueCountSorted(x) {\n    let uniqueValueCount = 0,\n        lastSeenValue;\n    for (let i = 0; i < x.length; i++) {\n        if (i === 0 || x[i] !== lastSeenValue) {\n            lastSeenValue = x[i];\n            uniqueValueCount++;\n        }\n    }\n    return uniqueValueCount;\n}\n\nexport default uniqueCountSorted;\n","import makeMatrix from \"./make_matrix\";\nimport numericSort from \"./numeric_sort\";\nimport uniqueCountSorted from \"./unique_count_sorted\";\n\n/**\n * Generates incrementally computed values based on the sums and sums of\n * squares for the data array\n *\n * @private\n * @param {number} j\n * @param {number} i\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n * @return {number}\n * @example\n * ssq(0, 1, [-1, 0, 2], [1, 1, 5]);\n */\nfunction ssq(j, i, sums, sumsOfSquares) {\n    let sji; // s(j, i)\n    if (j > 0) {\n        const muji = (sums[i] - sums[j - 1]) / (i - j + 1); // mu(j, i)\n        sji =\n            sumsOfSquares[i] - sumsOfSquares[j - 1] - (i - j + 1) * muji * muji;\n    } else {\n        sji = sumsOfSquares[i] - (sums[i] * sums[i]) / (i + 1);\n    }\n    if (sji < 0) {\n        return 0;\n    }\n    return sji;\n}\n\n/**\n * Function that recursively divides and conquers computations\n * for cluster j\n *\n * @private\n * @param {number} iMin Minimum index in cluster to be computed\n * @param {number} iMax Maximum index in cluster to be computed\n * @param {number} cluster Index of the cluster currently being computed\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n * @param {Array<number>} sums\n * @param {Array<number>} sumsOfSquares\n */\nfunction fillMatrixColumn(\n    iMin,\n    iMax,\n    cluster,\n    matrix,\n    backtrackMatrix,\n    sums,\n    sumsOfSquares\n) {\n    if (iMin > iMax) {\n        return;\n    }\n\n    // Start at midpoint between iMin and iMax\n    const i = Math.floor((iMin + iMax) / 2);\n\n    matrix[cluster][i] = matrix[cluster - 1][i - 1];\n    backtrackMatrix[cluster][i] = i;\n\n    let jlow = cluster; // the lower end for j\n\n    if (iMin > cluster) {\n        jlow = Math.max(jlow, backtrackMatrix[cluster][iMin - 1] || 0);\n    }\n    jlow = Math.max(jlow, backtrackMatrix[cluster - 1][i] || 0);\n\n    let jhigh = i - 1; // the upper end for j\n    if (iMax < matrix[0].length - 1) {\n        jhigh = Math.min(jhigh, backtrackMatrix[cluster][iMax + 1] || 0);\n    }\n\n    let sji;\n    let sjlowi;\n    let ssqjlow;\n    let ssqj;\n    for (let j = jhigh; j >= jlow; --j) {\n        sji = ssq(j, i, sums, sumsOfSquares);\n\n        if (sji + matrix[cluster - 1][jlow - 1] >= matrix[cluster][i]) {\n            break;\n        }\n\n        // Examine the lower bound of the cluster border\n        sjlowi = ssq(jlow, i, sums, sumsOfSquares);\n\n        ssqjlow = sjlowi + matrix[cluster - 1][jlow - 1];\n\n        if (ssqjlow < matrix[cluster][i]) {\n            // Shrink the lower bound\n            matrix[cluster][i] = ssqjlow;\n            backtrackMatrix[cluster][i] = jlow;\n        }\n        jlow++;\n\n        ssqj = sji + matrix[cluster - 1][j - 1];\n        if (ssqj < matrix[cluster][i]) {\n            matrix[cluster][i] = ssqj;\n            backtrackMatrix[cluster][i] = j;\n        }\n    }\n\n    fillMatrixColumn(\n        iMin,\n        i - 1,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n    fillMatrixColumn(\n        i + 1,\n        iMax,\n        cluster,\n        matrix,\n        backtrackMatrix,\n        sums,\n        sumsOfSquares\n    );\n}\n\n/**\n * Initializes the main matrices used in Ckmeans and kicks\n * off the divide and conquer cluster computation strategy\n *\n * @private\n * @param {Array<number>} data sorted array of values\n * @param {Array<Array<number>>} matrix\n * @param {Array<Array<number>>} backtrackMatrix\n */\nfunction fillMatrices(data, matrix, backtrackMatrix) {\n    const nValues = matrix[0].length;\n\n    // Shift values by the median to improve numeric stability\n    const shift = data[Math.floor(nValues / 2)];\n\n    // Cumulative sum and cumulative sum of squares for all values in data array\n    const sums = [];\n    const sumsOfSquares = [];\n\n    // Initialize first column in matrix & backtrackMatrix\n    for (let i = 0, shiftedValue; i < nValues; ++i) {\n        shiftedValue = data[i] - shift;\n        if (i === 0) {\n            sums.push(shiftedValue);\n            sumsOfSquares.push(shiftedValue * shiftedValue);\n        } else {\n            sums.push(sums[i - 1] + shiftedValue);\n            sumsOfSquares.push(\n                sumsOfSquares[i - 1] + shiftedValue * shiftedValue\n            );\n        }\n\n        // Initialize for cluster = 0\n        matrix[0][i] = ssq(0, i, sums, sumsOfSquares);\n        backtrackMatrix[0][i] = 0;\n    }\n\n    // Initialize the rest of the columns\n    let iMin;\n    for (let cluster = 1; cluster < matrix.length; ++cluster) {\n        if (cluster < matrix.length - 1) {\n            iMin = cluster;\n        } else {\n            // No need to compute matrix[K-1][0] ... matrix[K-1][N-2]\n            iMin = nValues - 1;\n        }\n\n        fillMatrixColumn(\n            iMin,\n            nValues - 1,\n            cluster,\n            matrix,\n            backtrackMatrix,\n            sums,\n            sumsOfSquares\n        );\n    }\n}\n\n/**\n * Ckmeans clustering is an improvement on heuristic-based clustering\n * approaches like Jenks. The algorithm was developed in\n * [Haizhou Wang and Mingzhou Song](http://journal.r-project.org/archive/2011-2/RJournal_2011-2_Wang+Song.pdf)\n * as a [dynamic programming](https://en.wikipedia.org/wiki/Dynamic_programming) approach\n * to the problem of clustering numeric data into groups with the least\n * within-group sum-of-squared-deviations.\n *\n * Minimizing the difference within groups - what Wang & Song refer to as\n * `withinss`, or within sum-of-squares, means that groups are optimally\n * homogenous within and the data is split into representative groups.\n * This is very useful for visualization, where you may want to represent\n * a continuous variable in discrete color or style groups. This function\n * can provide groups that emphasize differences between data.\n *\n * Being a dynamic approach, this algorithm is based on two matrices that\n * store incrementally-computed values for squared deviations and backtracking\n * indexes.\n *\n * This implementation is based on Ckmeans 3.4.6, which introduced a new divide\n * and conquer approach that improved runtime from O(kn^2) to O(kn log(n)).\n *\n * Unlike the [original implementation](https://cran.r-project.org/web/packages/Ckmeans.1d.dp/index.html),\n * this implementation does not include any code to automatically determine\n * the optimal number of clusters: this information needs to be explicitly\n * provided.\n *\n * ### References\n * _Ckmeans.1d.dp: Optimal k-means Clustering in One Dimension by Dynamic\n * Programming_ Haizhou Wang and Mingzhou Song ISSN 2073-4859\n *\n * from The R Journal Vol. 3/2, December 2011\n * @param {Array<number>} x input data, as an array of number values\n * @param {number} nClusters number of desired classes. This cannot be\n * greater than the number of values in the data array.\n * @returns {Array<Array<number>>} clustered input\n * @throws {Error} if the number of requested clusters is higher than the size of the data\n * @example\n * ckmeans([-1, 2, -1, 2, 4, 5, 6, -1, 2, -1], 3);\n * // The input, clustered into groups of similar numbers.\n * //= [[-1, -1, -1, -1], [2, 2, 2], [4, 5, 6]]);\n */\nfunction ckmeans(x, nClusters) {\n    if (nClusters > x.length) {\n        throw new Error(\n            \"cannot generate more classes than there are data values\"\n        );\n    }\n\n    const sorted = numericSort(x);\n    // we'll use this as the maximum number of clusters\n    const uniqueCount = uniqueCountSorted(sorted);\n\n    // if all of the input values are identical, there's one cluster\n    // with all of the input in it.\n    if (uniqueCount === 1) {\n        return [sorted];\n    }\n\n    // named 'S' originally\n    const matrix = makeMatrix(nClusters, sorted.length);\n    // named 'J' originally\n    const backtrackMatrix = makeMatrix(nClusters, sorted.length);\n\n    // This is a dynamic programming way to solve the problem of minimizing\n    // within-cluster sum of squares. It's similar to linear regression\n    // in this way, and this calculation incrementally computes the\n    // sum of squares that are later read.\n    fillMatrices(sorted, matrix, backtrackMatrix);\n\n    // The real work of Ckmeans clustering happens in the matrix generation:\n    // the generated matrices encode all possible clustering combinations, and\n    // once they're generated we can solve for the best clustering groups\n    // very quickly.\n    const clusters = [];\n    let clusterRight = backtrackMatrix[0].length - 1;\n\n    // Backtrack the clusters from the dynamic programming matrix. This\n    // starts at the bottom-right corner of the matrix (if the top-left is 0, 0),\n    // and moves the cluster target with the loop.\n    for (let cluster = backtrackMatrix.length - 1; cluster >= 0; cluster--) {\n        const clusterLeft = backtrackMatrix[cluster][clusterRight];\n\n        // fill the cluster from the sorted input by taking a slice of the\n        // array. the backtrack matrix makes this easy - it stores the\n        // indexes where the cluster should start and end.\n        clusters[cluster] = sorted.slice(clusterLeft, clusterRight + 1);\n\n        if (cluster > 0) {\n            clusterRight = clusterLeft - 1;\n        }\n    }\n\n    return clusters;\n}\n\nexport default ckmeans;\n","import mean from \"./mean\";\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_covariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x, y) {\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error(\"sampleCovariance requires samples with equal lengths\");\n    }\n\n    if (x.length < 2) {\n        throw new Error(\n            \"sampleCovariance requires at least two data points in each sample\"\n        );\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    const xmean = mean(x);\n    const ymean = mean(y);\n    let sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (let i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nexport default sampleCovariance;\n","import sumNthPowerDeviations from \"./sum_nth_power_deviations\";\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x) {\n    if (x.length < 2) {\n        throw new Error(\"sampleVariance requires at least two data points\");\n    }\n\n    const sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nexport default sampleVariance;\n","import sampleVariance from \"./sample_variance\";\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x) {\n    const sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nexport default sampleStandardDeviation;\n","import sampleCovariance from \"./sample_covariance\";\nimport sampleStandardDeviation from \"./sample_standard_deviation\";\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x, y) {\n    const cov = sampleCovariance(x, y);\n    const xstd = sampleStandardDeviation(x);\n    const ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nexport default sampleCorrelation;\n","/**\n * When combining two lists of values for which one already knows the means,\n * one does not have to necessary recompute the mean of the combined lists in\n * linear time. They can instead use this function to compute the combined\n * mean by providing the mean & number of values of the first list and the mean\n * & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineMeans(5, 3, 4, 3); // => 4.5\n */\nfunction combineMeans(mean1, n1, mean2, n2) {\n    return (mean1 * n1 + mean2 * n2) / (n1 + n2);\n}\n\nexport default combineMeans;\n","import sumSimple from \"./sum_simple\";\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The simple mean uses the successive addition method internally\n * to calculate it's result. Errors in floating-point addition are\n * not accounted for, so if precision is required, the standard {@link mean}\n * method should be used instead.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction meanSimple(x) {\n    if (x.length === 0) {\n        throw new Error(\"meanSimple requires at least one data point\");\n    }\n\n    return sumSimple(x) / x.length;\n}\n\nexport default meanSimple;\n","/**\n * The Root Mean Square (RMS) is\n * a mean function used as a measure of the magnitude of a set\n * of numbers, regardless of their sign.\n * This is the square root of the mean of the squares of the\n * input numbers.\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x a sample of one or more data points\n * @returns {number} root mean square\n * @throws {Error} if x is empty\n * @example\n * rootMeanSquare([-1, 1, -1, 1]); // => 1\n */\nfunction rootMeanSquare(x) {\n    if (x.length === 0) {\n        throw new Error(\"rootMeanSquare requires at least one data point\");\n    }\n\n    let sumOfSquares = 0;\n    for (let i = 0; i < x.length; i++) {\n        sumOfSquares += Math.pow(x[i], 2);\n    }\n\n    return Math.sqrt(sumOfSquares / x.length);\n}\n\nexport default rootMeanSquare;\n","/**\n * [Bayesian Classifier](http://en.wikipedia.org/wiki/Naive_Bayes_classifier)\n *\n * This is a naïve bayesian classifier that takes\n * singly-nested objects.\n *\n * @class\n * @example\n * var bayes = new BayesianClassifier();\n * bayes.train({\n *   species: 'Cat'\n * }, 'animal');\n * var result = bayes.score({\n *   species: 'Cat'\n * })\n * // result\n * // {\n * //   animal: 1\n * // }\n */\nclass BayesianClassifier {\n    /*:: totalCount: number */\n    /*:: data: Object */\n    constructor() {\n        // The number of items that are currently\n        // classified in the model\n        this.totalCount = 0;\n        // Every item classified in the model\n        this.data = {};\n    }\n\n    /**\n     * Train the classifier with a new item, which has a single\n     * dimension of Javascript literal keys and values.\n     *\n     * @param {Object} item an object with singly-deep properties\n     * @param {string} category the category this item belongs to\n     * @return {undefined} adds the item to the classifier\n     */\n    train(item, category) {\n        // If the data object doesn't have any values\n        // for this category, create a new object for it.\n        if (!this.data[category]) {\n            this.data[category] = {};\n        }\n\n        // Iterate through each key in the item.\n        for (const k in item) {\n            const v = item[k];\n            // Initialize the nested object `data[category][k][item[k]]`\n            // with an object of keys that equal 0.\n            if (this.data[category][k] === undefined) {\n                this.data[category][k] = {};\n            }\n            if (this.data[category][k][v] === undefined) {\n                this.data[category][k][v] = 0;\n            }\n\n            // And increment the key for this key/value combination.\n            this.data[category][k][v]++;\n        }\n\n        // Increment the number of items classified\n        this.totalCount++;\n    }\n\n    /**\n     * Generate a score of how well this item matches all\n     * possible categories based on its attributes\n     *\n     * @param {Object} item an item in the same format as with train\n     * @returns {Object} of probabilities that this item belongs to a\n     * given category.\n     */\n    score(item) {\n        // Initialize an empty array of odds per category.\n        const odds = {};\n        let category;\n        // Iterate through each key in the item,\n        // then iterate through each category that has been used\n        // in previous calls to `.train()`\n        for (const k in item) {\n            const v = item[k];\n            for (category in this.data) {\n                // Create an empty object for storing key - value combinations\n                // for this category.\n                odds[category] = {};\n\n                // If this item doesn't even have a property, it counts for nothing,\n                // but if it does have the property that we're looking for from\n                // the item to categorize, it counts based on how popular it is\n                // versus the whole population.\n                if (this.data[category][k]) {\n                    odds[category][k + \"_\" + v] =\n                        (this.data[category][k][v] || 0) / this.totalCount;\n                } else {\n                    odds[category][k + \"_\" + v] = 0;\n                }\n            }\n        }\n\n        // Set up a new object that will contain sums of these odds by category\n        const oddsSums = {};\n\n        for (category in odds) {\n            // Tally all of the odds for each category-combination pair -\n            // the non-existence of a category does not add anything to the\n            // score.\n            oddsSums[category] = 0;\n            for (const combination in odds[category]) {\n                oddsSums[category] += odds[category][combination];\n            }\n        }\n\n        return oddsSums;\n    }\n}\n\nexport default BayesianClassifier;\n","/**\n * This is a single-layer [Perceptron Classifier](http://en.wikipedia.org/wiki/Perceptron) that takes\n * arrays of numbers and predicts whether they should be classified\n * as either 0 or 1 (negative or positive examples).\n * @class\n * @example\n * // Create the model\n * var p = new PerceptronModel();\n * // Train the model with input with a diagonal boundary.\n * for (var i = 0; i < 5; i++) {\n *     p.train([1, 1], 1);\n *     p.train([0, 1], 0);\n *     p.train([1, 0], 0);\n *     p.train([0, 0], 0);\n * }\n * p.predict([0, 0]); // 0\n * p.predict([0, 1]); // 0\n * p.predict([1, 0]); // 0\n * p.predict([1, 1]); // 1\n */\nclass PerceptronModel {\n    /*:: bias: number */\n    /*:: weights: Array<number> */\n    constructor() {\n        // The weights, or coefficients of the model;\n        // weights are only populated when training with data.\n        this.weights = [];\n        // The bias term, or intercept; it is also a weight but\n        // it's stored separately for convenience as it is always\n        // multiplied by one.\n        this.bias = 0;\n    }\n    /**\n     * **Predict**: Use an array of features with the weight array and bias\n     * to predict whether an example is labeled 0 or 1.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @returns {number} 1 if the score is over 0, otherwise 0\n     */\n    predict(features) {\n        // Only predict if previously trained\n        // on the same size feature array(s).\n        if (features.length !== this.weights.length) {\n            return null;\n        }\n\n        // Calculate the sum of features times weights,\n        // with the bias added (implicitly times one).\n        let score = 0;\n        for (let i = 0; i < this.weights.length; i++) {\n            score += this.weights[i] * features[i];\n        }\n        score += this.bias;\n\n        // Classify as 1 if the score is over 0, otherwise 0.\n        if (score > 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * **Train** the classifier with a new example, which is\n     * a numeric array of features and a 0 or 1 label.\n     *\n     * @param {Array<number>} features an array of features as numbers\n     * @param {number} label either 0 or 1\n     * @returns {PerceptronModel} this\n     */\n    train(features, label) {\n        // Require that only labels of 0 or 1 are considered.\n        if (label !== 0 && label !== 1) {\n            return null;\n        }\n        // The length of the feature array determines\n        // the length of the weight array.\n        // The perceptron will continue learning as long as\n        // it keeps seeing feature arrays of the same length.\n        // When it sees a new data shape, it initializes.\n        if (features.length !== this.weights.length) {\n            this.weights = features;\n            this.bias = 1;\n        }\n        // Make a prediction based on current weights.\n        const prediction = this.predict(features);\n        // Update the weights if the prediction is wrong.\n        if (typeof prediction === \"number\" && prediction !== label) {\n            const gradient = label - prediction;\n            for (let i = 0; i < this.weights.length; i++) {\n                this.weights[i] += gradient * features[i];\n            }\n            this.bias += gradient;\n        }\n        return this;\n    }\n}\n\nexport default PerceptronModel;\n","/**\n * We use `ε`, epsilon, as a stopping criterion when we want to iterate\n * until we're \"close enough\". Epsilon is a very small number: for\n * simple statistics, that number is **0.0001**\n *\n * This is used in calculations like the binomialDistribution, in which\n * the process of finding a value is [iterative](https://en.wikipedia.org/wiki/Iterative_method):\n * it progresses until it is close enough.\n *\n * Below is an example of using epsilon in [gradient descent](https://en.wikipedia.org/wiki/Gradient_descent),\n * where we're trying to find a local minimum of a function's derivative,\n * given by the `fDerivative` method.\n *\n * @example\n * // From calculation, we expect that the local minimum occurs at x=9/4\n * var x_old = 0;\n * // The algorithm starts at x=6\n * var x_new = 6;\n * var stepSize = 0.01;\n *\n * function fDerivative(x) {\n *   return 4 * Math.pow(x, 3) - 9 * Math.pow(x, 2);\n * }\n *\n * // The loop runs until the difference between the previous\n * // value and the current value is smaller than epsilon - a rough\n * // meaure of 'close enough'\n * while (Math.abs(x_new - x_old) > ss.epsilon) {\n *   x_old = x_new;\n *   x_new = x_old - stepSize * fDerivative(x_old);\n * }\n *\n * console.log('Local minimum occurs at', x_new);\n */\nconst epsilon = 0.0001;\n\nexport default epsilon;\n","/**\n * A [Factorial](https://en.wikipedia.org/wiki/Factorial), usually written n!, is the product of all positive\n * integers less than or equal to n. Often factorial is implemented\n * recursively, but this iterative approach is significantly faster\n * and simpler.\n *\n * @param {number} n input, must be an integer number 1 or greater\n * @returns {number} factorial: n!\n * @throws {Error} if n is less than 0 or not an integer\n * @example\n * factorial(5); // => 120\n */\nfunction factorial(n) {\n    // factorial is mathematically undefined for negative numbers\n    if (n < 0) {\n        throw new Error(\"factorial requires a non-negative value\");\n    }\n\n    if (Math.floor(n) !== n) {\n        throw new Error(\"factorial requires an integer input\");\n    }\n\n    // typically you'll expand the factorial function going down, like\n    // 5! = 5 * 4 * 3 * 2 * 1. This is going in the opposite direction,\n    // counting from 2 up to the number in question, and since anything\n    // multiplied by 1 is itself, the loop only needs to start at 2.\n    let accumulator = 1;\n    for (let i = 2; i <= n; i++) {\n        // for each number up to and including the number `n`, multiply\n        // the accumulator my that number.\n        accumulator *= i;\n    }\n    return accumulator;\n}\n\nexport default factorial;\n","// Define series coefficients\nconst COEFFICIENTS = [\n    0.99999999999999709182,\n    57.156235665862923517,\n    -59.597960355475491248,\n    14.136097974741747174,\n    -0.49191381609762019978,\n    0.33994649984811888699e-4,\n    0.46523628927048575665e-4,\n    -0.98374475304879564677e-4,\n    0.15808870322491248884e-3,\n    -0.21026444172410488319e-3,\n    0.2174396181152126432e-3,\n    -0.16431810653676389022e-3,\n    0.84418223983852743293e-4,\n    -0.2619083840158140867e-4,\n    0.36899182659531622704e-5\n];\n\nconst g = 607 / 128;\nconst LOGSQRT2PI = Math.log(Math.sqrt(2 * Math.PI));\n\n/**\n * Compute the logarithm of the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Lanczos' approximation.\n * This function takes as input any real-value n greater than 0.\n * This function is useful for values of n too large for the normal gamma function (n > 165).\n * The code is based on Lanczo's Gamma approximation, defined [here](http://my.fit.edu/~gabdo/gamma.txt).\n *\n * @param {number} n Any real number greater than zero.\n * @returns {number} The logarithm of gamma of the input value.\n *\n * @example\n * gammaln(500); // 2605.1158503617335\n * gammaln(2.4); // 0.21685932244884043\n */\nfunction gammaln(n) {\n    // Return infinity if value not in domain\n    if (n <= 0) {\n        return Infinity;\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    // Create series approximation\n    let a = COEFFICIENTS[0];\n\n    for (let i = 1; i < 15; i++) {\n        a += COEFFICIENTS[i] / (n + i);\n    }\n\n    const tmp = g + 0.5 + n;\n\n    // Return natural logarithm of gamma(n)\n    return LOGSQRT2PI + Math.log(a) - tmp + (n + 0.5) * Math.log(tmp);\n}\n\nexport default gammaln;\n","/**\n * **Percentage Points of the χ2 (Chi-Squared) Distribution**\n *\n * The [χ2 (Chi-Squared) Distribution](http://en.wikipedia.org/wiki/Chi-squared_distribution) is used in the common\n * chi-squared tests for goodness of fit of an observed distribution to a theoretical one, the independence of two\n * criteria of classification of qualitative data, and in confidence interval estimation for a population standard\n * deviation of a normal distribution from a sample standard deviation.\n *\n * Values from Appendix 1, Table III of William W. Hines & Douglas C. Montgomery, \"Probability and Statistics in\n * Engineering and Management Science\", Wiley (1980).\n */\nconst chiSquaredDistributionTable = {\n    1: {\n        0.995: 0,\n        0.99: 0,\n        0.975: 0,\n        0.95: 0,\n        0.9: 0.02,\n        0.5: 0.45,\n        0.1: 2.71,\n        0.05: 3.84,\n        0.025: 5.02,\n        0.01: 6.63,\n        0.005: 7.88\n    },\n    2: {\n        0.995: 0.01,\n        0.99: 0.02,\n        0.975: 0.05,\n        0.95: 0.1,\n        0.9: 0.21,\n        0.5: 1.39,\n        0.1: 4.61,\n        0.05: 5.99,\n        0.025: 7.38,\n        0.01: 9.21,\n        0.005: 10.6\n    },\n    3: {\n        0.995: 0.07,\n        0.99: 0.11,\n        0.975: 0.22,\n        0.95: 0.35,\n        0.9: 0.58,\n        0.5: 2.37,\n        0.1: 6.25,\n        0.05: 7.81,\n        0.025: 9.35,\n        0.01: 11.34,\n        0.005: 12.84\n    },\n    4: {\n        0.995: 0.21,\n        0.99: 0.3,\n        0.975: 0.48,\n        0.95: 0.71,\n        0.9: 1.06,\n        0.5: 3.36,\n        0.1: 7.78,\n        0.05: 9.49,\n        0.025: 11.14,\n        0.01: 13.28,\n        0.005: 14.86\n    },\n    5: {\n        0.995: 0.41,\n        0.99: 0.55,\n        0.975: 0.83,\n        0.95: 1.15,\n        0.9: 1.61,\n        0.5: 4.35,\n        0.1: 9.24,\n        0.05: 11.07,\n        0.025: 12.83,\n        0.01: 15.09,\n        0.005: 16.75\n    },\n    6: {\n        0.995: 0.68,\n        0.99: 0.87,\n        0.975: 1.24,\n        0.95: 1.64,\n        0.9: 2.2,\n        0.5: 5.35,\n        0.1: 10.65,\n        0.05: 12.59,\n        0.025: 14.45,\n        0.01: 16.81,\n        0.005: 18.55\n    },\n    7: {\n        0.995: 0.99,\n        0.99: 1.25,\n        0.975: 1.69,\n        0.95: 2.17,\n        0.9: 2.83,\n        0.5: 6.35,\n        0.1: 12.02,\n        0.05: 14.07,\n        0.025: 16.01,\n        0.01: 18.48,\n        0.005: 20.28\n    },\n    8: {\n        0.995: 1.34,\n        0.99: 1.65,\n        0.975: 2.18,\n        0.95: 2.73,\n        0.9: 3.49,\n        0.5: 7.34,\n        0.1: 13.36,\n        0.05: 15.51,\n        0.025: 17.53,\n        0.01: 20.09,\n        0.005: 21.96\n    },\n    9: {\n        0.995: 1.73,\n        0.99: 2.09,\n        0.975: 2.7,\n        0.95: 3.33,\n        0.9: 4.17,\n        0.5: 8.34,\n        0.1: 14.68,\n        0.05: 16.92,\n        0.025: 19.02,\n        0.01: 21.67,\n        0.005: 23.59\n    },\n    10: {\n        0.995: 2.16,\n        0.99: 2.56,\n        0.975: 3.25,\n        0.95: 3.94,\n        0.9: 4.87,\n        0.5: 9.34,\n        0.1: 15.99,\n        0.05: 18.31,\n        0.025: 20.48,\n        0.01: 23.21,\n        0.005: 25.19\n    },\n    11: {\n        0.995: 2.6,\n        0.99: 3.05,\n        0.975: 3.82,\n        0.95: 4.57,\n        0.9: 5.58,\n        0.5: 10.34,\n        0.1: 17.28,\n        0.05: 19.68,\n        0.025: 21.92,\n        0.01: 24.72,\n        0.005: 26.76\n    },\n    12: {\n        0.995: 3.07,\n        0.99: 3.57,\n        0.975: 4.4,\n        0.95: 5.23,\n        0.9: 6.3,\n        0.5: 11.34,\n        0.1: 18.55,\n        0.05: 21.03,\n        0.025: 23.34,\n        0.01: 26.22,\n        0.005: 28.3\n    },\n    13: {\n        0.995: 3.57,\n        0.99: 4.11,\n        0.975: 5.01,\n        0.95: 5.89,\n        0.9: 7.04,\n        0.5: 12.34,\n        0.1: 19.81,\n        0.05: 22.36,\n        0.025: 24.74,\n        0.01: 27.69,\n        0.005: 29.82\n    },\n    14: {\n        0.995: 4.07,\n        0.99: 4.66,\n        0.975: 5.63,\n        0.95: 6.57,\n        0.9: 7.79,\n        0.5: 13.34,\n        0.1: 21.06,\n        0.05: 23.68,\n        0.025: 26.12,\n        0.01: 29.14,\n        0.005: 31.32\n    },\n    15: {\n        0.995: 4.6,\n        0.99: 5.23,\n        0.975: 6.27,\n        0.95: 7.26,\n        0.9: 8.55,\n        0.5: 14.34,\n        0.1: 22.31,\n        0.05: 25,\n        0.025: 27.49,\n        0.01: 30.58,\n        0.005: 32.8\n    },\n    16: {\n        0.995: 5.14,\n        0.99: 5.81,\n        0.975: 6.91,\n        0.95: 7.96,\n        0.9: 9.31,\n        0.5: 15.34,\n        0.1: 23.54,\n        0.05: 26.3,\n        0.025: 28.85,\n        0.01: 32,\n        0.005: 34.27\n    },\n    17: {\n        0.995: 5.7,\n        0.99: 6.41,\n        0.975: 7.56,\n        0.95: 8.67,\n        0.9: 10.09,\n        0.5: 16.34,\n        0.1: 24.77,\n        0.05: 27.59,\n        0.025: 30.19,\n        0.01: 33.41,\n        0.005: 35.72\n    },\n    18: {\n        0.995: 6.26,\n        0.99: 7.01,\n        0.975: 8.23,\n        0.95: 9.39,\n        0.9: 10.87,\n        0.5: 17.34,\n        0.1: 25.99,\n        0.05: 28.87,\n        0.025: 31.53,\n        0.01: 34.81,\n        0.005: 37.16\n    },\n    19: {\n        0.995: 6.84,\n        0.99: 7.63,\n        0.975: 8.91,\n        0.95: 10.12,\n        0.9: 11.65,\n        0.5: 18.34,\n        0.1: 27.2,\n        0.05: 30.14,\n        0.025: 32.85,\n        0.01: 36.19,\n        0.005: 38.58\n    },\n    20: {\n        0.995: 7.43,\n        0.99: 8.26,\n        0.975: 9.59,\n        0.95: 10.85,\n        0.9: 12.44,\n        0.5: 19.34,\n        0.1: 28.41,\n        0.05: 31.41,\n        0.025: 34.17,\n        0.01: 37.57,\n        0.005: 40\n    },\n    21: {\n        0.995: 8.03,\n        0.99: 8.9,\n        0.975: 10.28,\n        0.95: 11.59,\n        0.9: 13.24,\n        0.5: 20.34,\n        0.1: 29.62,\n        0.05: 32.67,\n        0.025: 35.48,\n        0.01: 38.93,\n        0.005: 41.4\n    },\n    22: {\n        0.995: 8.64,\n        0.99: 9.54,\n        0.975: 10.98,\n        0.95: 12.34,\n        0.9: 14.04,\n        0.5: 21.34,\n        0.1: 30.81,\n        0.05: 33.92,\n        0.025: 36.78,\n        0.01: 40.29,\n        0.005: 42.8\n    },\n    23: {\n        0.995: 9.26,\n        0.99: 10.2,\n        0.975: 11.69,\n        0.95: 13.09,\n        0.9: 14.85,\n        0.5: 22.34,\n        0.1: 32.01,\n        0.05: 35.17,\n        0.025: 38.08,\n        0.01: 41.64,\n        0.005: 44.18\n    },\n    24: {\n        0.995: 9.89,\n        0.99: 10.86,\n        0.975: 12.4,\n        0.95: 13.85,\n        0.9: 15.66,\n        0.5: 23.34,\n        0.1: 33.2,\n        0.05: 36.42,\n        0.025: 39.36,\n        0.01: 42.98,\n        0.005: 45.56\n    },\n    25: {\n        0.995: 10.52,\n        0.99: 11.52,\n        0.975: 13.12,\n        0.95: 14.61,\n        0.9: 16.47,\n        0.5: 24.34,\n        0.1: 34.28,\n        0.05: 37.65,\n        0.025: 40.65,\n        0.01: 44.31,\n        0.005: 46.93\n    },\n    26: {\n        0.995: 11.16,\n        0.99: 12.2,\n        0.975: 13.84,\n        0.95: 15.38,\n        0.9: 17.29,\n        0.5: 25.34,\n        0.1: 35.56,\n        0.05: 38.89,\n        0.025: 41.92,\n        0.01: 45.64,\n        0.005: 48.29\n    },\n    27: {\n        0.995: 11.81,\n        0.99: 12.88,\n        0.975: 14.57,\n        0.95: 16.15,\n        0.9: 18.11,\n        0.5: 26.34,\n        0.1: 36.74,\n        0.05: 40.11,\n        0.025: 43.19,\n        0.01: 46.96,\n        0.005: 49.65\n    },\n    28: {\n        0.995: 12.46,\n        0.99: 13.57,\n        0.975: 15.31,\n        0.95: 16.93,\n        0.9: 18.94,\n        0.5: 27.34,\n        0.1: 37.92,\n        0.05: 41.34,\n        0.025: 44.46,\n        0.01: 48.28,\n        0.005: 50.99\n    },\n    29: {\n        0.995: 13.12,\n        0.99: 14.26,\n        0.975: 16.05,\n        0.95: 17.71,\n        0.9: 19.77,\n        0.5: 28.34,\n        0.1: 39.09,\n        0.05: 42.56,\n        0.025: 45.72,\n        0.01: 49.59,\n        0.005: 52.34\n    },\n    30: {\n        0.995: 13.79,\n        0.99: 14.95,\n        0.975: 16.79,\n        0.95: 18.49,\n        0.9: 20.6,\n        0.5: 29.34,\n        0.1: 40.26,\n        0.05: 43.77,\n        0.025: 46.98,\n        0.01: 50.89,\n        0.005: 53.67\n    },\n    40: {\n        0.995: 20.71,\n        0.99: 22.16,\n        0.975: 24.43,\n        0.95: 26.51,\n        0.9: 29.05,\n        0.5: 39.34,\n        0.1: 51.81,\n        0.05: 55.76,\n        0.025: 59.34,\n        0.01: 63.69,\n        0.005: 66.77\n    },\n    50: {\n        0.995: 27.99,\n        0.99: 29.71,\n        0.975: 32.36,\n        0.95: 34.76,\n        0.9: 37.69,\n        0.5: 49.33,\n        0.1: 63.17,\n        0.05: 67.5,\n        0.025: 71.42,\n        0.01: 76.15,\n        0.005: 79.49\n    },\n    60: {\n        0.995: 35.53,\n        0.99: 37.48,\n        0.975: 40.48,\n        0.95: 43.19,\n        0.9: 46.46,\n        0.5: 59.33,\n        0.1: 74.4,\n        0.05: 79.08,\n        0.025: 83.3,\n        0.01: 88.38,\n        0.005: 91.95\n    },\n    70: {\n        0.995: 43.28,\n        0.99: 45.44,\n        0.975: 48.76,\n        0.95: 51.74,\n        0.9: 55.33,\n        0.5: 69.33,\n        0.1: 85.53,\n        0.05: 90.53,\n        0.025: 95.02,\n        0.01: 100.42,\n        0.005: 104.22\n    },\n    80: {\n        0.995: 51.17,\n        0.99: 53.54,\n        0.975: 57.15,\n        0.95: 60.39,\n        0.9: 64.28,\n        0.5: 79.33,\n        0.1: 96.58,\n        0.05: 101.88,\n        0.025: 106.63,\n        0.01: 112.33,\n        0.005: 116.32\n    },\n    90: {\n        0.995: 59.2,\n        0.99: 61.75,\n        0.975: 65.65,\n        0.95: 69.13,\n        0.9: 73.29,\n        0.5: 89.33,\n        0.1: 107.57,\n        0.05: 113.14,\n        0.025: 118.14,\n        0.01: 124.12,\n        0.005: 128.3\n    },\n    100: {\n        0.995: 67.33,\n        0.99: 70.06,\n        0.975: 74.22,\n        0.95: 77.93,\n        0.9: 82.36,\n        0.5: 99.33,\n        0.1: 118.5,\n        0.05: 124.34,\n        0.025: 129.56,\n        0.01: 135.81,\n        0.005: 140.17\n    }\n};\n\nexport default chiSquaredDistributionTable;\n","import interquartileRange from \"./interquartile_range\";\nimport stddev from \"./sample_standard_deviation\";\n\nconst SQRT_2PI = Math.sqrt(2 * Math.PI);\n\n/**\n * [Well-known kernels](https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use)\n * @private\n */\nconst kernels = {\n    /**\n     * The gaussian kernel.\n     * @private\n     */\n    gaussian: function (u) {\n        return Math.exp(-0.5 * u * u) / SQRT_2PI;\n    }\n};\n\n/**\n * Well known bandwidth selection methods\n * @private\n */\nconst bandwidthMethods = {\n    /**\n     * The [\"normal reference distribution\"\n     * rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html),\n     * a commonly used version of [Silverman's\n     * rule-of-thumb](https://en.wikipedia.org/wiki/Kernel_density_estimation#A_rule-of-thumb_bandwidth_estimator).\n     * @private\n     */\n    nrd: function (x) {\n        let s = stddev(x);\n        const iqr = interquartileRange(x);\n        if (typeof iqr === \"number\") {\n            s = Math.min(s, iqr / 1.34);\n        }\n        return 1.06 * s * Math.pow(x.length, -0.2);\n    }\n};\n\n/**\n * [Kernel density estimation](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n * is a useful tool for, among other things, estimating the shape of the\n * underlying probability distribution from a sample.\n *\n * @name kernelDensityEstimation\n * @param X sample values\n * @param kernel The kernel function to use. If a function is provided, it should return non-negative values and integrate to 1. Defaults to 'gaussian'.\n * @param bandwidthMethod The \"bandwidth selection\" method to use, or a fixed bandwidth value. Defaults to \"nrd\", the commonly-used [\"normal reference distribution\" rule-of-thumb](https://stat.ethz.ch/R-manual/R-devel/library/MASS/html/bandwidth.nrd.html).\n * @returns {Function} An estimated [probability density function](https://en.wikipedia.org/wiki/Probability_density_function) for the given sample. The returned function runs in `O(X.length)`.\n */\nfunction kernelDensityEstimation(X, kernel, bandwidthMethod) {\n    let kernelFn;\n    if (kernel === undefined) {\n        kernelFn = kernels.gaussian;\n    } else if (typeof kernel === \"string\") {\n        if (!kernels[kernel]) {\n            throw new Error('Unknown kernel \"' + kernel + '\"');\n        }\n        kernelFn = kernels[kernel];\n    } else {\n        kernelFn = kernel;\n    }\n\n    let bandwidth;\n    if (typeof bandwidthMethod === \"undefined\") {\n        bandwidth = bandwidthMethods.nrd(X);\n    } else if (typeof bandwidthMethod === \"string\") {\n        if (!bandwidthMethods[bandwidthMethod]) {\n            throw new Error(\n                'Unknown bandwidth method \"' + bandwidthMethod + '\"'\n            );\n        }\n        bandwidth = bandwidthMethods[bandwidthMethod](X);\n    } else {\n        bandwidth = bandwidthMethod;\n    }\n\n    return function (x) {\n        let i = 0;\n        let sum = 0;\n        for (i = 0; i < X.length; i++) {\n            sum += kernelFn((x - X[i]) / bandwidth);\n        }\n        return sum / bandwidth / X.length;\n    };\n}\n\nexport default kernelDensityEstimation;\n","const SQRT_2PI = Math.sqrt(2 * Math.PI);\n\nfunction cumulativeDistribution(z) {\n    let sum = z,\n        tmp = z;\n\n    // 15 iterations are enough for 4-digit precision\n    for (let i = 1; i < 15; i++) {\n        tmp *= (z * z) / (2 * i + 1);\n        sum += tmp;\n    }\n    return (\n        Math.round((0.5 + (sum / SQRT_2PI) * Math.exp((-z * z) / 2)) * 1e4) /\n        1e4\n    );\n}\n\n/**\n * A standard normal table, also called the unit normal table or Z table,\n * is a mathematical table for the values of Φ (phi), which are the values of\n * the [cumulative distribution function](https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function)\n * of the normal distribution. It is used to find the probability that a\n * statistic is observed below, above, or between values on the standard\n * normal distribution, and by extension, any normal distribution.\n */\nconst standardNormalTable = [];\n\nfor (let z = 0; z <= 3.09; z += 0.01) {\n    standardNormalTable.push(cumulativeDistribution(z));\n}\n\nexport default standardNormalTable;\n","/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n * It uses Horner's method to evaluate the polynomial of τ (tau).\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x) {\n    const t = 1 / (1 + 0.5 * Math.abs(x));\n    const tau =\n        t *\n        Math.exp(\n            -x * x +\n                ((((((((0.17087277 * t - 0.82215223) * t + 1.48851587) * t -\n                    1.13520398) *\n                    t +\n                    0.27886807) *\n                    t -\n                    0.18628806) *\n                    t +\n                    0.09678418) *\n                    t +\n                    0.37409196) *\n                    t +\n                    1.00002368) *\n                    t -\n                1.26551223\n        );\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nexport default errorFunction;\n","/**\n * The Inverse [Gaussian error function](http://en.wikipedia.org/wiki/Error_function)\n * returns a numerical approximation to the value that would have caused\n * `errorFunction()` to return x.\n *\n * @param {number} x value of error function\n * @returns {number} estimated inverted value\n */\nfunction inverseErrorFunction(x) {\n    const a = (8 * (Math.PI - 3)) / (3 * Math.PI * (4 - Math.PI));\n\n    const inv = Math.sqrt(\n        Math.sqrt(\n            Math.pow(2 / (Math.PI * a) + Math.log(1 - x * x) / 2, 2) -\n                Math.log(1 - x * x) / a\n        ) -\n            (2 / (Math.PI * a) + Math.log(1 - x * x) / 2)\n    );\n\n    if (x >= 0) {\n        return inv;\n    } else {\n        return -inv;\n    }\n}\n\nexport default inverseErrorFunction;\n","/**\n * [Sign](https://en.wikipedia.org/wiki/Sign_function) is a function\n * that extracts the sign of a real number\n *\n * @param {number} x input value\n * @returns {number} sign value either 1, 0 or -1\n * @throws {TypeError} if the input argument x is not a number\n * @private\n *\n * @example\n * sign(2); // => 1\n */\nfunction sign(x) {\n    if (typeof x === \"number\") {\n        if (x < 0) {\n            return -1;\n        } else if (x === 0) {\n            return 0;\n        } else {\n            return 1;\n        }\n    } else {\n        throw new TypeError(\"not a number\");\n    }\n}\n\nexport default sign;\n","/**\n * Calculate Euclidean distance between two points.\n * @param {Array<number>} left First N-dimensional point.\n * @param {Array<number>} right Second N-dimensional point.\n * @returns {number} Distance.\n */\nfunction euclideanDistance(left, right) {\n    let sum = 0;\n    for (let i = 0; i < left.length; i++) {\n        const diff = left[i] - right[i];\n        sum += diff * diff;\n    }\n    return Math.sqrt(sum);\n}\n\nexport default euclideanDistance;\n","import euclideanDistance from \"./euclidean_distance\";\nimport makeMatrix from \"./make_matrix\";\nimport sample from \"./sample\";\n\n/**\n * @typedef {Object} kMeansReturn\n * @property {Array<number>} labels The labels.\n * @property {Array<Array<number>>} centroids The cluster centroids.\n */\n\n/**\n * Perform k-means clustering.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points to be clustered.\n * @param {number} numCluster How many clusters to create.\n * @param {Function} randomSource An optional entropy source that generates uniform values in [0, 1).\n * @return {kMeansReturn} Labels (same length as data) and centroids (same length as numCluster).\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n *\n * @example\n * kMeansCluster([[0.0, 0.5], [1.0, 0.5]], 2); // => {labels: [0, 1], centroids: [[0.0, 0.5], [1.0 0.5]]}\n */\nfunction kMeansCluster(points, numCluster, randomSource = Math.random) {\n    let oldCentroids = null;\n    let newCentroids = sample(points, numCluster, randomSource);\n    let labels = null;\n    let change = Number.MAX_VALUE;\n    while (change !== 0) {\n        labels = labelPoints(points, newCentroids);\n        oldCentroids = newCentroids;\n        newCentroids = calculateCentroids(points, labels, numCluster);\n        change = calculateChange(newCentroids, oldCentroids);\n    }\n    return {\n        labels: labels,\n        centroids: newCentroids\n    };\n}\n\n/**\n * Label each point according to which centroid it is closest to.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<Array<number>>} centroids Current centroids.\n * @return {Array<number>} Group labels.\n */\nfunction labelPoints(points, centroids) {\n    return points.map((p) => {\n        let minDist = Number.MAX_VALUE;\n        let label = -1;\n        for (let i = 0; i < centroids.length; i++) {\n            const dist = euclideanDistance(p, centroids[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                label = i;\n            }\n        }\n        return label;\n    });\n}\n\n/**\n * Calculate centroids for points given labels.\n *\n * @private\n * @param {Array<Array<number>>} points Array of XY coordinates.\n * @param {Array<number>} labels Which groups points belong to.\n * @param {number} numCluster Number of clusters being created.\n * @return {Array<Array<number>>} Centroid for each group.\n * @throws {Error} If any centroids wind up friendless (i.e., without associated points).\n */\nfunction calculateCentroids(points, labels, numCluster) {\n    // Initialize accumulators.\n    const dimension = points[0].length;\n    const centroids = makeMatrix(numCluster, dimension);\n    const counts = Array(numCluster).fill(0);\n\n    // Add points to centroids' accumulators and count points per centroid.\n    const numPoints = points.length;\n    for (let i = 0; i < numPoints; i++) {\n        const point = points[i];\n        const label = labels[i];\n        const current = centroids[label];\n        for (let j = 0; j < dimension; j++) {\n            current[j] += point[j];\n        }\n        counts[label] += 1;\n    }\n\n    // Rescale centroids, checking for any that have no points.\n    for (let i = 0; i < numCluster; i++) {\n        if (counts[i] === 0) {\n            throw new Error(`Centroid ${i} has no friends`);\n        }\n        const centroid = centroids[i];\n        for (let j = 0; j < dimension; j++) {\n            centroid[j] /= counts[i];\n        }\n    }\n\n    return centroids;\n}\n\n/**\n * Calculate the difference between old centroids and new centroids.\n *\n * @private\n * @param {Array<Array<number>>} left One list of centroids.\n * @param {Array<Array<number>>} right Another list of centroids.\n * @return {number} Distance between centroids.\n */\nfunction calculateChange(left, right) {\n    let total = 0;\n    for (let i = 0; i < left.length; i++) {\n        total += euclideanDistance(left[i], right[i]);\n    }\n    return total;\n}\n\nexport default kMeansCluster;\n","import euclideanDistance from \"./euclidean_distance\";\nimport makeMatrix from \"./make_matrix\";\nimport max from \"./max\";\n\n/**\n * Calculate the [silhouette values](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for clustered data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<number>} The silhouette value for each point.\n *\n * @example\n * silhouette([[0.25], [0.75]], [0, 0]); // => [1.0, 1.0]\n */\nfunction silhouette(points, labels) {\n    if (points.length !== labels.length) {\n        throw new Error(\"must have exactly as many labels as points\");\n    }\n    const groupings = createGroups(labels);\n    const distances = calculateAllDistances(points);\n    const result = [];\n    for (let i = 0; i < points.length; i++) {\n        let s = 0;\n        if (groupings[labels[i]].length > 1) {\n            const a = meanDistanceFromPointToGroup(\n                i,\n                groupings[labels[i]],\n                distances\n            );\n            const b = meanDistanceToNearestGroup(\n                i,\n                labels,\n                groupings,\n                distances\n            );\n            s = (b - a) / Math.max(a, b);\n        }\n        result.push(s);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table mapping group IDs to point IDs.\n *\n * @private\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {Array<Array<number>>} An array of length G, each of whose entries is an array\n * containing the indices of the points in that group.\n */\nfunction createGroups(labels) {\n    const numGroups = 1 + max(labels);\n    const result = Array(numGroups);\n    for (let i = 0; i < labels.length; i++) {\n        const label = labels[i];\n        if (result[label] === undefined) {\n            result[label] = [];\n        }\n        result[label].push(i);\n    }\n    return result;\n}\n\n/**\n * Create a lookup table of all inter-point distances.\n *\n * @private\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @return {Array<Array<number>>} A symmetric square array of inter-point distances\n * (zero on the diagonal).\n */\nfunction calculateAllDistances(points) {\n    const numPoints = points.length;\n    const result = makeMatrix(numPoints, numPoints);\n    for (let i = 0; i < numPoints; i++) {\n        for (let j = 0; j < i; j++) {\n            result[i][j] = euclideanDistance(points[i], points[j]);\n            result[j][i] = result[i][j];\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between this point and all the points in the\n * nearest group (as determined by which point in another group is closest).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} labels Labels of points.\n * @param {Array<Array<number>>} groupings An array whose entries are arrays\n * containing the indices of the points in that group.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the nearest\n * group.\n */\nfunction meanDistanceToNearestGroup(which, labels, groupings, distances) {\n    const label = labels[which];\n    let result = Number.MAX_VALUE;\n    for (let i = 0; i < groupings.length; i++) {\n        if (i !== label) {\n            const d = meanDistanceFromPointToGroup(\n                which,\n                groupings[i],\n                distances\n            );\n            if (d < result) {\n                result = d;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Calculate the mean distance between a point and all the points in a group\n * (possibly its own).\n *\n * @private\n * @param {number} which The index of this point.\n * @param {Array<number>} group The indices of all the points in the group in\n * question.\n * @param {Array<Array<number>>} distances A symmetric square array of inter-point\n * distances.\n * @return {number} The mean distance from this point to others in the\n * specified group.\n */\nfunction meanDistanceFromPointToGroup(which, group, distances) {\n    let total = 0;\n    for (let i = 0; i < group.length; i++) {\n        total += distances[which][group[i]];\n    }\n    return total / group.length;\n}\n\nexport default silhouette;\n","/**\n * Relative error.\n *\n * This is more difficult to calculate than it first appears [1,2].  The usual\n * formula for the relative error between an actual value A and an expected\n * value E is `|(A-E)/E|`, but:\n *\n * 1. If the expected value is 0, any other value has infinite relative error,\n *    which is counter-intuitive: if the expected voltage is 0, getting 1/10th\n *    of a volt doesn't feel like an infinitely large error.\n *\n * 2. This formula does not satisfy the mathematical definition of a metric [3].\n *    [4] solved this problem by defining the relative error as `|ln(|A/E|)|`,\n *    but that formula only works if all values are positive: for example, it\n *    reports the relative error of -10 and 10 as 0.\n *\n * Our implementation sticks with convention and returns:\n *\n * - 0 if the actual and expected values are both zero\n * - Infinity if the actual value is non-zero and the expected value is zero\n * - `|(A-E)/E|` in all other cases\n *\n * [1] https://math.stackexchange.com/questions/677852/how-to-calculate-relative-error-when-true-value-is-zero\n * [2] https://en.wikipedia.org/wiki/Relative_change_and_difference\n * [3] https://en.wikipedia.org/wiki/Metric_(mathematics)#Definition\n * [4] F.W.J. Olver: \"A New Approach to Error Arithmetic.\" SIAM Journal on\n *     Numerical Analysis, 15(2), 1978, 10.1137/0715024.\n *\n * @param {number} actual The actual value.\n * @param {number} expected The expected value.\n * @return {number} The relative error.\n */\nfunction relativeError(actual, expected) {\n    if (actual === 0 && expected === 0) {\n        return 0;\n    }\n    return Math.abs((actual - expected) / expected);\n}\n\nexport default relativeError;\n","/**\n * When adding a new value to a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the new\n * value to add.\n *\n * @since 2.5.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} newValue the added value\n * @returns {number} the new mean\n *\n * @example\n * addToMean(14, 5, 53); // => 20.5\n */\nfunction addToMean(mean, n, newValue) {\n    return mean + (newValue - mean) / (n + 1);\n}\n\nexport default addToMean;\n","import epsilon from \"./epsilon\";\nimport relativeError from \"./relative_error\";\n\n/**\n * Approximate equality.\n *\n * @param {number} actual The value to be tested.\n * @param {number} expected The reference value.\n * @param {number} tolerance The acceptable relative difference.\n * @return {boolean} Whether numbers are within tolerance.\n */\nfunction approxEqual(actual, expected, tolerance = epsilon) {\n    return relativeError(actual, expected) <= tolerance;\n}\n\nexport default approxEqual;\n","/**\n * The [Bernoulli distribution](http://en.wikipedia.org/wiki/Bernoulli_distribution)\n * is the probability discrete\n * distribution of a random variable which takes value 1 with success\n * probability `p` and value 0 with failure\n * probability `q` = 1 - `p`. It can be used, for example, to represent the\n * toss of a coin, where \"1\" is defined to mean \"heads\" and \"0\" is defined\n * to mean \"tails\" (or vice versa). It is\n * a special case of a Binomial Distribution\n * where `n` = 1.\n *\n * @param {number} p input value, between 0 and 1 inclusive\n * @returns {number[]} values of bernoulli distribution at this point\n * @throws {Error} if p is outside 0 and 1\n * @example\n * bernoulliDistribution(0.3); // => [0.7, 0.3]\n */\nfunction bernoulliDistribution(p) /*: number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1)\n    if (p < 0 || p > 1) {\n        throw new Error(\n            \"bernoulliDistribution requires probability to be between 0 and 1 inclusive\"\n        );\n    }\n\n    return [1 - p, p];\n}\n\nexport default bernoulliDistribution;\n","import epsilon from \"./epsilon\";\n\n/**\n * The [Binomial Distribution](http://en.wikipedia.org/wiki/Binomial_distribution) is the discrete probability\n * distribution of the number of successes in a sequence of n independent yes/no experiments, each of which yields\n * success with probability `probability`. Such a success/failure experiment is also called a Bernoulli experiment or\n * Bernoulli trial; when trials = 1, the Binomial Distribution is a Bernoulli Distribution.\n *\n * @param {number} trials number of trials to simulate\n * @param {number} probability\n * @returns {number[]} output\n */\nfunction binomialDistribution(trials, probability) /*: ?number[] */ {\n    // Check that `p` is a valid probability (0 ≤ p ≤ 1),\n    // that `n` is an integer, strictly positive.\n    if (probability < 0 || probability > 1 || trials <= 0 || trials % 1 !== 0) {\n        return undefined;\n    }\n\n    // We initialize `x`, the random variable, and `accumulator`, an accumulator\n    // for the cumulative distribution function to 0. `distribution_functions`\n    // is the object we'll return with the `probability_of_x` and the\n    // `cumulativeProbability_of_x`, as well as the calculated mean &\n    // variance. We iterate until the `cumulativeProbability_of_x` is\n    // within `epsilon` of 1.0.\n    let x = 0;\n    let cumulativeProbability = 0;\n    const cells = [];\n    let binomialCoefficient = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] =\n            binomialCoefficient *\n            Math.pow(probability, x) *\n            Math.pow(1 - probability, trials - x);\n        cumulativeProbability += cells[x];\n        x++;\n        binomialCoefficient = (binomialCoefficient * (trials - x + 1)) / x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default binomialDistribution;\n","import sign from \"./sign\";\n\n/**\n * [Bisection method](https://en.wikipedia.org/wiki/Bisection_method) is a root-finding\n * method that repeatedly bisects an interval to find the root.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {Function} func input function\n * @param {number} start - start of interval\n * @param {number} end - end of interval\n * @param {number} maxIterations - the maximum number of iterations\n * @param {number} errorTolerance - the error tolerance\n * @returns {number} estimated root value\n * @throws {TypeError} Argument func must be a function\n *\n * @example\n * bisect(Math.cos,0,4,100,0.003); // => 1.572265625\n */\nfunction bisect(func, start, end, maxIterations, errorTolerance) {\n    if (typeof func !== \"function\")\n        throw new TypeError(\"func must be a function\");\n\n    for (let i = 0; i < maxIterations; i++) {\n        const output = (start + end) / 2;\n\n        if (\n            func(output) === 0 ||\n            Math.abs((end - start) / 2) < errorTolerance\n        ) {\n            return output;\n        }\n\n        if (sign(func(output)) === sign(func(start))) {\n            start = output;\n        } else {\n            end = output;\n        }\n    }\n\n    throw new Error(\"maximum number of iterations exceeded\");\n}\n\nexport default bisect;\n","import chiSquaredDistributionTable from \"./chi_squared_distribution_table\";\nimport mean from \"./mean\";\n\n/**\n * The [χ2 (Chi-Squared) Goodness-of-Fit Test](http://en.wikipedia.org/wiki/Goodness_of_fit#Pearson.27s_chi-squared_test)\n * uses a measure of goodness of fit which is the sum of differences between observed and expected outcome frequencies\n * (that is, counts of observations), each squared and divided by the number of observations expected given the\n * hypothesized distribution. The resulting χ2 statistic, `chiSquared`, can be compared to the chi-squared distribution\n * to determine the goodness of fit. In order to determine the degrees of freedom of the chi-squared distribution, one\n * takes the total number of observed frequencies and subtracts the number of estimated parameters. The test statistic\n * follows, approximately, a chi-square distribution with (k − c) degrees of freedom where `k` is the number of non-empty\n * cells and `c` is the number of estimated parameters for the distribution.\n *\n * @param {Array<number>} data\n * @param {Function} distributionType a function that returns a point in a distribution:\n * for instance, binomial, bernoulli, or poisson\n * @param {number} significance\n * @returns {number} chi squared goodness of fit\n * @example\n * // Data from Poisson goodness-of-fit example 10-19 in William W. Hines & Douglas C. Montgomery,\n * // \"Probability and Statistics in Engineering and Management Science\", Wiley (1980).\n * var data1019 = [\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n *     1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n *     2, 2, 2, 2, 2, 2, 2, 2, 2,\n *     3, 3, 3, 3\n * ];\n * ss.chiSquaredGoodnessOfFit(data1019, ss.poissonDistribution, 0.05); //= false\n */\nfunction chiSquaredGoodnessOfFit(data, distributionType, significance) {\n    // Estimate from the sample data, a weighted mean.\n    const inputMean = mean(data);\n    // Calculated value of the χ2 statistic.\n    let chiSquared = 0;\n    // Number of hypothesized distribution parameters estimated, expected to be supplied in the distribution test.\n    // Lose one degree of freedom for estimating `lambda` from the sample data.\n    const c = 1;\n    // The hypothesized distribution.\n    // Generate the hypothesized distribution.\n    const hypothesizedDistribution = distributionType(inputMean);\n    const observedFrequencies = [];\n    const expectedFrequencies = [];\n\n    // Create an array holding a histogram from the sample data, of\n    // the form `{ value: numberOfOcurrences }`\n    for (let i = 0; i < data.length; i++) {\n        if (observedFrequencies[data[i]] === undefined) {\n            observedFrequencies[data[i]] = 0;\n        }\n        observedFrequencies[data[i]]++;\n    }\n\n    // The histogram we created might be sparse - there might be gaps\n    // between values. So we iterate through the histogram, making\n    // sure that instead of undefined, gaps have 0 values.\n    for (let i = 0; i < observedFrequencies.length; i++) {\n        if (observedFrequencies[i] === undefined) {\n            observedFrequencies[i] = 0;\n        }\n    }\n\n    // Create an array holding a histogram of expected data given the\n    // sample size and hypothesized distribution.\n    for (const k in hypothesizedDistribution) {\n        if (k in observedFrequencies) {\n            expectedFrequencies[+k] = hypothesizedDistribution[k] * data.length;\n        }\n    }\n\n    // Working backward through the expected frequencies, collapse classes\n    // if less than three observations are expected for a class.\n    // This transformation is applied to the observed frequencies as well.\n    for (let k = expectedFrequencies.length - 1; k >= 0; k--) {\n        if (expectedFrequencies[k] < 3) {\n            expectedFrequencies[k - 1] += expectedFrequencies[k];\n            expectedFrequencies.pop();\n\n            observedFrequencies[k - 1] += observedFrequencies[k];\n            observedFrequencies.pop();\n        }\n    }\n\n    // Iterate through the squared differences between observed & expected\n    // frequencies, accumulating the `chiSquared` statistic.\n    for (let k = 0; k < observedFrequencies.length; k++) {\n        chiSquared +=\n            Math.pow(observedFrequencies[k] - expectedFrequencies[k], 2) /\n            expectedFrequencies[k];\n    }\n\n    // Calculate degrees of freedom for this test and look it up in the\n    // `chiSquaredDistributionTable` in order to\n    // accept or reject the goodness-of-fit of the hypothesized distribution.\n    // Degrees of freedom, calculated as (number of class intervals -\n    // number of hypothesized distribution parameters estimated - 1)\n    const degreesOfFreedom = observedFrequencies.length - c - 1;\n    return (\n        chiSquaredDistributionTable[degreesOfFreedom][significance] < chiSquared\n    );\n}\n\nexport default chiSquaredGoodnessOfFit;\n","/**\n * Split an array into chunks of a specified size. This function\n * has the same behavior as [PHP's array_chunk](http://php.net/manual/en/function.array-chunk.php)\n * function, and thus will insert smaller-sized chunks at the end if\n * the input size is not divisible by the chunk size.\n *\n * `x` is expected to be an array, and `chunkSize` a number.\n * The `x` array can contain any kind of data.\n *\n * @param {Array} x a sample\n * @param {number} chunkSize size of each output array. must be a positive integer\n * @returns {Array<Array>} a chunked array\n * @throws {Error} if chunk size is less than 1 or not an integer\n * @example\n * chunk([1, 2, 3, 4, 5, 6], 2);\n * // => [[1, 2], [3, 4], [5, 6]]\n */\nfunction chunk(x, chunkSize) {\n    // a list of result chunks, as arrays in an array\n    const output = [];\n\n    // `chunkSize` must be zero or higher - otherwise the loop below,\n    // in which we call `start += chunkSize`, will loop infinitely.\n    // So, we'll detect and throw in that case to indicate\n    // invalid input.\n    if (chunkSize < 1) {\n        throw new Error(\"chunk size must be a positive number\");\n    }\n\n    if (Math.floor(chunkSize) !== chunkSize) {\n        throw new Error(\"chunk size must be an integer\");\n    }\n\n    // `start` is the index at which `.slice` will start selecting\n    // new array elements\n    for (let start = 0; start < x.length; start += chunkSize) {\n        // for each chunk, slice that part of the array and add it\n        // to the output. The `.slice` function does not change\n        // the original array.\n        output.push(x.slice(start, start + chunkSize));\n    }\n    return output;\n}\n\nexport default chunk;\n","import mean from \"./mean\";\nimport sampleStandardDeviation from \"./sample_standard_deviation\";\n\n/**\n * The`coefficient of variation`_ is the ratio of the standard deviation to the mean.\n * .._`coefficient of variation`: https://en.wikipedia.org/wiki/Coefficient_of_variation\n *\n *\n * @param {Array} x input\n * @returns {number} coefficient of variation\n * @example\n * coefficientOfVariation([1, 2, 3, 4]).toFixed(3); // => 0.516\n * coefficientOfVariation([1, 2, 3, 4, 5]).toFixed(3); // => 0.527\n * coefficientOfVariation([-1, 0, 1, 2, 3, 4]).toFixed(3); // => 1.247\n */\nfunction coefficientOfVariation(x) {\n    return sampleStandardDeviation(x) / mean(x);\n}\n\nexport default coefficientOfVariation;\n","/**\n * Implementation of Combinations\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * https://en.wikipedia.org/wiki/Combination\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinations([1, 2, 3], 2); // => [[1,2], [1,3], [2,3]]\n */\n\nfunction combinations(x, k) {\n    let i;\n    let subI;\n    const combinationList = [];\n    let subsetCombinations;\n    let next;\n\n    for (i = 0; i < x.length; i++) {\n        if (k === 1) {\n            combinationList.push([x[i]]);\n        } else {\n            subsetCombinations = combinations(x.slice(i + 1, x.length), k - 1);\n            for (subI = 0; subI < subsetCombinations.length; subI++) {\n                next = subsetCombinations[subI];\n                next.unshift(x[i]);\n                combinationList.push(next);\n            }\n        }\n    }\n    return combinationList;\n}\n\nexport default combinations;\n","/**\n * Implementation of [Combinations](https://en.wikipedia.org/wiki/Combination) with replacement\n * Combinations are unique subsets of a collection - in this case, k x from a collection at a time.\n * 'With replacement' means that a given element can be chosen multiple times.\n * Unlike permutation, order doesn't matter for combinations.\n *\n * @param {Array} x any type of data\n * @param {int} k the number of objects in each group (without replacement)\n * @returns {Array<Array>} array of permutations\n * @example\n * combinationsReplacement([1, 2], 2); // => [[1, 1], [1, 2], [2, 2]]\n */\nfunction combinationsReplacement(x, k) {\n    const combinationList = [];\n\n    for (let i = 0; i < x.length; i++) {\n        if (k === 1) {\n            // If we're requested to find only one element, we don't need\n            // to recurse: just push `x[i]` onto the list of combinations.\n            combinationList.push([x[i]]);\n        } else {\n            // Otherwise, recursively find combinations, given `k - 1`. Note that\n            // we request `k - 1`, so if you were looking for k=3 combinations, we're\n            // requesting k=2. This -1 gets reversed in the for loop right after this\n            // code, since we concatenate `x[i]` onto the selected combinations,\n            // bringing `k` back up to your requested level.\n            // This recursion may go many levels deep, since it only stops once\n            // k=1.\n            const subsetCombinations = combinationsReplacement(\n                x.slice(i, x.length),\n                k - 1\n            );\n\n            for (let j = 0; j < subsetCombinations.length; j++) {\n                combinationList.push([x[i]].concat(subsetCombinations[j]));\n            }\n        }\n    }\n\n    return combinationList;\n}\n\nexport default combinationsReplacement;\n","import combineMeans from \"./combine_means\";\n\n/**\n * When combining two lists of values for which one already knows the variances,\n * one does not have to necessary recompute the variance of the combined lists\n * in linear time. They can instead use this function to compute the combined\n * variance by providing the variance, mean & number of values of the first list\n * and the variance, mean & number of values of the second list.\n *\n * @since 3.0.0\n * @param {number} variance1 variance of the first list\n * @param {number} mean1 mean of the first list\n * @param {number} n1 number of items in the first list\n * @param {number} variance2 variance of the second list\n * @param {number} mean2 mean of the second list\n * @param {number} n2 number of items in the second list\n * @returns {number} the combined mean\n *\n * @example\n * combineVariances(14 / 3, 5, 3, 8 / 3, 4, 3); // => 47 / 12\n */\nfunction combineVariances(variance1, mean1, n1, variance2, mean2, n2) {\n    const newMean = combineMeans(mean1, n1, mean2, n2);\n\n    return (\n        (n1 * (variance1 + Math.pow(mean1 - newMean, 2)) +\n            n2 * (variance2 + Math.pow(mean2 - newMean, 2))) /\n        (n1 + n2)\n    );\n}\n\nexport default combineVariances;\n","/**\n * **[Logistic Cumulative Distribution Function](https://en.wikipedia.org/wiki/Logistic_distribution)**\n *\n * @param {number} x\n * @returns {number} cumulative standard logistic probability\n */\nfunction cumulativeStdLogisticProbability(x) {\n    return 1 / (Math.exp(-x) + 1);\n}\n\nexport default cumulativeStdLogisticProbability;\n","import standardNormalTable from \"./standard_normal_table\";\n\n/**\n * **[Cumulative Standard Normal Probability](http://en.wikipedia.org/wiki/Standard_normal_table)**\n *\n * Since probability tables cannot be\n * printed for every normal distribution, as there are an infinite variety\n * of normal distributions, it is common practice to convert a normal to a\n * standard normal and then use the standard normal table to find probabilities.\n *\n * You can use `.5 + .5 * errorFunction(x / Math.sqrt(2))` to calculate the probability\n * instead of looking it up in a table.\n *\n * @param {number} z\n * @returns {number} cumulative standard normal probability\n */\nfunction cumulativeStdNormalProbability(z) {\n    // Calculate the position of this value.\n    const absZ = Math.abs(z);\n    // Each row begins with a different\n    // significant digit: 0.5, 0.6, 0.7, and so on. Each value in the table\n    // corresponds to a range of 0.01 in the input values, so the value is\n    // multiplied by 100.\n    const index = Math.min(\n        Math.round(absZ * 100),\n        standardNormalTable.length - 1\n    );\n\n    // The index we calculate must be in the table as a positive value,\n    // but we still pay attention to whether the input is positive\n    // or negative, and flip the output value as a last step.\n    if (z >= 0) {\n        return standardNormalTable[index];\n    } else {\n        // due to floating-point arithmetic, values in the table with\n        // 4 significant figures can nevertheless end up as repeating\n        // fractions when they're computed here.\n        return +(1 - standardNormalTable[index]).toFixed(4);\n    }\n}\n\nexport default cumulativeStdNormalProbability;\n","import max from \"./max\";\nimport min from \"./min\";\n\n/**\n * Given an array of x, this will find the extent of the\n * x and return an array of breaks that can be used\n * to categorize the x into a number of classes. The\n * returned array will always be 1 longer than the number of\n * classes because it includes the minimum value.\n *\n * @param {Array<number>} x an array of number values\n * @param {number} nClasses number of desired classes\n * @returns {Array<number>} array of class break positions\n * @example\n * equalIntervalBreaks([1, 2, 3, 4, 5, 6], 4); // => [1, 2.25, 3.5, 4.75, 6]\n */\nfunction equalIntervalBreaks(x, nClasses) {\n    if (x.length < 2) {\n        return x;\n    }\n\n    const theMin = min(x);\n    const theMax = max(x);\n\n    // the first break will always be the minimum value\n    // in the xset\n    const breaks = [theMin];\n\n    // The size of each break is the full range of the x\n    // divided by the number of classes requested\n    const breakSize = (theMax - theMin) / nClasses;\n\n    // In the case of nClasses = 1, this loop won't run\n    // and the returned breaks will be [min, max]\n    for (let i = 1; i < nClasses; i++) {\n        breaks.push(breaks[0] + breakSize * i);\n    }\n\n    // the last break will always be the\n    // maximum.\n    breaks.push(theMax);\n\n    return breaks;\n}\n\nexport default equalIntervalBreaks;\n","/**\n * This computes the minimum & maximum number in an array.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {Array<number>} minimum & maximum value\n * @throws {Error} if the length of x is less than one\n * @example\n * extent([1, 2, 3, 4]);\n * // => [1, 4]\n */\nfunction extent(x) {\n    if (x.length === 0) {\n        throw new Error(\"extent requires at least one data point\");\n    }\n\n    let min = x[0];\n    let max = x[0];\n    for (let i = 1; i < x.length; i++) {\n        if (x[i] > max) {\n            max = x[i];\n        }\n        if (x[i] < min) {\n            min = x[i];\n        }\n    }\n    return [min, max];\n}\n\nexport default extent;\n","/**\n * The extent is the lowest & highest number in the array. With a sorted array,\n * the first element in the array is always the lowest while the last element is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {Array<number>} minimum & maximum value\n * @example\n * extentSorted([-100, -10, 1, 2, 5]); // => [-100, 5]\n */\nfunction extentSorted(x) {\n    return [x[0], x[x.length - 1]];\n}\n\nexport default extentSorted;\n","import factorial from \"./factorial\";\n\n/**\n * Compute the [gamma function](https://en.wikipedia.org/wiki/Gamma_function) of a value using Nemes' approximation.\n * The gamma of n is equivalent to (n-1)!, but unlike the factorial function, gamma is defined for all real n except zero\n * and negative integers (where NaN is returned). Note, the gamma function is also well-defined for complex numbers,\n * though this implementation currently does not handle complex numbers as input values.\n * Nemes' approximation is defined [here](https://arxiv.org/abs/1003.6020) as Theorem 2.2.\n * Negative values use [Euler's reflection formula](https://en.wikipedia.org/wiki/Gamma_function#Properties) for computation.\n *\n * @param {number} n Any real number except for zero and negative integers.\n * @returns {number} The gamma of the input value.\n *\n * @example\n * gamma(11.5); // 11899423.084037038\n * gamma(-11.5); // 2.29575810481609e-8\n * gamma(5); // 24\n */\nfunction gamma(n) {\n    if (Number.isInteger(n)) {\n        if (n <= 0) {\n            // gamma not defined for zero or negative integers\n            return NaN;\n        } else {\n            // use factorial for integer inputs\n            return factorial(n - 1);\n        }\n    }\n\n    // Decrement n, because approximation is defined for n - 1\n    n--;\n\n    if (n < 0) {\n        // Use Euler's reflection formula for negative inputs\n        // see:  https://en.wikipedia.org/wiki/Gamma_function#Properties\n        return Math.PI / (Math.sin(Math.PI * -n) * gamma(-n));\n    } else {\n        // Nemes' expansion approximation\n        const seriesCoefficient =\n            Math.pow(n / Math.E, n) * Math.sqrt(2 * Math.PI * (n + 1 / 6));\n\n        const seriesDenom = n + 1 / 4;\n\n        const seriesExpansion =\n            1 +\n            1 / 144 / Math.pow(seriesDenom, 2) -\n            1 / 12960 / Math.pow(seriesDenom, 3) -\n            257 / 207360 / Math.pow(seriesDenom, 4) -\n            52 / 2612736 / Math.pow(seriesDenom, 5) +\n            5741173 / 9405849600 / Math.pow(seriesDenom, 6) +\n            37529 / 18811699200 / Math.pow(seriesDenom, 7);\n\n        return seriesCoefficient * seriesExpansion;\n    }\n}\n\nexport default gamma;\n","/**\n * The [Geometric Mean](https://en.wikipedia.org/wiki/Geometric_mean) is\n * a mean function that is more useful for numbers in different\n * ranges.\n *\n * This is the nth root of the input numbers multiplied by each other.\n *\n * The geometric mean is often useful for\n * **[proportional growth](https://en.wikipedia.org/wiki/Geometric_mean#Proportional_growth)**: given\n * growth rates for multiple years, like _80%, 16.66% and 42.85%_, a simple\n * mean will incorrectly estimate an average growth rate, whereas a geometric\n * mean will correctly estimate a growth rate that, over those years,\n * will yield the same end value.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * var growthRates = [1.80, 1.166666, 1.428571];\n * var averageGrowth = ss.geometricMean(growthRates);\n * var averageGrowthRates = [averageGrowth, averageGrowth, averageGrowth];\n * var startingValue = 10;\n * var startingValueMean = 10;\n * growthRates.forEach(function(rate) {\n *   startingValue *= rate;\n * });\n * averageGrowthRates.forEach(function(rate) {\n *   startingValueMean *= rate;\n * });\n * startingValueMean === startingValue;\n */\nfunction geometricMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"geometricMean requires at least one data point\");\n    }\n\n    // the starting value.\n    let value = 1;\n\n    for (let i = 0; i < x.length; i++) {\n        // the geometric mean is only valid for positive numbers\n        if (x[i] < 0) {\n            throw new Error(\n                \"geometricMean requires only non-negative numbers as input\"\n            );\n        }\n\n        // repeatedly multiply the value by each number\n        value *= x[i];\n    }\n\n    return Math.pow(value, 1 / x.length);\n}\n\nexport default geometricMean;\n","/**\n * The [Harmonic Mean](https://en.wikipedia.org/wiki/Harmonic_mean) is\n * a mean function typically used to find the average of rates.\n * This mean is calculated by taking the reciprocal of the arithmetic mean\n * of the reciprocals of the input numbers.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} harmonic mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n * @example\n * harmonicMean([2, 3]).toFixed(2) // => '2.40'\n */\nfunction harmonicMean(x) {\n    if (x.length === 0) {\n        throw new Error(\"harmonicMean requires at least one data point\");\n    }\n\n    let reciprocalSum = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        // the harmonic mean is only valid for positive numbers\n        if (x[i] <= 0) {\n            throw new Error(\n                \"harmonicMean requires only positive numbers as input\"\n            );\n        }\n\n        reciprocalSum += 1 / x[i];\n    }\n\n    // divide n by the reciprocal sum\n    return x.length / reciprocalSum;\n}\n\nexport default harmonicMean;\n","/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data) {\n    let m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    const dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        let sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        let point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (let i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m =\n            (dataLength * sumXY - sumX * sumY) /\n            (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - (m * sumX) / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nexport default linearRegression;\n","/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nexport default linearRegressionLine;\n","/**\n * The [log average](https://en.wikipedia.org/wiki/https://en.wikipedia.org/wiki/Geometric_mean#Relationship_with_logarithms)\n * is an equivalent way of computing the geometric mean of an array suitable for large or small products.\n *\n * It's found by calculating the average logarithm of the elements and exponentiating.\n *\n * @param {Array<number>} x sample of one or more data points\n * @returns {number} geometric mean\n * @throws {Error} if x is empty\n * @throws {Error} if x contains a negative number\n */\nfunction logAverage(x) {\n    if (x.length === 0) {\n        throw new Error(\"logAverage requires at least one data point\");\n    }\n\n    let value = 0;\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] < 0) {\n            throw new Error(\n                \"logAverage requires only non-negative numbers as input\"\n            );\n        }\n        value += Math.log(x[i]);\n    }\n\n    return Math.exp(value / x.length);\n}\n\nexport default logAverage;\n","/**\n * The [Logit](https://en.wikipedia.org/wiki/Logit)\n * is the inverse of cumulativeStdLogisticProbability,\n * and is also known as the logistic quantile function.\n *\n * @param {number} p\n * @returns {number} logit\n */\nfunction logit(p) {\n    if (p <= 0 || p >= 1) {\n        throw new Error(\"p must be strictly between zero and one\");\n    }\n    return Math.log(p / (1 - p));\n}\n\nexport default logit;\n","/**\n * The maximum is the highest number in the array. With a sorted array,\n * the last element in the array is always the largest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} maximum value\n * @example\n * maxSorted([-100, -10, 1, 2, 5]); // => 5\n */\nfunction maxSorted(x) {\n    return x[x.length - 1];\n}\n\nexport default maxSorted;\n","import quantileSorted from \"./quantile_sorted\";\n\n/**\n * The [median](http://en.wikipedia.org/wiki/Median) is\n * the middle number of a list. This is often a good indicator of 'the middle'\n * when there are outliers that skew the `mean()` value.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * The median isn't necessarily one of the elements in the list: the value\n * can be the average of two elements if the list has an even length\n * and the two central values are different.\n *\n * @param {Array<number>} sorted input\n * @returns {number} median value\n * @example\n * medianSorted([10, 2, 5, 100, 2, 1]); // => 52.5\n */\nfunction medianSorted(sorted) {\n    return quantileSorted(sorted, 0.5);\n}\n\nexport default medianSorted;\n","/**\n * The minimum is the lowest number in the array. With a sorted array,\n * the first element in the array is always the smallest, so this calculation\n * can be done in one step, or constant time.\n *\n * @param {Array<number>} x input\n * @returns {number} minimum value\n * @example\n * minSorted([-100, -10, 1, 2, 5]); // => -100\n */\nfunction minSorted(x) {\n    return x[0];\n}\n\nexport default minSorted;\n","import modeSorted from \"./mode_sorted\";\nimport numericSort from \"./numeric_sort\";\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs in `O(n log(n))` because it needs to sort the array internally\n * before running an `O(n)` search to find the mode.\n *\n * @param {Array<number>} x input\n * @returns {number} mode\n * @example\n * mode([0, 0, 1]); // => 0\n */\nfunction mode(x) {\n    // Sorting the array lets us iterate through it below and be sure\n    // that every time we see a new number it's new and we'll never\n    // see the same number twice\n    return modeSorted(numericSort(x));\n}\n\nexport default mode;\n","/* globals Map: false */\n\n/**\n * The [mode](https://en.wikipedia.org/wiki/Mode_%28statistics%29) is the number\n * that appears in a list the highest number of times.\n * There can be multiple modes in a list: in the event of a tie, this\n * algorithm will return the most recently seen mode.\n *\n * modeFast uses a Map object to keep track of the mode, instead of the approach\n * used with `mode`, a sorted array. As a result, it is faster\n * than `mode` and supports any data type that can be compared with `==`.\n * It also requires a\n * [JavaScript environment with support for Map](https://kangax.github.io/compat-table/es6/#test-Map),\n * and will throw an error if Map is not available.\n *\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * @param {Array<*>} x a sample of one or more data points\n * @returns {?*} mode\n * @throws {ReferenceError} if the JavaScript environment doesn't support Map\n * @throws {Error} if x is empty\n * @example\n * modeFast(['rabbits', 'rabbits', 'squirrels']); // => 'rabbits'\n */\nfunction modeFast(x) {\n    // This index will reflect the incidence of different values, indexing\n    // them like\n    // { value: count }\n    const index = new Map();\n\n    // A running `mode` and the number of times it has been encountered.\n    let mode;\n    let modeCount = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        let newCount = index.get(x[i]);\n        if (newCount === undefined) {\n            newCount = 1;\n        } else {\n            newCount++;\n        }\n        if (newCount > modeCount) {\n            mode = x[i];\n            modeCount = newCount;\n        }\n        index.set(x[i], newCount);\n    }\n\n    if (modeCount === 0) {\n        throw new Error(\"mode requires at last one data point\");\n    }\n\n    return mode;\n}\n\nexport default modeFast;\n","import mean from \"./mean\";\nimport shuffleInPlace from \"./shuffle_in_place\";\n\n/**\n * Conducts a [permutation test](https://en.wikipedia.org/wiki/Resampling_(statistics)#Permutation_tests)\n * to determine if two data sets are *significantly* different from each other, using\n * the difference of means between the groups as the test statistic.\n * The function allows for the following hypotheses:\n * - two_tail = Null hypothesis: the two distributions are equal.\n * - greater = Null hypothesis: observations from sampleX tend to be smaller than those from sampleY.\n * - less = Null hypothesis: observations from sampleX tend to be greater than those from sampleY.\n * [Learn more about one-tail vs two-tail tests.](https://en.wikipedia.org/wiki/One-_and_two-tailed_tests)\n *\n * @param {Array<number>} sampleX first dataset (e.g. treatment data)\n * @param {Array<number>} sampleY second dataset (e.g. control data)\n * @param {string} alternative alternative hypothesis, either 'two_sided' (default), 'greater', or 'less'\n * @param {number} k number of values in permutation distribution.\n * @param {Function} [randomSource=Math.random] an optional entropy source\n * @returns {number} p-value The probability of observing the difference between groups (as or more extreme than what we did), assuming the null hypothesis.\n *\n * @example\n * var control = [2, 5, 3, 6, 7, 2, 5];\n * var treatment = [20, 5, 13, 12, 7, 2, 2];\n * permutationTest(control, treatment); // ~0.1324\n */\nfunction permutationTest(sampleX, sampleY, alternative, k, randomSource) {\n    // Set default arguments\n    if (k === undefined) {\n        k = 10000;\n    }\n    if (alternative === undefined) {\n        alternative = \"two_side\";\n    }\n    if (\n        alternative !== \"two_side\" &&\n        alternative !== \"greater\" &&\n        alternative !== \"less\"\n    ) {\n        throw new Error(\n            \"`alternative` must be either 'two_side', 'greater', or 'less'\"\n        );\n    }\n\n    // get means for each sample\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n\n    // calculate initial test statistic. This will be our point of comparison with\n    // the generated test statistics.\n    const testStatistic = meanX - meanY;\n\n    // create test-statistic distribution\n    const testStatDsn = new Array(k);\n\n    // combine datsets so we can easily shuffle later\n    const allData = sampleX.concat(sampleY);\n    const midIndex = Math.floor(allData.length / 2);\n\n    for (let i = 0; i < k; i++) {\n        // 1. shuffle data assignments\n        shuffleInPlace(allData, randomSource);\n        const permLeft = allData.slice(0, midIndex);\n        const permRight = allData.slice(midIndex, allData.length);\n\n        // 2.re-calculate test statistic\n        const permTestStatistic = mean(permLeft) - mean(permRight);\n\n        // 3. store test statistic to build test statistic distribution\n        testStatDsn[i] = permTestStatistic;\n    }\n\n    // Calculate p-value depending on alternative\n    // For this test, we calculate the percentage of 'extreme' test statistics (subject to our hypothesis)\n    // more info on permutation test p-value calculations: https://onlinecourses.science.psu.edu/stat464/node/35\n    let numExtremeTStats = 0;\n    if (alternative === \"two_side\") {\n        for (let i = 0; i <= k; i++) {\n            if (Math.abs(testStatDsn[i]) >= Math.abs(testStatistic)) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else if (alternative === \"greater\") {\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] >= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    } else {\n        // alternative === 'less'\n        for (let i = 0; i <= k; i++) {\n            if (testStatDsn[i] <= testStatistic) {\n                numExtremeTStats += 1;\n            }\n        }\n    }\n\n    return numExtremeTStats / k;\n}\n\nexport default permutationTest;\n","/**\n * Implementation of [Heap's Algorithm](https://en.wikipedia.org/wiki/Heap%27s_algorithm)\n * for generating permutations.\n *\n * @param {Array} elements any type of data\n * @returns {Array<Array>} array of permutations\n */\nfunction permutationsHeap(elements) {\n    const indexes = new Array(elements.length);\n    const permutations = [elements.slice()];\n\n    for (let i = 0; i < elements.length; i++) {\n        indexes[i] = 0;\n    }\n\n    for (let i = 0; i < elements.length; ) {\n        if (indexes[i] < i) {\n            // At odd indexes, swap from indexes[i] instead\n            // of from the beginning of the array\n            let swapFrom = 0;\n            if (i % 2 !== 0) {\n                swapFrom = indexes[i];\n            }\n\n            // swap between swapFrom and i, using\n            // a temporary variable as storage.\n            const temp = elements[swapFrom];\n            elements[swapFrom] = elements[i];\n            elements[i] = temp;\n\n            permutations.push(elements.slice());\n            indexes[i]++;\n            i = 0;\n        } else {\n            indexes[i] = 0;\n            i++;\n        }\n    }\n\n    return permutations;\n}\n\nexport default permutationsHeap;\n","import epsilon from \"./epsilon\";\n\n/**\n * The [Poisson Distribution](http://en.wikipedia.org/wiki/Poisson_distribution)\n * is a discrete probability distribution that expresses the probability\n * of a given number of events occurring in a fixed interval of time\n * and/or space if these events occur with a known average rate and\n * independently of the time since the last event.\n *\n * The Poisson Distribution is characterized by the strictly positive\n * mean arrival or occurrence rate, `λ`.\n *\n * @param {number} lambda location poisson distribution\n * @returns {number[]} values of poisson distribution at that point\n */\nfunction poissonDistribution(lambda) /*: ?number[] */ {\n    // Check that lambda is strictly positive\n    if (lambda <= 0) {\n        return undefined;\n    }\n\n    // our current place in the distribution\n    let x = 0;\n    // and we keep track of the current cumulative probability, in\n    // order to know when to stop calculating chances.\n    let cumulativeProbability = 0;\n    // the calculated cells to be returned\n    const cells = [];\n    let factorialX = 1;\n\n    // This algorithm iterates through each potential outcome,\n    // until the `cumulativeProbability` is very close to 1, at\n    // which point we've defined the vast majority of outcomes\n    do {\n        // a [probability mass function](https://en.wikipedia.org/wiki/Probability_mass_function)\n        cells[x] = (Math.exp(-lambda) * Math.pow(lambda, x)) / factorialX;\n        cumulativeProbability += cells[x];\n        x++;\n        factorialX *= x;\n        // when the cumulativeProbability is nearly 1, we've calculated\n        // the useful range of this distribution\n    } while (cumulativeProbability < 1 - epsilon);\n\n    return cells;\n}\n\nexport default poissonDistribution;\n","import epsilon from \"./epsilon\";\nimport inverseErrorFunction from \"./inverse_error_function\";\n\n/**\n * The [Probit](http://en.wikipedia.org/wiki/Probit)\n * is the inverse of cumulativeStdNormalProbability(),\n * and is also known as the normal quantile function.\n *\n * It returns the number of standard deviations from the mean\n * where the p'th quantile of values can be found in a normal distribution.\n * So, for example, probit(0.5 + 0.6827/2) ≈ 1 because 68.27% of values are\n * normally found within 1 standard deviation above or below the mean.\n *\n * @param {number} p\n * @returns {number} probit\n */\nfunction probit(p) {\n    if (p === 0) {\n        p = epsilon;\n    } else if (p >= 1) {\n        p = 1 - epsilon;\n    }\n    return Math.sqrt(2) * inverseErrorFunction(2 * p - 1);\n}\n\nexport default probit;\n","/**\n * The [product](https://en.wikipedia.org/wiki/Product_(mathematics)) of an array\n * is the result of multiplying all numbers together, starting using one as the multiplicative identity.\n *\n * This runs in `O(n)`, linear time, with respect to the length of the array.\n *\n * @param {Array<number>} x input\n * @return {number} product of all input numbers\n * @example\n * product([1, 2, 3, 4]); // => 24\n */\nfunction product(x) {\n    let value = 1;\n    for (let i = 0; i < x.length; i++) {\n        value *= x[i];\n    }\n    return value;\n}\n\nexport default product;\n","import numericSort from \"./numeric_sort\";\nimport quantileRankSorted from \"./quantile_rank_sorted\";\n\n/**\n * This function returns the quantile in which one would find the given value in\n * the given array. It will copy and sort your array before each run, so\n * if you know your array is already sorted, you should use `quantileRankSorted`\n * instead.\n *\n * @param {Array<number>} x input\n * @returns {number} value value\n * @example\n * quantileRank([4, 3, 1, 2], 3); // => 0.75\n * quantileRank([4, 3, 2, 3, 1], 3); // => 0.7\n * quantileRank([2, 4, 1, 3], 6); // => 1\n * quantileRank([5, 3, 1, 2, 3], 4); // => 0.8\n */\nfunction quantileRank(x, value) {\n    // Cloning and sorting the array\n    const sortedCopy = numericSort(x);\n\n    return quantileRankSorted(sortedCopy, value);\n}\n\nexport default quantileRank;\n","/**\n * The [R Squared](http://en.wikipedia.org/wiki/Coefficient_of_determination)\n * value of data compared with a function `f`\n * is the sum of the squared differences between the prediction\n * and the actual value.\n *\n * @param {Array<Array<number>>} x input data: this should be doubly-nested\n * @param {Function} func function called on `[i][0]` values within the dataset\n * @returns {number} r-squared value\n * @example\n * var samples = [[0, 0], [1, 1]];\n * var regressionLine = linearRegressionLine(linearRegression(samples));\n * rSquared(samples, regressionLine); // = 1 this line is a perfect fit\n */\nfunction rSquared(x, func) {\n    if (x.length < 2) {\n        return 1;\n    }\n\n    // Compute the average y value for the actual\n    // data set in order to compute the\n    // _total sum of squares_\n    let sum = 0;\n    for (let i = 0; i < x.length; i++) {\n        sum += x[i][1];\n    }\n    const average = sum / x.length;\n\n    // Compute the total sum of squares - the\n    // squared difference between each point\n    // and the average of all points.\n    let sumOfSquares = 0;\n    for (let j = 0; j < x.length; j++) {\n        sumOfSquares += Math.pow(average - x[j][1], 2);\n    }\n\n    // Finally estimate the error: the squared\n    // difference between the estimate and the actual data\n    // value at each point.\n    let err = 0;\n    for (let k = 0; k < x.length; k++) {\n        err += Math.pow(x[k][1] - func(x[k][0]), 2);\n    }\n\n    // As the error grows larger, its ratio to the\n    // sum of squares increases and the r squared\n    // value grows lower.\n    return 1 - err / sumOfSquares;\n}\n\nexport default rSquared;\n","import mean from \"./mean\";\n\n/**\n * [Kurtosis](http://en.wikipedia.org/wiki/Kurtosis) is\n * a measure of the heaviness of a distribution's tails relative to its\n * variance. The kurtosis value can be positive or negative, or even undefined.\n *\n * Implementation is based on Fisher's excess kurtosis definition and uses\n * unbiased moment estimators. This is the version found in Excel and available\n * in several statistical packages, including SAS and SciPy.\n *\n * @param {Array<number>} x a sample of 4 or more data points\n * @returns {number} sample kurtosis\n * @throws {Error} if x has length less than 4\n * @example\n * sampleKurtosis([1, 2, 2, 3, 5]); // => 1.4555765595463122\n */\nfunction sampleKurtosis(x) {\n    const n = x.length;\n\n    if (n < 4) {\n        throw new Error(\"sampleKurtosis requires at least four data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let secondCentralMoment = 0;\n    let fourthCentralMoment = 0;\n\n    for (let i = 0; i < n; i++) {\n        tempValue = x[i] - meanValue;\n        secondCentralMoment += tempValue * tempValue;\n        fourthCentralMoment += tempValue * tempValue * tempValue * tempValue;\n    }\n\n    return (\n        ((n - 1) / ((n - 2) * (n - 3))) *\n        ((n * (n + 1) * fourthCentralMoment) /\n            (secondCentralMoment * secondCentralMoment) -\n            3 * (n - 1))\n    );\n}\n\nexport default sampleKurtosis;\n","import sampleCorrelation from \"./sample_correlation\";\n\n/**\n * The [rank correlation](https://en.wikipedia.org/wiki/Rank_correlation) is\n * a measure of the strength of monotonic relationship between two arrays\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample rank correlation\n */\nfunction sampleRankCorrelation(x, y) {\n    const xIndexes = x\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n    const yIndexes = y\n        .map((value, index) => [value, index])\n        .sort((a, b) => a[0] - b[0])\n        .map((pair) => pair[1]);\n\n    // At this step, we have an array of indexes\n    // that map from sorted numbers to their original indexes. We reverse\n    // that so that it is an array of the sorted destination index.\n    const xRanks = Array(xIndexes.length);\n    const yRanks = Array(xIndexes.length);\n    for (let i = 0; i < xIndexes.length; i++) {\n        xRanks[xIndexes[i]] = i;\n        yRanks[yIndexes[i]] = i;\n    }\n\n    return sampleCorrelation(xRanks, yRanks);\n}\n\nexport default sampleRankCorrelation;\n","import mean from \"./mean\";\n\n/**\n * [Skewness](http://en.wikipedia.org/wiki/Skewness) is\n * a measure of the extent to which a probability distribution of a\n * real-valued random variable \"leans\" to one side of the mean.\n * The skewness value can be positive or negative, or even undefined.\n *\n * Implementation is based on the adjusted Fisher-Pearson standardized\n * moment coefficient, which is the version found in Excel and several\n * statistical packages including Minitab, SAS and SPSS.\n *\n * @since 4.1.0\n * @param {Array<number>} x a sample of 3 or more data points\n * @returns {number} sample skewness\n * @throws {Error} if x has length less than 3\n * @example\n * sampleSkewness([2, 4, 6, 3, 1]); // => 0.590128656384365\n */\nfunction sampleSkewness(x) {\n    if (x.length < 3) {\n        throw new Error(\"sampleSkewness requires at least three data points\");\n    }\n\n    const meanValue = mean(x);\n    let tempValue;\n    let sumSquaredDeviations = 0;\n    let sumCubedDeviations = 0;\n\n    for (let i = 0; i < x.length; i++) {\n        tempValue = x[i] - meanValue;\n        sumSquaredDeviations += tempValue * tempValue;\n        sumCubedDeviations += tempValue * tempValue * tempValue;\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    const besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    const theSampleStandardDeviation = Math.sqrt(\n        sumSquaredDeviations / besselsCorrection\n    );\n\n    const n = x.length;\n    const cubedS = Math.pow(theSampleStandardDeviation, 3);\n\n    return (n * sumCubedDeviations) / ((n - 1) * (n - 2) * cubedS);\n}\n\nexport default sampleSkewness;\n","/**\n * Sampling with replacement is a type of sampling that allows the same\n * item to be picked out of a population more than once.\n *\n * @param {Array<*>} x an array of any kind of value\n * @param {number} n count of how many elements to take\n * @param {Function} [randomSource=Math.random] an optional entropy source that\n * returns numbers between 0 inclusive and 1 exclusive: the range [0, 1)\n * @return {Array} n sampled items from the population\n * @example\n * var values = [1, 2, 3, 4];\n * sampleWithReplacement(values, 2); // returns 2 random values, like [2, 4];\n */\nfunction sampleWithReplacement(x, n, randomSource) {\n    if (x.length === 0) {\n        return [];\n    }\n\n    // a custom random number source can be provided if you want to use\n    // a fixed seed or another random number generator, like\n    // [random-js](https://www.npmjs.org/package/random-js)\n    randomSource = randomSource || Math.random;\n\n    const length = x.length;\n    const sample = [];\n\n    for (let i = 0; i < n; i++) {\n        const index = Math.floor(randomSource() * length);\n\n        sample.push(x[index]);\n    }\n\n    return sample;\n}\n\nexport default sampleWithReplacement;\n","import max from \"./max\";\nimport silhouette from \"./silhouette\";\n\n/**\n * Calculate the [silhouette metric](https://en.wikipedia.org/wiki/Silhouette_(clustering))\n * for a set of N-dimensional points arranged in groups. The metric is the largest\n * individual silhouette value for the data.\n *\n * @param {Array<Array<number>>} points N-dimensional coordinates of points.\n * @param {Array<number>} labels Labels of points. This must be the same length as `points`,\n * and values must lie in [0..G-1], where G is the number of groups.\n * @return {number} The silhouette metric for the groupings.\n *\n * @example\n * silhouetteMetric([[0.25], [0.75]], [0, 0]); // => 1.0\n */\nfunction silhouetteMetric(points, labels) {\n    const values = silhouette(points, labels);\n    return max(values);\n}\n\nexport default silhouetteMetric;\n","/**\n * When removing a value from a list, one does not have to necessary\n * recompute the mean of the list in linear time. They can instead use\n * this function to compute the new mean by providing the current mean,\n * the number of elements in the list that produced it and the value to remove.\n *\n * @since 3.0.0\n * @param {number} mean current mean\n * @param {number} n number of items in the list\n * @param {number} value the value to remove\n * @returns {number} the new mean\n *\n * @example\n * subtractFromMean(20.5, 6, 53); // => 14\n */\nfunction subtractFromMean(mean, n, value) {\n    return (mean * n - value) / (n - 1);\n}\n\nexport default subtractFromMean;\n","import mean from \"./mean\";\nimport standardDeviation from \"./standard_deviation\";\n\n/**\n * This is to compute [a one-sample t-test](https://en.wikipedia.org/wiki/Student%27s_t-test#One-sample_t-test), comparing the mean\n * of a sample to a known value, x.\n *\n * in this case, we're trying to determine whether the\n * population mean is equal to the value that we know, which is `x`\n * here. Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} expectedValue expected value of the population mean\n * @returns {number} value\n * @example\n * tTest([1, 2, 3, 4, 5, 6], 3.385).toFixed(2); // => '0.16'\n */\nfunction tTest(x, expectedValue) {\n    // The mean of the sample\n    const sampleMean = mean(x);\n\n    // The standard deviation of the sample\n    const sd = standardDeviation(x);\n\n    // Square root the length of the sample\n    const rootN = Math.sqrt(x.length);\n\n    // returning the t value\n    return (sampleMean - expectedValue) / (sd / rootN);\n}\n\nexport default tTest;\n","import mean from \"./mean\";\nimport sampleVariance from \"./sample_variance\";\n\n/**\n * This is to compute [two sample t-test](http://en.wikipedia.org/wiki/Student's_t-test).\n * Tests whether \"mean(X)-mean(Y) = difference\", (\n * in the most common case, we often have `difference == 0` to test if two samples\n * are likely to be taken from populations with the same mean value) with\n * no prior knowledge on standard deviations of both samples\n * other than the fact that they have the same standard deviation.\n *\n * Usually the results here are used to look up a\n * [p-value](http://en.wikipedia.org/wiki/P-value), which, for\n * a certain level of significance, will let you determine that the\n * null hypothesis can or cannot be rejected.\n *\n * `diff` can be omitted if it equals 0.\n *\n * [This is used to reject](https://en.wikipedia.org/wiki/Exclusion_of_the_null_hypothesis)\n * a null hypothesis that the two populations that have been sampled into\n * `sampleX` and `sampleY` are equal to each other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @param {number} [difference=0]\n * @returns {number|null} test result\n *\n * @example\n * tTestTwoSample([1, 2, 3, 4], [3, 4, 5, 6], 0); // => -2.1908902300206643\n */\nfunction tTestTwoSample(sampleX, sampleY, difference) {\n    const n = sampleX.length;\n    const m = sampleY.length;\n\n    // If either sample doesn't actually have any values, we can't\n    // compute this at all, so we return `null`.\n    if (!n || !m) {\n        return null;\n    }\n\n    // default difference (mu) is zero\n    if (!difference) {\n        difference = 0;\n    }\n\n    const meanX = mean(sampleX);\n    const meanY = mean(sampleY);\n    const sampleVarianceX = sampleVariance(sampleX);\n    const sampleVarianceY = sampleVariance(sampleY);\n\n    if (\n        typeof meanX === \"number\" &&\n        typeof meanY === \"number\" &&\n        typeof sampleVarianceX === \"number\" &&\n        typeof sampleVarianceY === \"number\"\n    ) {\n        const weightedVariance =\n            ((n - 1) * sampleVarianceX + (m - 1) * sampleVarianceY) /\n            (n + m - 2);\n\n        return (\n            (meanX - meanY - difference) /\n            Math.sqrt(weightedVariance * (1 / n + 1 / m))\n        );\n    }\n}\n\nexport default tTestTwoSample;\n","/**\n * This function calculates the Wilcoxon rank sum statistic for the first sample\n * with respect to the second. The Wilcoxon rank sum test is a non-parametric\n * alternative to the t-test which is equivalent to the\n * [Mann-Whitney U test](https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U_test).\n * The statistic is calculated by pooling all the observations together, ranking them,\n * and then summing the ranks associated with one of the samples. If this rank sum is\n * sufficiently large or small we reject the hypothesis that the two samples come\n * from the same distribution in favor of the alternative that one is shifted with\n * respect to the other.\n *\n * @param {Array<number>} sampleX a sample as an array of numbers\n * @param {Array<number>} sampleY a sample as an array of numbers\n * @returns {number} rank sum for sampleX\n *\n * @example\n * wilcoxonRankSum([1, 4, 8], [9, 12, 15]); // => 6\n */\nfunction wilcoxonRankSum(sampleX, sampleY) {\n    if (!sampleX.length || !sampleY.length) {\n        throw new Error(\"Neither sample can be empty\");\n    }\n\n    const pooledSamples = sampleX\n        .map((x) => ({ label: \"x\", value: x }))\n        .concat(sampleY.map((y) => ({ label: \"y\", value: y })))\n        .sort((a, b) => a.value - b.value);\n\n    for (let rank = 0; rank < pooledSamples.length; rank++) {\n        pooledSamples[rank].rank = rank;\n    }\n\n    let tiedRanks = [pooledSamples[0].rank];\n    for (let i = 1; i < pooledSamples.length; i++) {\n        if (pooledSamples[i].value === pooledSamples[i - 1].value) {\n            tiedRanks.push(pooledSamples[i].rank);\n            if (i === pooledSamples.length - 1) {\n                replaceRanksInPlace(pooledSamples, tiedRanks);\n            }\n        } else if (tiedRanks.length > 1) {\n            replaceRanksInPlace(pooledSamples, tiedRanks);\n        } else {\n            tiedRanks = [pooledSamples[i].rank];\n        }\n    }\n\n    function replaceRanksInPlace(pooledSamples, tiedRanks) {\n        const average = (tiedRanks[0] + tiedRanks[tiedRanks.length - 1]) / 2;\n        for (let i = 0; i < tiedRanks.length; i++) {\n            pooledSamples[tiedRanks[i]].rank = average;\n        }\n    }\n\n    let rankSum = 0;\n\n    for (let i = 0; i < pooledSamples.length; i++) {\n        const sample = pooledSamples[i];\n        if (sample.label === \"x\") {\n            rankSum += sample.rank + 1;\n        }\n    }\n\n    return rankSum;\n}\n\nexport default wilcoxonRankSum;\n","/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x, mean, standardDeviation) {\n    return (x - mean) / standardDeviation;\n}\n\nexport default zScore;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","/**\n * todo reservoir sampling is better to support stream data\n * Algorithm R:\n * Vitter, Jeffrey S. (1 March 1985). \"Random sampling with a reservoir\" (PDF). ACM Transactions on Mathematical Software. 11 (1): 37–57. CiteSeerX 10.1.1.138.784. doi:10.1145/3147.3165.\n */\nexport function reservoirSampling(dataSource, size = 500) {\n    if (dataSource.length <= size)\n        return dataSource;\n    let sampleSpace = dataSource.slice(0, size);\n    let len = dataSource.length;\n    for (let i = size + 1; i < len; i++) {\n        let pos = Math.round(Math.random() * i);\n        if (pos < size) {\n            sampleSpace[pos] = dataSource[i];\n        }\n    }\n    return sampleSpace;\n}\nfunction linearCongruentialGenerator(size, seed) {\n    if (size === 0)\n        return [];\n    const m = 2147483647;\n    const a = 1103515245;\n    const c = 12345;\n    let ans = [seed];\n    for (let i = 1; i < size; i++) {\n        ans.push(((ans[i - 1] * a + c) % m));\n    }\n    return ans.map(v => v / m);\n}\nexport function uniformSampling(dataSource, size) {\n    let sampleIndexes = linearCongruentialGenerator(size, Math.random() * 2147483647);\n    let ans = [];\n    for (let i = 0; i < size; i++) {\n        let index = Math.floor(sampleIndexes[i] * size) % size;\n        ans.push(dataSource[index]);\n    }\n    return ans;\n}\n","import * as Utils from './utils/index';\nimport specification from './specification';\nimport * as Distribution from './distribution';\nimport * as Insight from './insights/index';\nimport * as Cleaner from './cleaner/index';\nimport * as UnivariateSummary from './univariateSummary/index';\nimport * as DashBoard from './dashboard/index';\nimport * as Sampling from './sampling/index';\nimport * as Statistics from './statistics/index';\nimport * as Computation from './computation';\nimport { Cluster, Outier, Classification } from './ml/index';\nexport * from './commonTypes';\nexport * from './insights/InsightFlow/interfaces';\nexport { DashBoard, Sampling, Utils, Statistics, UnivariateSummary, Distribution, specification, Cleaner, Insight, Cluster, Outier, Classification, Computation };\nconsole.log('This is a test version of visual-insights');\n","class Base {\n    constructor(props) {\n        const { dataSource, dimensions, measures } = props;\n        this.dataSource = dataSource;\n        this.dimensions = dimensions;\n        this.measures = measures;\n    }\n    normalize() {\n        this.normalizedDataSource = [];\n        this.valueSets = [];\n        this.valueParser = [];\n        this.ranges = [];\n        this.dimensions.forEach(dim => {\n            this.valueSets.push(new Map());\n            this.valueParser.push([]);\n        });\n        this.measures.forEach(() => {\n            this.ranges.push([Infinity, -Infinity]);\n        });\n        this.dataSource.forEach(record => {\n            this.dimensions.forEach((dim, index) => {\n                let value = (record[dim] || 'others').toString();\n                if (!this.valueSets[index].has(value)) {\n                    this.valueSets[index].set(value, this.valueSets[index].size);\n                    this.valueParser[index].push(value);\n                }\n            });\n            this.measures.forEach((mea, index) => {\n                let value = record[mea];\n                if (typeof value === 'number') {\n                    this.ranges[index][0] = Math.min(this.ranges[index][0], value);\n                    this.ranges[index][1] = Math.max(this.ranges[index][1], value);\n                }\n            });\n        });\n        this.dataSource.forEach(record => {\n            let normalizedRecord = this.normalizeRecord(record);\n            this.normalizedDataSource.push(normalizedRecord);\n        });\n        return this.normalizedDataSource;\n    }\n    normalizeRecord(record) {\n        let normalizedRecord = {};\n        this.measures.forEach((mea, index) => {\n            normalizedRecord[mea] = (record[mea] - this.ranges[index][0]) / (this.ranges[index][1] - this.ranges[index][0]);\n        });\n        this.dimensions.forEach((dim, index) => {\n            let value = (record[dim] || 'others').toString();\n            normalizedRecord[dim] = this.valueSets[index].get(value);\n        });\n        return normalizedRecord;\n    }\n}\nexport class KNN extends Base {\n    constructor(props) {\n        super(props);\n        const { K } = props;\n        this.K = K;\n        this.normalize();\n    }\n    getNeighbors(targetRecord, features, weights = []) {\n        if (weights.length !== features.length) {\n            features.forEach(f => {\n                weights.push(1);\n            });\n        }\n        // let normalizedRecord = this.normalizeRecord(targetRecord);\n        let dimFeatures = [];\n        let meaFeatures = [];\n        let dimWeights = [];\n        let meaWeights = [];\n        let dimSets = new Set(this.dimensions);\n        for (let i = 0; i < features.length; i++) {\n            if (dimSets.has(features[i])) {\n                dimFeatures.push(features[i]);\n                dimWeights.push(weights[i]);\n            }\n            else {\n                meaFeatures.push(features[i]);\n                meaWeights.push(weights[i]);\n            }\n        }\n        // let legalFeatures = features.filter(f => this.measures.includes(f));\n        let distances = [];\n        this.normalizedDataSource.forEach((record, rIndex) => {\n            let dis = 0;\n            meaFeatures.forEach((feature, index) => {\n                dis += ((record[feature] - targetRecord[feature]) * meaWeights[index]) ** 2;\n            });\n            dimFeatures.forEach((feature, index) => {\n                if (record[feature] !== targetRecord[feature]) {\n                    dis += dimWeights[index] ** 2;\n                }\n            });\n            distances.push({\n                dis,\n                index: rIndex\n            });\n        });\n        distances.sort((a, b) => {\n            return a.dis - b.dis;\n        });\n        let ans = [];\n        let len = Math.min(this.K, distances.length);\n        for (let i = 0; i < len; i++) {\n            ans.push(this.normalizedDataSource[distances[i].index]);\n        }\n        return ans;\n    }\n    getTargetValue(targets, neighbors) {\n        let ans = [];\n        targets.forEach(tar => {\n            let votes = new Map();\n            neighbors.forEach(nei => {\n                if (!votes.has(nei[tar])) {\n                    votes.set(nei[tar], 0);\n                }\n                votes.set(nei[tar], votes.get(nei[tar]) + 1);\n            });\n            let mostCount = 0;\n            let mostFeature = 0;\n            for (let vote of votes) {\n                if (vote[1] > mostCount) {\n                    mostCount = vote[1];\n                    mostFeature = vote[0];\n                }\n            }\n            let dimIndex = this.dimensions.indexOf(tar);\n            if (dimIndex > -1) {\n                ans.push(this.valueParser[dimIndex][mostFeature]);\n            }\n            else {\n                ans.push(mostFeature);\n            }\n        });\n        return ans;\n    }\n}\n","import { KNN } from \"../../ml/classification/knn\";\nexport class GroupIntention extends KNN {\n    getTargetValuePercent(targets, targetRecord, neighbors) {\n        let ans = [];\n        targets.forEach((target, index) => {\n            let sameCount = 0;\n            neighbors.forEach(nei => {\n                if (nei[target] === targetRecord[target]) {\n                    sameCount++;\n                }\n            });\n            ans.push(sameCount / neighbors.length);\n        });\n        return ans;\n    }\n    getSignificance(features, targets) {\n        let ans = 0;\n        this.normalizedDataSource.forEach(record => {\n            let neighbors = this.getNeighbors(record, features);\n            let percents = this.getTargetValuePercent(targets, record, neighbors);\n            let sig = 0;\n            percents.forEach(per => {\n                sig += per;\n            });\n            sig /= percents.length;\n            ans += sig;\n        });\n        ans /= this.normalizedDataSource.length;\n        return ans;\n    }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},D=\"en\",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if(\"string\"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].substr(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));","module.exports = require('./lib/axios');","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sum_unsafe = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_1 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += subset[i][mea];\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_1(i, len);\n    }\n    return sums;\n};\nexports.sum = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_2 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_2(i, len);\n    }\n    return sums;\n};\nexports.count = function (subset, MEASURES) {\n    var cnts = {};\n    MEASURES.forEach(function (mea) {\n        cnts[mea] = 0;\n    });\n    for (var i = 0, len = subset.length; i < len; i++) {\n        MEASURES.forEach(function (mea) {\n            cnts[mea]++;\n        });\n    }\n    return cnts;\n};\nexports.mean = function (subset, measures) {\n    var sums = {};\n    measures.forEach(function (mea) {\n        sums[mea] = 0;\n    });\n    var _loop_3 = function (i, len) {\n        measures.forEach(function (mea) {\n            sums[mea] += Number(subset[i][mea]) || 0;\n        });\n    };\n    for (var i = 0, len = subset.length; i < len; i++) {\n        _loop_3(i, len);\n    }\n    measures.forEach(function (mea) {\n        sums[mea] /= subset.length;\n    });\n    return sums;\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","module.exports = {\n  \"version\": \"0.22.0\"\n};","import { crammersV, getCombination, pearsonCC } from '../statistics/index';\nimport { CrammersVThreshold, PearsonCorrelation } from './config';\nimport { Cluster } from '../ml/index';\nimport { CHANNEL } from '../constant';\n// insights like outlier and trend both request high impurity of dimension.\nexport function getDimCorrelationMatrix(dataSource, dimensions) {\n    let matrix = dimensions.map(d => dimensions.map(d => 0));\n    for (let i = 0; i < dimensions.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < dimensions.length; j++) {\n            matrix[i][j] = matrix[j][i] = crammersV(dataSource, dimensions[i], dimensions[j]);\n        }\n    }\n    return matrix;\n}\nexport function getMeaCorrelationMatrix(dataSource, measures) {\n    let matrix = measures.map(i => measures.map(j => 0));\n    for (let i = 0; i < measures.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < measures.length; j++) {\n            let r = pearsonCC(dataSource, measures[i], measures[j]);\n            matrix[j][i] = matrix[i][j] = r;\n        }\n    }\n    return matrix;\n}\nexport function getDimClusterGroups(dataSource, dimensions, threshold = CrammersVThreshold, max_number_of_group) {\n    const maxDimNumberInView = 4;\n    let dimCorrelationMatrix = getDimCorrelationMatrix(dataSource, dimensions);\n    // groupMaxSize here means group number.\n    let groups = Cluster.kruskal({\n        matrix: dimCorrelationMatrix,\n        measures: dimensions,\n        groupMaxSize: max_number_of_group ? max_number_of_group : Math.round(dimensions.length / maxDimNumberInView),\n        threshold,\n    });\n    return groups;\n}\nexport function getDimSetsBasedOnClusterGroups(dataSource, dimensions, correlation_threshold, max_dimensions_in_space) {\n    let dimSets = [];\n    let groups = getDimClusterGroups(dataSource, dimensions, correlation_threshold);\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, max_dimensions_in_space ? max_dimensions_in_space : CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\n/**\n *\n * @param dataSource\n * @param measures\n * @param correlation_threshold a threshold of correlation used to define min correlation value in a cluster of measure.\n * @param max_measure_in_view\n */\nexport function getMeaSetsBasedOnClusterGroups(dataSource, measures, correlation_threshold, max_number_of_group = 3) {\n    const soft_max_measures_in_view = 3;\n    let correlationMatrix = getMeaCorrelationMatrix(dataSource, measures);\n    let groups = Cluster.kruskal({\n        matrix: correlationMatrix,\n        measures: measures,\n        groupMaxSize: max_number_of_group ? max_number_of_group : Math.round(measures.length / soft_max_measures_in_view),\n        threshold: correlation_threshold ? correlation_threshold : PearsonCorrelation.strong\n    });\n    return groups;\n}\nexport function subspaceSearching(dataSource, dimensions, should_dimensions_correlated = true) {\n    if (should_dimensions_correlated) {\n        return getDimSetsBasedOnClusterGroups(dataSource, dimensions);\n    }\n    else {\n        return getCombination(dimensions);\n    }\n}\nexport function getRelatedVertices(adjMatrix, vertices, verticesInGraph, topK) {\n    let verStatus = vertices.map(v => verticesInGraph.includes(v));\n    let edges = [];\n    let ans = [];\n    for (let i = 0; i < adjMatrix.length; i++) {\n        // if vertex in graph, then check all the edges from this vertex\n        if (verStatus[i]) {\n            for (let j = 0; j < adjMatrix[i].length; j++) {\n                if (!verStatus[j]) {\n                    edges.push([adjMatrix[i][j], [i, j]]);\n                }\n            }\n        }\n    }\n    edges.sort((a, b) => {\n        return b[0] - a[0];\n    });\n    for (let i = 0; i < edges.length; i++) {\n        let targetVertexIndex = edges[i][1][1];\n        if (!verStatus[targetVertexIndex]) {\n            verStatus[targetVertexIndex] = true;\n            ans.push({\n                field: vertices[targetVertexIndex],\n                corValue: edges[i][0]\n            });\n        }\n    }\n    return ans.slice(0, topK ? topK : ans.length);\n}\n","// import { aggregate } from '../utils';\nimport aggregate from 'cube-core';\nimport { entropy, normalize } from '../statistics/index';\nimport { crammersV, getCombination, pearsonCC, mapPositive } from '../statistics/index';\nimport { CrammersVThreshold } from './config';\nimport { Cluster } from '../ml/index';\nimport { CHANNEL } from '../constant';\n// insights like outlier and trend both request high impurity of dimension.\nfunction getDimCorrelationMatrix(dataSource, dimensions) {\n    let matrix = dimensions.map(d => dimensions.map(d => 0));\n    for (let i = 0; i < dimensions.length; i++) {\n        matrix[i][i] = 1;\n        for (let j = i + 1; j < dimensions.length; j++) {\n            matrix[i][j] = matrix[j][i] = crammersV(dataSource, dimensions[i], dimensions[j]);\n        }\n    }\n    return matrix;\n}\nexport function getDimSetsBasedOnClusterGroups(dataSource, dimensions) {\n    const maxDimNumberInView = 4;\n    let dimSets = [];\n    let dimCorrelationMatrix = getDimCorrelationMatrix(dataSource, dimensions);\n    // groupMaxSize here means group number.\n    let groups = Cluster.kruskal({\n        matrix: dimCorrelationMatrix,\n        measures: dimensions,\n        groupMaxSize: Math.round(dimensions.length / maxDimNumberInView),\n        threshold: CrammersVThreshold\n    });\n    // todo: maybe a threhold would be better ?\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nexport function subspaceSearching(dataSource, dimensions, shouldDimensionsCorrelated = true) {\n    if (shouldDimensionsCorrelated) {\n        return getDimSetsBasedOnClusterGroups(dataSource, dimensions);\n    }\n    else {\n        return getCombination(dimensions);\n    }\n}\nexport function insightExtraction(dataSource, dimensions, measures, operator = 'sum') {\n    let impurityList = [];\n    let dimSet = subspaceSearching(dataSource, dimensions, true);\n    for (let dset of dimSet) {\n        let impurity = {};\n        let aggData = aggregate({\n            dataSource,\n            dimensions: dset,\n            measures,\n            asFields: measures,\n            operator: operator || 'sum' //: operator as \n        });\n        // let fList = aggData.map(r => r)\n        for (let mea of measures) {\n            // fl = frequency list, pL = probability list\n            let fL = aggData.map(r => r[mea]);\n            let pL = normalize(mapPositive(fL));\n            let value = entropy(pL);\n            impurity[mea] = value;\n        }\n        let correlationMatrix = measures.map(i => measures.map(j => 0));\n        for (let i = 0; i < measures.length; i++) {\n            correlationMatrix[i][i] = 1;\n            for (let j = i + 1; j < measures.length; j++) {\n                let r = pearsonCC(aggData, measures[i], measures[j]);\n                correlationMatrix[j][i] = correlationMatrix[i][j] = r;\n            }\n        }\n        impurityList.push([dset, impurity, correlationMatrix]);\n    }\n    return impurityList;\n}\n// interface InsightSpace {\n//   dimensions: string[];\n//   type: 'entropy' | 'trend' | 'outlier';\n//   order: 'desc' | 'asc';\n//   score: {\n//     [meaName: string]: number;\n//   };\n//   correlationMatrix: number[][];\n// }\n// export function multiInsightExtraction(dataSource: DataSource, dimensions: string[], measures: string[]): InsightSpace[] {\n//   let impurityList: FieldsFeature[] = [];\n//   let dimSet = subspaceSearching(dataSource, dimensions, true);\n//   let correlationMatrix = measures.map(i => measures.map(j => 0));\n//   for (let i = 0; i < measures.length; i++) {\n//     correlationMatrix[i][i] = 1;\n//     for (let j = i + 1; j < measures.length; j++) {\n//       let r = pearsonCC(dataSource, measures[i], measures[j]);\n//       correlationMatrix[j][i] = correlationMatrix[i][j] = r;\n//     }\n//   }\n//   for (let dset of dimSet) {\n//     let impurity = {};\n//     let trend = {};\n//     let outlier = {};\n//     let aggData = aggregate({\n//       dataSource,\n//       dimensions: dset,\n//       measures,\n//       asFields: measures,\n//       operator: operator || 'sum'//: operator as \n//     });\n//     // let fList = aggData.map(r => r)\n//     for (let mea of measures) {\n//       // fl = frequency list, pL = probability list\n//       let fL = aggData.map(r => r[mea]);\n//       let pL = normalize(linearMapPositive(fL));\n//       let value = entropy(pL);\n//       impurity[mea] = value;\n//     }\n//     for (let mea of measures) {\n//     }\n//     impurityList.push([dset, impurity, correlationMatrix]);\n//   }\n//   return impurityList\n// }\n","import { getMeaSetsBasedOnClusterGroups, getDimClusterGroups } from './subspaces';\nimport { CrammersVThreshold, PearsonCorrelation } from './config';\nimport { Outier } from '../ml/index';\nimport { getCombination, mapPositive } from '../statistics/index';\nimport { CHANNEL } from '../constant';\nimport { entropy, normalize } from '../statistics/index';\nimport aggregate from 'cube-core';\nimport { oneDLinearRegression } from '../statistics/index';\nimport { GroupIntention } from \"./intention/groups\";\nconst SPLITER = '=;=';\nfunction crossGroups(dimensionGroups, measureGroups) {\n    let viewSpaces = [];\n    for (let dimensions of dimensionGroups) {\n        for (let measures of measureGroups) {\n            viewSpaces.push({\n                dimensions,\n                measures\n            });\n        }\n    }\n    return viewSpaces;\n}\nfunction getDimSetsFromClusterGroups(groups) {\n    let dimSets = [];\n    for (let group of groups) {\n        let combineDimSet = getCombination(group, 1, CHANNEL.maxDimensionNumber);\n        dimSets.push(...combineDimSet);\n    }\n    return dimSets;\n}\nfunction getCombinationFromClusterGroups(groups, limitSize = CHANNEL.maxDimensionNumber) {\n    let fieldSets = [];\n    for (let group of groups) {\n        let combineFieldSet = getCombination(group, 1, limitSize);\n        fieldSets.push(...combineFieldSet);\n    }\n    return fieldSets;\n}\nexport const getGeneralIntentionSpace = async function (aggData, dimensions, measures) {\n    let score = 0;\n    let significance = 0;\n    for (let mea of measures) {\n        let fL = aggData.map(r => r[mea]);\n        let pL = normalize(mapPositive(fL));\n        let value = entropy(pL);\n        score += value;\n        significance += value / Math.log2(fL.length);\n    }\n    score /= measures.length;\n    significance /= measures.length;\n    significance = 1 - significance;\n    return {\n        dimensions,\n        measures,\n        type: 'default_general',\n        score,\n        impurity: score,\n        significance,\n        order: 'asc'\n    };\n};\nexport const getOutlierIntentionSpace = async function getOutlierIntentionSpace(aggData, dimensions, measures) {\n    let iForest = new Outier.IsolationForest([], measures, aggData);\n    iForest.buildIsolationForest();\n    let scoreList = iForest.estimateOutierScore();\n    let maxIndex = 0;\n    let score = 0;\n    for (let i = 0; i < scoreList.length; i++) {\n        if (scoreList[i] > score) {\n            score = scoreList[i];\n            maxIndex = i;\n        }\n    }\n    let des = {};\n    dimensions.concat(measures).forEach(mea => { des[mea] = aggData[maxIndex][mea]; });\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc',\n        description: des\n    };\n};\nexport const getTrendIntentionSpace = async function (aggData, dimensions, measures) {\n    if (dimensions.length !== 1)\n        return null;\n    let orderedData = [...aggData];\n    orderedData.sort((a, b) => {\n        if (a[dimensions[0]] > b[dimensions[0]])\n            return 1;\n        if (a[dimensions[0]] === b[dimensions[0]])\n            return 0;\n        if (a[dimensions[0]] < b[dimensions[0]])\n            return -1;\n    });\n    let score = 0;\n    for (let mea of measures) {\n        let linearModel = new oneDLinearRegression(orderedData, dimensions[0], mea);\n        linearModel.normalizeDimensions(dimensions);\n        score += linearModel.significance();\n    }\n    score /= measures.length;\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc'\n    };\n};\nexport const getGroupIntentionSpace = async function (aggData, dimensions, measures) {\n    if (dimensions.length < 2)\n        return null;\n    let score = 0;\n    let groupIntention = new GroupIntention({\n        dataSource: aggData,\n        dimensions,\n        measures,\n        K: 8\n    });\n    score = groupIntention.getSignificance(measures.concat(dimensions.slice(0, -1)), dimensions.slice(-1));\n    return {\n        dimensions,\n        measures,\n        score,\n        significance: score,\n        order: 'desc'\n    };\n};\n// export const IntentionWorkerCollection: Map<string, IntentionWorker> = new Map();\nexport var DefaultIWorker;\n(function (DefaultIWorker) {\n    DefaultIWorker[\"outlier\"] = \"default_outlier\";\n    DefaultIWorker[\"cluster\"] = \"default_group\";\n    DefaultIWorker[\"trend\"] = \"default_trend\";\n})(DefaultIWorker || (DefaultIWorker = {}));\nexport class IntentionWorkerCollection {\n    constructor() {\n        this.workers = new Map();\n    }\n    register(name, iWorker) {\n        if (this.workers.has(name)) {\n            throw new Error(`There has been a worker named: ${name} already.`);\n        }\n        else {\n            this.workers.set(name, [true, iWorker]);\n        }\n    }\n    enable(name, status) {\n        if (!this.workers.has(name)) {\n            throw new Error(`Intention Worker \"${name}\" does not exist.`);\n        }\n        else {\n            let iWorkerWithStatus = this.workers.get(name);\n            iWorkerWithStatus[0] = status;\n            this.workers.set(name, iWorkerWithStatus);\n        }\n    }\n    each(func) {\n        for (let [name, iWorker] of this.workers) {\n            if (iWorker[0]) {\n                func(iWorker[1], name);\n            }\n        }\n    }\n    static init(props = { withDefaultIWorkers: true }) {\n        const { withDefaultIWorkers = true } = props;\n        if (!IntentionWorkerCollection.colletion) {\n            IntentionWorkerCollection.colletion = new IntentionWorkerCollection();\n            if (withDefaultIWorkers) {\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.outlier, getOutlierIntentionSpace);\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.cluster, getGroupIntentionSpace);\n                IntentionWorkerCollection.colletion.register(DefaultIWorker.trend, getTrendIntentionSpace);\n            }\n        }\n        for (let key in DefaultIWorker) {\n            IntentionWorkerCollection.colletion.enable(DefaultIWorker[key], withDefaultIWorkers);\n        }\n        return IntentionWorkerCollection.colletion;\n    }\n}\nexport async function getIntentionSpaces(cubePool, viewSpaces, Collection) {\n    let ansSpace = [];\n    for (let space of viewSpaces) {\n        const { dimensions, measures } = space;\n        let key = dimensions.join(SPLITER);\n        if (cubePool.has(key)) {\n            let aggData = cubePool.get(key);\n            let generalSpace = await getGeneralIntentionSpace(aggData, dimensions, measures);\n            Collection.each(async (iWorker, name) => {\n                try {\n                    let iSpace = await iWorker(aggData, dimensions, measures);\n                    if (iSpace !== null) {\n                        iSpace.type = name;\n                        iSpace.impurity = generalSpace.impurity;\n                        ansSpace.push(iSpace);\n                    }\n                }\n                catch (error) {\n                    console.error('worker failed', { dimensions, measures, aggData }, error);\n                }\n            });\n        }\n    }\n    return ansSpace;\n}\nexport async function getVisSpaces(props) {\n    const { dataSource, dimensions, measures, collection, dimension_correlation_threshold = CrammersVThreshold, measure_correlation_threshold = PearsonCorrelation.strong, max_dimension_num_in_view = 3, max_measure_num_in_view = 3, } = props;\n    // 1. get dimension cluster groups.\n    // 2. get measure cluster groups.\n    // 3. get dimension groups * measure groups = subspaces + aggregate\n    // 4. calculate each subspace intention score (entropy, outlier, trend for temporal & oridinal field)\n    // 5. filter each intend subspaces with threadshold\n    // 6.manage those spaces / order them.\n    let visableDimensions = dimensions; //.filter(dim => !isFieldUnique(dataSource, dim));\n    let dimensionGroups = getDimClusterGroups(dataSource, visableDimensions, dimension_correlation_threshold);\n    // let dimensionSets = getDimSetsFromClusterGroups(dimensionGroups);\n    let dimensionSets = getCombinationFromClusterGroups(dimensionGroups, max_dimension_num_in_view);\n    let measureGroups = getMeaSetsBasedOnClusterGroups(dataSource, measures, measure_correlation_threshold);\n    let measureSets = getCombinationFromClusterGroups(measureGroups, max_measure_num_in_view);\n    let viewSpaces = crossGroups(dimensionSets, measureSets);\n    let cubePool = new Map();\n    // for (let group of dimensionGroups) {\n    // todo: similar cuboids computation using cube-core\n    let t0 = new Date().getTime();\n    for (let group of dimensionSets) {\n        let key = group.join(SPLITER);\n        let aggData = aggregate({\n            dataSource,\n            dimensions: group,\n            measures,\n            asFields: measures,\n            operator: 'sum'\n        });\n        cubePool.set(key, aggData);\n    }\n    let t1 = new Date().getTime();\n    console.log('cube cost', t1 - t0);\n    cubePool.set('*', dataSource);\n    const usedCollection = collection || IntentionWorkerCollection.init();\n    ;\n    // usedCollection.enable(DefaultIWorker.cluster, false);\n    let ansSpace = await getIntentionSpaces(cubePool, viewSpaces, usedCollection);\n    return ansSpace;\n}\n","import { getFieldEntropy, getFieldType, getFloatFieldEntropy } from '../../univariateSummary';\nimport { BIN_NUM_FOR_ANALYTIC } from '../../constant';\nconst TESTS = {\n    boolean(x) {\n        return x === 'true' || x === 'false' || x === true || x === false;\n    },\n    integer(x) {\n        return TESTS.number(x) && (x = +x) === ~~x;\n    },\n    number(x) {\n        return !isNaN(+x);\n    },\n    date(x) {\n        return !isNaN(Date.parse(x));\n    },\n};\nfunction isValid(obj) {\n    return obj != null && obj === obj;\n}\nexport function inferDataType(values) {\n    // types to test for, in precedence order\n    const types = ['boolean', 'integer', 'number', 'date'];\n    for (let value of values) {\n        // test value against remaining types\n        for (let j = 0; j < types.length; ++j) {\n            if (isValid(value) && !TESTS[types[j]](value)) {\n                types.splice(j, 1);\n                j -= 1;\n            }\n        }\n        // if no types left, return 'string'\n        if (types.length === 0)\n            return 'string';\n    }\n    return types[0];\n}\n// 实现约束：必须保证fieldKeys与fields的顺序相同。engine依赖了这样的顺序，否则会产生逻辑错误。\nexport function getFieldsSummary(fieldKeys, dataSource) {\n    const fields = [];\n    const dictonary = new Map();\n    for (let f of fieldKeys) {\n        const valueMap = new Map();\n        dataSource.forEach(row => {\n            if (!valueMap.has(row[f])) {\n                valueMap.set(row[f], 0);\n            }\n            valueMap.set(row[f], valueMap.get(row[f]) + 1);\n        });\n        const dataType = inferDataType([...valueMap.keys()]);\n        const semanticType = getFieldType(dataSource, f);\n        let maxEntropy = Math.log2(valueMap.size);\n        let entropy = maxEntropy;\n        let analyticType = 'dimension';\n        let useFloatEntropy = false;\n        if ((dataType === 'integer' || dataType === 'number') && semanticType !== 'ordinal') {\n            analyticType = 'measure';\n            if (valueMap.size > BIN_NUM_FOR_ANALYTIC) {\n                let info = getFloatFieldEntropy(dataSource, f);\n                entropy = info.entropy;\n                maxEntropy = info.maxEntropy;\n                useFloatEntropy = true;\n            }\n        }\n        if (!useFloatEntropy) {\n            let info = getFieldEntropy(dataSource, f);\n            entropy = info.entropy;\n            maxEntropy = info.maxEntropy;\n        }\n        let field = {\n            key: f,\n            analyticType,\n            semanticType,\n            dataType,\n            features: {\n                unique: valueMap.size,\n                size: dataSource.length,\n                entropy,\n                maxEntropy\n            }\n        };\n        fields.push(field);\n        dictonary.set(field.key, field);\n    }\n    return {\n        fields,\n        dictonary\n    };\n}\n","import { crammersV, pearsonCC } from \"../../statistics\";\nimport { getDimClusterGroups, getMeaSetsBasedOnClusterGroups } from \"../subspaces\";\nimport { CrammersVThreshold, PearsonCorrelation } from \"../config\";\nexport class DataGraph {\n    constructor(dimensions, measures) {\n        this.DIMENSION_CORRELATION_THRESHOLD = CrammersVThreshold;\n        this.MEASURE_CORRELATION_THRESHOLD = PearsonCorrelation.strong;\n        this.dimensions = dimensions;\n        this.measures = measures;\n        // this.computeDGraph(dataSource);\n        // this.computeMGraph(dataSource);\n    }\n    computeGraph(dataSource, fields, cc) {\n        let matrix = fields.map((f) => fields.map(() => 0));\n        for (let i = 0; i < fields.length; i++) {\n            matrix[i][i] = 1;\n            for (let j = i + 1; j < fields.length; j++) {\n                matrix[i][j] = matrix[j][i] = cc(dataSource, fields[i], fields[j]);\n            }\n        }\n        return matrix;\n    }\n    computeDGraph(dataSource, cc = crammersV) {\n        this.DG = this.computeGraph(dataSource, this.dimensions, cc);\n        return this.DG;\n    }\n    computeMGraph(dataSource, cc = pearsonCC) {\n        this.MG = this.computeGraph(dataSource, this.measures, cc);\n        return this.MG;\n    }\n    clusterDGraph(dataSource, CORRELATION_THRESHOLD) {\n        const { dimensions, DIMENSION_CORRELATION_THRESHOLD } = this;\n        this.DClusters = getDimClusterGroups(dataSource, dimensions, CORRELATION_THRESHOLD || DIMENSION_CORRELATION_THRESHOLD);\n        return this.DClusters;\n    }\n    clusterMGraph(dataSource, CORRELATION_THRESHOLD) {\n        const { measures, MEASURE_CORRELATION_THRESHOLD } = this;\n        this.MClusters = getMeaSetsBasedOnClusterGroups(dataSource, measures, CORRELATION_THRESHOLD || MEASURE_CORRELATION_THRESHOLD);\n        return this.MClusters;\n    }\n}\n","import { IForestOutlierWorker } from '../workers/IForestOutlier';\nimport { LRTrendWorker } from '../workers/LRTrend';\nexport var DefaultIWorker;\n(function (DefaultIWorker) {\n    DefaultIWorker[\"outlier\"] = \"default_outlier\";\n    // cluster = 'default_group',\n    DefaultIWorker[\"trend\"] = \"default_trend\";\n})(DefaultIWorker || (DefaultIWorker = {}));\n/**\n * collection of insight workers. it helps to manage all the workers in a centralized way.\n */\nexport class InsightWorkerCollection {\n    constructor() {\n        this.workers = new Map();\n    }\n    register(name, iWorker) {\n        if (this.workers.has(name)) {\n            throw new Error(`There has been a worker named: ${name} already.`);\n        }\n        else {\n            this.workers.set(name, [true, iWorker]);\n        }\n    }\n    /**\n     * set a existed worker's status.\n     * @param name insight worker's name used for register.\n     * @param status whether the worker should be used.\n     */\n    enable(name, status) {\n        if (!this.workers.has(name)) {\n            throw new Error(`Intention Worker \"${name}\" does not exist.`);\n        }\n        else {\n            let iWorkerWithStatus = this.workers.get(name);\n            iWorkerWithStatus[0] = status;\n            this.workers.set(name, iWorkerWithStatus);\n        }\n    }\n    /**\n     * enumerate all enabled insight workers.\n     * @param func (what is going to be done with the given worker)\n     */\n    each(func) {\n        for (let [name, iWorker] of this.workers) {\n            if (iWorker[0]) {\n                func(iWorker[1], name);\n            }\n        }\n    }\n    static init(props = { withDefaultIWorkers: true }) {\n        const { withDefaultIWorkers = true } = props;\n        if (!InsightWorkerCollection.colletion) {\n            InsightWorkerCollection.colletion = new InsightWorkerCollection();\n            if (withDefaultIWorkers) {\n                InsightWorkerCollection.colletion.register(DefaultIWorker.outlier, IForestOutlierWorker);\n                // InsightWorkerCollection.colletion.register(DefaultIWorker.cluster, KNNClusterWorker)\n                InsightWorkerCollection.colletion.register(DefaultIWorker.trend, LRTrendWorker);\n            }\n        }\n        Object.values(DefaultIWorker).forEach(workerName => {\n            InsightWorkerCollection.colletion.enable(workerName, withDefaultIWorkers);\n        });\n        return InsightWorkerCollection.colletion;\n    }\n}\n","import { getAggHashKey, groupBy, stdAggregate, stdAggregateFromCuboid } from \"../statistics\";\nimport { dist } from \"../statistics/aggregators\";\nconst DEFAULT_OPS = ['max', 'min', 'sum', 'mean', 'count', 'dist'];\nexport class Cuboid {\n    constructor(props) {\n        const { dimensions, measures, ops = DEFAULT_OPS, ranges } = props;\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.ops = ops;\n        this.state = [];\n        this.ranges = ranges;\n    }\n    setState(state) {\n        this.state = state;\n    }\n    setData(dataSource) {\n        this.state = stdAggregate({\n            dimensions: this.dimensions,\n            measures: this.measures,\n            ops: this.ops,\n            dataSource\n        });\n        const groups = groupBy(dataSource, this.dimensions);\n        for (let row of this.state) {\n            const hashKey = getAggHashKey(this.dimensions.map(d => row[d]));\n            const groupValues = groups.get(hashKey);\n            for (let mea of this.measures) {\n                const range = this.ranges.get(mea);\n                row[mea]['dist'] = dist(groupValues.map(v => v[mea]), range);\n            }\n        }\n        return this.state;\n    }\n    computeFromCuboid(cuboid) {\n        const { ops, measures, dimensions } = this;\n        this.state = stdAggregateFromCuboid({\n            dimensions,\n            measures,\n            ops,\n            dataSource: cuboid.getRawState()\n        });\n        return this.state;\n    }\n    get size() {\n        return this.state.length;\n    }\n    getState(measures, operatorOfMeasures) {\n        let data = [];\n        const { state, dimensions } = this;\n        for (let row of state) {\n            let newRow = {};\n            for (let dim of dimensions) {\n                newRow[dim] = row[dim];\n            }\n            for (let i = 0; i < measures.length; i++) {\n                const mea = measures[i];\n                const op = operatorOfMeasures[i];\n                newRow[mea] = row[mea][op];\n            }\n            data.push(newRow);\n        }\n        return data;\n    }\n    getRawState() {\n        return this.state;\n    }\n}\n","// import { DataSource, Record} from \"../commonTypes\";\n// import { Cuboid } from \"./cuboid\";\nimport { getRangeBy } from \"../statistics\";\nimport { Cuboid } from \"./cuboid\";\n// interface QueryNode {\n//   dimCode: string;\n//   dimValue: string\n// }\n// export type QueryPath = QueryNode[];\n// interface CuboidNode extends Map<string, CuboidNode | Record> {}\n// function contains (arr1: any[], arr2: any[]): boolean {\n//   if (arr1.length < arr2.length) return false;\n//   let sets = new Set(arr1);\n//   for (let ele of arr2) {\n//     if (!sets.has(ele)) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\n// // todo query path support array\n// export class Cube {\n//   private computeCuboid: (\n//     path: QueryPath,\n//     measures: string[]\n//   ) => Promise<DataSource>;\n//   private cuboids: Map<string, Cuboid>;\n//   private inferableDistance: number;\n//   public readonly holistic: boolean;\n//   constructor(props: {\n//     computeCuboid: (path: QueryPath, measures: string[]) => Promise<DataSource>;\n//     inferableDistance?: number;\n//     holistic?\n//   }) {\n//     this.computeCuboid = props.computeCuboid;\n//     this.cuboids = new Map();\n//     this.inferableDistance = props.inferableDistance ? props.inferableDistance : Infinity;\n//     this.holistic = props.holistic || false;\n//   }\n//   /**\n//    * check whether the cuboid made of given dimensions can be infered by current diemnsions.\n//    * @param dimensions \n//    */\n//   private isCuboidInferable (dimensions: string[]): Cuboid | null {\n//     for (let cuboid of this.cuboids.values()) {\n//       let distance = cuboid.dimensions.length - dimensions.length;\n//       if (distance < this.inferableDistance && contains(cuboid.dimensions, dimensions)) {\n//         return cuboid;\n//       }\n//     }\n//     return null;\n//   }\n//   private getClosestCuboid (dimensions: string[]): Cuboid | null {\n//     let minDis = Infinity;\n//     let targetCuboid: Cuboid | null = null;\n//     for (let cuboid of this.cuboids.values()) {\n//       let distance = cuboid.dimensions.length - dimensions.length;\n//       if (distance < this.inferableDistance && contains(cuboid.dimensions, dimensions)) {\n//         if (distance < minDis) {\n//           minDis = distance;\n//           targetCuboid = cuboid;\n//         }\n//       }\n//     }\n//     return targetCuboid;\n//   }\n//   public async getCuboid(\n//     dimSet: string[],\n//     measures: string[]\n//   ): Promise<Cuboid> {\n//     const key = dimSet.join(\";\");\n//     if (this.holistic) {\n//       if (this.cuboids.has(key)) {\n//         return this.cuboids.get(key);\n//       }\n//     } else {\n//       let inferedCuboid = this.isCuboidInferable(dimSet);\n//       if (inferedCuboid) {\n//         return inferedCuboid;\n//       }\n//     }\n//     const path: QueryPath = dimSet.map((d) => {\n//       return {\n//         dimCode: d,\n//         dimValue: \"*\",\n//       };\n//     });\n//     const cuboidDataSource = await this.computeCuboid(path, measures);\n//     const cuboid = new Cuboid({\n//       dimensions: dimSet,\n//       dataSource: cuboidDataSource,\n//     });\n//     this.cuboids.set(key, cuboid);\n//     return cuboid;\n//   }\n// }\n// // todo\n// // 至少返回的因该是一个DataFrame，而不应该是当前cuboid粒度的明细。\n// // case: 第一个请求的cuboid是明细粒度，则\nconst CUBOID_KEY_SPLITOR = '_join_';\nconst DEFAULT_OPS = [\"max\", \"min\", \"sum\", \"mean\", \"count\", 'dist'];\nexport class Cube {\n    constructor(props) {\n        const { dimensions, measures, dataSource, ops = DEFAULT_OPS } = props;\n        this.dimensions = dimensions;\n        this.measures = measures;\n        this.dataSource = dataSource;\n        this.ops = ops;\n        this.dimOrder = new Map();\n        dimensions.forEach((dim, i) => {\n            this.dimOrder.set(dim, i);\n        });\n        this.cuboids = new Map();\n        this.ranges = new Map();\n    }\n    // public contains(dimensions: string[]): boolean {\n    //     if (dimensions.length > )\n    // }\n    sortDimension(dimensions) {\n        const orderedDims = [...dimensions];\n        orderedDims.sort((d1, d2) => {\n            return this.dimOrder.get(d1) - this.dimOrder.get(d2);\n        });\n        return orderedDims;\n    }\n    getCuboid(dimensions) {\n        const orderedDims = this.sortDimension(dimensions);\n        const dimKey = orderedDims.join(CUBOID_KEY_SPLITOR);\n        // this.cuboids.get(dimKey)\n        if (this.cuboids.has(dimKey)) {\n            // console.log('target cached!!!')\n            return this.cuboids.get(dimKey);\n        }\n        // does not get cuboid\n        let currDimSet = new Set(dimensions);\n        const existingParentKeys = [];\n        const nullParentKeys = [];\n        for (let dim of this.dimensions) {\n            if (!currDimSet.has(dim)) {\n                // use insert O(n) instead of sort O(nlogn)\n                const parentDimensions = this.sortDimension([...orderedDims, dim]);\n                const parentKey = parentDimensions.join(CUBOID_KEY_SPLITOR);\n                if (this.cuboids.has(parentKey))\n                    existingParentKeys.push(parentKey);\n                else {\n                    nullParentKeys.push(parentKey);\n                }\n            }\n        }\n        let minCost = Infinity;\n        let minCuboidKey = this.dimensions.join(CUBOID_KEY_SPLITOR);\n        if (existingParentKeys.length > 0) {\n            for (let key of existingParentKeys) {\n                const pCuboid = this.cuboids.get(key);\n                if (pCuboid.size < minCost) {\n                    minCost = pCuboid.size;\n                    minCuboidKey = key;\n                }\n            }\n        }\n        else if (nullParentKeys.length > 0) {\n            minCuboidKey = nullParentKeys[0];\n        }\n        const parentCuboid = this.getCuboid(minCuboidKey.split(CUBOID_KEY_SPLITOR));\n        // console.log('based on parents cube: ', minCuboidKey)\n        // todo: 递归构建相关的cuboid，可能要依赖field dict来判断递归的路径\n        let cuboid = new Cuboid({\n            dimensions,\n            measures: this.measures,\n            ops: this.ops,\n            ranges: this.ranges\n        });\n        // cuboid.setData(parentCuboid.state);\n        cuboid.computeFromCuboid(parentCuboid);\n        this.cuboids.set(dimKey, cuboid);\n        return cuboid;\n    }\n    computeRanges() {\n        const { measures, dataSource } = this;\n        for (let mea of measures) {\n            this.ranges.set(mea, getRangeBy(dataSource, mea));\n        }\n    }\n    buildBaseCuboid() {\n        this.computeRanges();\n        let baseCuboid = new Cuboid({\n            dimensions: this.dimensions,\n            measures: this.measures,\n            ops: this.ops,\n            ranges: this.ranges\n        });\n        baseCuboid.setData(this.dataSource);\n        this.cuboids.set(this.dimensions.join(CUBOID_KEY_SPLITOR), baseCuboid);\n        return baseCuboid;\n    }\n    loadCuboid(cuboidKey, cuboidState) {\n        const cuboid = new Cuboid({\n            dimensions: cuboidKey.split(CUBOID_KEY_SPLITOR),\n            measures: this.measures,\n            ops: this.ops,\n            ranges: this.ranges\n        });\n        cuboid.setState(cuboidState);\n        this.cuboids.set(cuboidKey, cuboid);\n    }\n    exportCuboids() {\n        const cbs = {};\n        for (let [ck, cb] of this.cuboids) {\n            cbs[ck] = cb.getRawState();\n        }\n        return cbs;\n    }\n    get baseCuboid() {\n        const baseKey = this.dimensions.join(CUBOID_KEY_SPLITOR);\n        if (!this.cuboids.has(baseKey)) {\n            return this.buildBaseCuboid();\n        }\n        return this.cuboids.get(baseKey);\n    }\n}\n","import { Outier } from \"../../ml\";\nexport const IForestOutlierWorker = async (aggData, dimensions, measures) => {\n    let iForest = new Outier.IsolationForest([], measures, aggData);\n    iForest.buildIsolationForest();\n    let scoreList = iForest.estimateOutierScore();\n    let maxIndex = 0;\n    let score = 0;\n    for (let i = 0; i < scoreList.length; i++) {\n        if (scoreList[i] > score) {\n            score = scoreList[i];\n            maxIndex = i;\n        }\n    }\n    let des = {};\n    dimensions.concat(measures).forEach((mea) => {\n        des[mea] = aggData[maxIndex][mea];\n    });\n    return {\n        dimensions,\n        measures,\n        significance: score,\n        description: des,\n    };\n};\n","import { oneDLinearRegression } from '../../statistics/index';\nexport const LRTrendWorker = async (aggData, dimensions, measures) => {\n    if (dimensions.length !== 1)\n        return null;\n    let orderedData = [...aggData];\n    orderedData.sort((a, b) => {\n        if (a[dimensions[0]] > b[dimensions[0]])\n            return 1;\n        if (a[dimensions[0]] === b[dimensions[0]])\n            return 0;\n        else\n            return -1;\n    });\n    let sig = 0;\n    for (let mea of measures) {\n        let linearModel = new oneDLinearRegression(orderedData, dimensions[0], mea);\n        linearModel.normalizeDimensions(dimensions);\n        sig += linearModel.significance();\n    }\n    sig /= measures.length;\n    return {\n        dimensions,\n        measures,\n        significance: sig\n    };\n};\n","const FULL_FIELD_USE_THRESHOLD = 25;\nconst PARTS_FIELD_THRESHOLD = 500;\nconst fixOmiga = Math.round((100 - FULL_FIELD_USE_THRESHOLD) ** 2 / PARTS_FIELD_THRESHOLD);\nexport function autoFieldSelect(_fields) {\n    const x = _fields.length;\n    const fields = [..._fields];\n    fields.sort((fa, fb) => fa.features.entropy - fb.features.entropy);\n    if (x < FULL_FIELD_USE_THRESHOLD)\n        return fields;\n    if (x < PARTS_FIELD_THRESHOLD) {\n        return fields.slice(0, Math.round(Math.sqrt(fixOmiga * (x - FULL_FIELD_USE_THRESHOLD)) + FULL_FIELD_USE_THRESHOLD));\n    }\n    else {\n        return fields.slice(0, 100);\n    }\n}\nexport function fieldSelectByPercent(_fields, percent) {\n    const x = _fields.length;\n    const fields = [..._fields];\n    fields.sort((fa, fb) => fa.features.entropy - fb.features.entropy);\n    return fields.slice(0, Math.round(x * percent));\n}\n","const BIN_SIZE = 8;\nexport function entropyAcc(fl) {\n    let total = 0;\n    for (let i = 0; i < fl.length; i++) {\n        total += fl[i];\n    }\n    let tLog = Math.log2(total);\n    let ent = 0;\n    for (let i = 0; i < fl.length; i++) {\n        ent = ent + fl[i] * (Math.log2(fl[i]) - tLog) / total;\n    }\n    return -ent;\n}\nexport function meaImp(dataSource, mea, minValue, maxValue) {\n    // const _min = typeof minValue !== 'undefined' ? minValue : Math.min(...dataSource.map(d => d[mea]));\n    // const _max = typeof maxValue !== 'undefined' ? maxValue : Math.max(...dataSource.map(d => d[mea]));\n    const _min = minValue;\n    const _max = maxValue;\n    const step = (_max - _min) / BIN_SIZE;\n    let dist = new Array(BIN_SIZE + 1).fill(0);\n    for (let record of dataSource) {\n        let vIndex = Math.floor((record[mea] - _min) / step);\n        dist[vIndex]++;\n    }\n    dist[BIN_SIZE - 1] += dist[BIN_SIZE];\n    // const pl = normalize(dist.filter(d => d > 0));\n    const ent = entropyAcc(dist.slice(0, BIN_SIZE).filter(d => d > 0));\n    return ent;\n}\nexport function viewStrength(dataSource, dimensions, measures) {\n    const groups = new Map();\n    for (let record of dataSource) {\n        const _key = dimensions.map(d => record[d]).join('_');\n        if (!groups.has(_key)) {\n            groups.set(_key, []);\n        }\n        groups.get(_key)?.push(record);\n    }\n    let totalEntLoss = 0;\n    for (let mea of measures) {\n        const _min = Math.min(...dataSource.map(d => d[mea]));\n        const _max = Math.max(...dataSource.map(d => d[mea]));\n        ;\n        const ent = meaImp(dataSource, mea, _min, _max);\n        // conditional ent\n        let condEnt = 0;\n        let logs = [];\n        const entries = [...groups.entries()];\n        entries.sort((a, b) => b[1].length - a[1].length);\n        for (let i = 0; i < entries.length; i++) {\n            if (i >= BIN_SIZE - 1)\n                break;\n            const groupRows = entries[i][1];\n            let groupProb = groupRows.length / dataSource.length;\n            const subEnt = meaImp(groupRows, mea, _min, _max);\n            condEnt += groupProb * subEnt;\n            logs.push([groupProb, subEnt]);\n        }\n        let noiseGroup = [];\n        for (let i = BIN_SIZE - 1; i < entries.length; i++) {\n            noiseGroup.push(...entries[i][1]);\n        }\n        if (noiseGroup.length > 0) {\n            let groupProb = noiseGroup.length / dataSource.length;\n            const subEnt = meaImp(noiseGroup, mea, _min, _max);\n            condEnt += groupProb * subEnt;\n        }\n        // for (let [groupKey, groupRows] of groups.entries()) {\n        //     let groupProb = groupRows.length / dataSource.length;\n        //     const subEnt = meaImp(groupRows, mea, _min, _max);\n        //     condEnt += groupProb * subEnt;\n        //     logs.push([groupProb, subEnt])\n        // }\n        // console.log(logs)\n        // console.log('H(X), H(X|Y)]]]]]]', ent, condEnt)\n        totalEntLoss += noiseGroup.length > 0 ? (ent - condEnt) / Math.log2(BIN_SIZE) : (ent - condEnt) / Math.log2(groups.size);\n    }\n    // const groupFL: number[] = [];\n    // for (let rows of groups.values()) {\n    //     groupFL.push(rows.length);\n    // }\n    // totalEntLoss = totalEntLoss / Math.log2(groups.size)//groups.size;\n    // console.log({ dimensions, measures, score: totalEntLoss / measures.length, totalEntLoss })\n    return totalEntLoss / measures.length;\n}\n","import { getFieldsSummary } from \"./fieldSummary\";\nimport { DataGraph } from \"./dataGraph\";\nimport { Cube } from \"../../cube\";\nimport { getCombination, normalize, mapPositive, entropy } from \"../../statistics\";\nimport { InsightWorkerCollection } from \"./workerCollection\";\nimport { specification } from './specification/encoding';\nimport { copyData, groupContinousField } from \"../../utils\";\nimport { isUniformDistribution } from \"../../distribution\";\nimport { autoFieldSelect, fieldSelectByPercent } from \"./select\";\nimport { DEFAULT_BIN_NUM, DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP, PERCENT_THRESHOLD_AS_UNIQUE_INDEX, VERSION } from \"../../constant\";\nimport { viewStrength, entropyAcc } from \"./patterns/general\";\n// import { SQLInterface } from \"../../SQLInterface\";\nconst MIN_QUAN_MEMBER_SIZE = 50;\nexport class VIEngine {\n    constructor() {\n        // public cookedDimensions: string[];\n        // public cookedMeasures: string[];\n        // public cookedFields: IFieldSummary[];\n        // protected cookedFieldDictonary: FieldDictonary;\n        // private _fieldKeys: string[];\n        this._dimensions = [];\n        this._measures = [];\n        /**\n        * number of dimensions appears in a view.\n        */\n        this.DIMENSION_NUM_IN_VIEW = {\n            MAX: 3,\n            MIN: 1,\n        };\n        /**\n        * number of measures appears in a view.\n        */\n        this.MEASURE_NUM_IN_VIEW = {\n            MAX: 3,\n            MIN: 1,\n        };\n        this.cube = null;\n        this.aggregators = [\"max\", \"min\", \"sum\", \"mean\", \"count\", 'dist'];\n        this.workerCollection = InsightWorkerCollection.init();\n    }\n    serialize() {\n        const { fields, dataGraph, subSpaces, insightSpaces, dataSource, rawDataSource, cube } = this;\n        const storage = {\n            version: VERSION,\n            fields,\n            dataGraph: {\n                MClusters: dataGraph.MClusters,\n                DClusters: dataGraph.DClusters,\n                DG: dataGraph.DG,\n                MG: dataGraph.MG\n            },\n            subSpaces,\n            insightSpaces\n        };\n        const dataStorage = {\n            version: VERSION,\n            dataSource: {\n                raw: rawDataSource,\n                view: dataSource\n            },\n            cuboids: cube.exportCuboids()\n        };\n        return {\n            storage,\n            dataStorage\n        };\n    }\n    deSerialize(storage, dataStorage) {\n        this.fields = storage.fields;\n        // make fields dict\n        if (typeof this.fieldDictonary !== 'undefined' && this.fieldDictonary !== null) {\n            this.fieldDictonary.clear();\n        }\n        else {\n            this.fieldDictonary = new Map();\n        }\n        storage.fields.forEach(f => {\n            this.fieldDictonary.set(f.key, f);\n        });\n        const { dimensions, measures } = this;\n        this.dataGraph = new DataGraph(dimensions, measures);\n        // this.dat\n        this.dataGraph.DG = storage.dataGraph.DG;\n        this.dataGraph.MG = storage.dataGraph.MG;\n        this.dataGraph.DClusters = storage.dataGraph.DClusters;\n        this.dataGraph.MClusters = storage.dataGraph.MClusters;\n        this.subSpaces = storage.subSpaces;\n        this.insightSpaces = storage.insightSpaces;\n        if (dataStorage) {\n            const { aggregators } = this;\n            this.rawDataSource = dataStorage.dataSource.raw;\n            this.dataSource = dataStorage.dataSource.view;\n            this.cube = new Cube({\n                dataSource: dataStorage.dataSource.view,\n                dimensions,\n                measures,\n                ops: aggregators\n            });\n            Object.keys(dataStorage.cuboids).forEach(cuboidKey => {\n                this.cube.loadCuboid(cuboidKey, dataStorage.cuboids[cuboidKey]);\n            });\n        }\n    }\n    /**\n     * 为了实现简单，这里加一个隐形约束，必须先setData，才能调用setFields\n     *\n     * @param mutFields\n     */\n    setFields(mutFields) {\n        this._mutFields = mutFields;\n        this.dataSource = copyData(this.rawDataSource);\n        const fieldKeys = mutFields.map(f => f.key);\n        const { fields, dictonary } = getFieldsSummary(fieldKeys, this.dataSource);\n        // 用户指定优先，其次取推荐值\n        this.rawFields = fields.map((f, i) => {\n            const field = {\n                ...f\n            };\n            if (mutFields[i].dataType !== '?')\n                field.dataType = mutFields[i].dataType;\n            if (mutFields[i].semanticType !== '?')\n                field.semanticType = mutFields[i].semanticType;\n            if (mutFields[i].analyticType !== '?')\n                field.analyticType = mutFields[i].analyticType;\n            return field;\n        });\n    }\n    setData(dataSource) {\n        this.rawDataSource = dataSource;\n        this.dataSource = copyData(dataSource);\n        return this;\n    }\n    get dimensions() {\n        // if (this._dimensions.length > 0) return this._dimensions;\n        return this.fields.filter(f => f.analyticType === 'dimension').map(f => f.key);\n        // return this._dimensions\n    }\n    get measures() {\n        // if (this._measures.length > 0) return this._measures;\n        return this.fields.filter(f => f.analyticType === 'measure').map(f => f.key);\n        // return this._measures\n    }\n    buildfieldsSummary() {\n        const fieldKeys = this.fields.map(f => f.key);\n        const { fields, dictonary } = getFieldsSummary(fieldKeys, this.dataSource);\n        this.fields = fields;\n        this.fieldDictonary = dictonary;\n        return this;\n    }\n    univarSelection(selectMode = 'auto', percent = 1) {\n        const { rawFields, rawDataSource } = this;\n        // 1. trans fields\n        // 2. filter fields\n        const cookedFieldKeys = [];\n        const rawIndices = [];\n        // const transedMap: Map<string, string> = new Map();\n        for (let i = 0; i < rawFields.length; i++) {\n            const field = rawFields[i];\n            let transedField = field.key;\n            if (field.analyticType === 'dimension') {\n                if (field.semanticType === 'quantitative' && field.features.unique > MIN_QUAN_MEMBER_SIZE) {\n                    if (!isUniformDistribution(rawDataSource, field.key)) {\n                        const newFieldKey = `${field.key}(group)`;\n                        // const newFieldName = `${field.name}(group)`\n                        this.dataSource = groupContinousField({\n                            dataSource: rawDataSource,\n                            field: field.key,\n                            newField: newFieldKey,\n                            groupNumber: DEFAULT_BIN_NUM\n                        });\n                        transedField = newFieldKey;\n                        // transedMap.set(newFieldKey, field.key);\n                    }\n                }\n                else {\n                    if (field.features.unique > DOMMAIN_SIZE_THRESHOLD_MAYBE_DROP && field.features.unique > rawDataSource.length * PERCENT_THRESHOLD_AS_UNIQUE_INDEX) {\n                        continue;\n                    }\n                }\n            }\n            rawIndices.push(i);\n            cookedFieldKeys.push(transedField);\n        }\n        const { fields: cookedFields, dictonary: cookedFieldDictonary } = getFieldsSummary(cookedFieldKeys, this.dataSource);\n        cookedFields.forEach((f, i) => {\n            const rawIndex = rawIndices[i];\n            f.semanticType = rawFields[rawIndex].semanticType;\n            f.dataType = rawFields[rawIndex].dataType;\n            f.analyticType = rawFields[rawIndex].analyticType;\n        });\n        this.fields = selectMode === 'auto' ? autoFieldSelect(cookedFields) : fieldSelectByPercent(cookedFields, percent);\n        if (this.fields.findIndex(f => f.analyticType === 'dimension') === -1) {\n            // 针对维度较差的情况做的补充。\n            const dims = cookedFields.filter(f => f.analyticType === 'dimension');\n            // if (dims.length === 0) {\n            //     throw new Error('提供的数据集中没有维度，暂时不支持这种分析类型。');\n            // }\n            if (dims.length > 0) {\n                dims.sort((a, b) => a.features.entropy - b.features.entropy);\n                this.fields.push(dims[0]);\n            }\n        }\n        this.fieldDictonary = cookedFieldDictonary;\n    }\n    buildGraph() {\n        this.dataGraph = new DataGraph(this.dimensions, this.measures);\n        this.dataGraph.computeDGraph(this.dataSource);\n        this.dataGraph.computeMGraph(this.dataSource);\n        return this;\n    }\n    buildCube() {\n        const { measures, dataSource, dataGraph, dimensions, aggregators } = this;\n        const cube = new Cube({\n            dimensions,\n            measures,\n            dataSource,\n            ops: aggregators,\n        });\n        cube.buildBaseCuboid();\n        dataGraph.DClusters.forEach((group) => {\n            cube.getCuboid(group);\n        });\n        this.cube = cube;\n        return this;\n    }\n    clusterFields() {\n        this.dataGraph.clusterDGraph(this.dataSource);\n        this.dataGraph.clusterMGraph(this.dataSource);\n        return this;\n    }\n    static getCombinationFromClusterGroups(groups, limitSize) {\n        let fieldSets = [];\n        for (let group of groups) {\n            let combineFieldSet = getCombination(group, limitSize.MIN, limitSize.MAX);\n            fieldSets.push(...combineFieldSet);\n        }\n        return fieldSets;\n    }\n    buildSubspaces(DIMENSION_NUM_IN_VIEW = this.DIMENSION_NUM_IN_VIEW, MEASURE_NUM_IN_VIEW = this.MEASURE_NUM_IN_VIEW) {\n        // todo: design when to compute clusters.\n        const dimensionGroups = [...this.dataGraph.DClusters];\n        dimensionGroups.push([])\n        const measureGroups = this.dataGraph.MClusters;\n        // const dimensionSets = VIEngine.getCombinationFromClusterGroups(\n        //     dimensionGroups,\n        //     MAX_DIMENSION_NUM_IN_VIEW\n        // );\n        const measureSets = VIEngine.getCombinationFromClusterGroups(measureGroups, MEASURE_NUM_IN_VIEW);\n        // const subspaces = crossGroups(dimensionSets, measureSets);\n        const subspaces = [];\n        for (let group of dimensionGroups) {\n            const dimSets = getCombination(group, DIMENSION_NUM_IN_VIEW.MIN, DIMENSION_NUM_IN_VIEW.MAX);\n            for (let dims of dimSets) {\n                for (let meas of measureSets) {\n                    subspaces.push({\n                        dimensions: dims,\n                        measures: meas,\n                    });\n                }\n            }\n        }\n        this.subSpaces = subspaces;\n        return this;\n    }\n    static getSpaceImpurity(dataSource, dimensions, measures) {\n        let imp = 0;\n        for (let mea of measures) {\n            let fL = dataSource.map((r) => r[mea]);\n            let pL = normalize(mapPositive(fL));\n            let value = entropy(pL);\n            imp += value;\n        }\n        imp /= measures.length;\n        return imp;\n    }\n    async exploreViewsPOC(viewSpaces = this.subSpaces) {\n        const context = this;\n        let ansSpace = [];\n        for (let space of viewSpaces) {\n            const { dimensions, measures } = space;\n            const imp = viewStrength(context.dataSource, dimensions, measures);\n            ansSpace.push({\n                impurity: imp,\n                significance: 1,\n                dimensions,\n                measures\n            });\n        }\n        ansSpace.sort((a, b) => (b.impurity || 0) - (a.impurity || 0));\n        return ansSpace;\n    }\n    async exploreViews(viewSpaces = this.subSpaces) {\n        const context = this;\n        const { measures: globalMeasures, fieldDictonary, dataSource } = context;\n        let ansSpace = [];\n        const globalDist = context.cube.getCuboid([]).getState(globalMeasures, globalMeasures.map(() => 'dist'));\n        for (let space of viewSpaces) {\n            const { dimensions, measures } = space;\n            const localDist = context.cube.getCuboid(dimensions).getState(measures, measures.map(() => 'dist'));\n            let totalEntLoss = 0;\n            for (let mea of measures) {\n                let ent = 0;\n                if (globalDist.length > 0) {\n                    ent = entropyAcc(globalDist[0][mea].filter(d => d > 0));\n                }\n                let conEnt = 0;\n                const totalCount = fieldDictonary.get(mea).features.size;\n                const distList = localDist.map(r => ({\n                    // TODO: 讨论是否应当直接使用count\n                    // props: 节省计算量\n                    // cons: 强依赖于cube必须去计算count\n                    freq: r[mea].reduce((total, value) => total + value, 0),\n                    dist: r[mea]\n                }));\n                distList.sort((a, b) => b.freq - a.freq);\n                for (let i = 0; i < distList.length; i++) {\n                    if (i >= DEFAULT_BIN_NUM - 1)\n                        break;\n                    const subEnt1 = entropyAcc(distList[i].dist.filter(d => d > 0));\n                    conEnt += (distList[i].freq / totalCount) * subEnt1;\n                }\n                const noiseGroup = new Array(DEFAULT_BIN_NUM).fill(0);\n                let noiseFre = 0;\n                for (let i = DEFAULT_BIN_NUM - 1; i < distList.length; i++) {\n                    for (let j = 0; j < noiseGroup.length; j++) {\n                        noiseGroup[j] += distList[i].dist[j];\n                    }\n                    noiseFre += distList[i].freq;\n                }\n                if (noiseFre > 0) {\n                    conEnt += (noiseFre / totalCount) * entropyAcc(noiseGroup.filter(d => d > 0));\n                }\n                totalEntLoss += (ent - conEnt) / Math.log2(Math.min(DEFAULT_BIN_NUM, distList.length));\n            }\n            totalEntLoss /= measures.length;\n            ansSpace.push({\n                dimensions,\n                measures,\n                significance: 1,\n                score: totalEntLoss,\n                impurity: totalEntLoss\n            });\n        }\n        ansSpace.sort((a, b) => b.impurity - a.impurity);\n        return ansSpace;\n    }\n    searchPointInterests(viewSpace) {\n    }\n    async insightExtraction(viewSpaces = this.subSpaces) {\n        const context = this;\n        let ansSpace = [];\n        for (let space of viewSpaces) {\n            //    const t1 = performance.now();\n            const { dimensions, measures } = space;\n            let cube = context.cube;\n            let cuboid = cube.getCuboid(dimensions);\n            const aggData = cuboid.getState(measures, measures.map(() => 'sum'));\n            //    const t2 = performance.now();\n            const imp = VIEngine.getSpaceImpurity(aggData, dimensions, measures);\n            const jobPool = [];\n            this.workerCollection.each((iWorker, name) => {\n                // tslint:disable-next-line: no-shadowed-variable\n                const job = async (iWorker, name) => {\n                    try {\n                        let iSpace = await iWorker(aggData, dimensions, measures, context.fieldDictonary, context);\n                        if (iSpace !== null) {\n                            iSpace.type = name;\n                            iSpace.impurity = imp;\n                            ansSpace.push(iSpace);\n                        }\n                    }\n                    catch (error) {\n                        console.error(\"worker failed\", { dimensions, measures, aggData }, error);\n                    }\n                };\n                jobPool.push(job(iWorker, name));\n            });\n            await Promise.all(jobPool);\n            //    const t3 = performance.now();\n            //    const per = Math.round(((t3 - t2) / (t3 - t1)) * 100);\n        }\n        context.insightSpaces = ansSpace;\n        this.setInsightScores();\n        this.insightSpaces.sort((a, b) => (a.score || 0) - (b.score || 0));\n        return this.insightSpaces;\n    }\n    // todo:\n    setInsightScores() {\n        const insightSpaces = this.insightSpaces;\n        insightSpaces.forEach(space => {\n            space.score = space.impurity / space.significance;\n        });\n        return this;\n    }\n    getFieldInfoInVis(insightSpace) {\n        const fieldsInVis = [];\n        const cube = this.cube;\n        const fieldDictonary = this.fieldDictonary;\n        const { dimensions, measures } = insightSpace;\n        dimensions.forEach((dim) => {\n            const aggData = cube.getCuboid([dim]).getState(measures, measures.map(() => 'sum'));\n            let imp = 0;\n            measures.forEach((mea) => {\n                let fL = aggData.map((r) => r[mea]);\n                let pL = normalize(mapPositive(fL));\n                let value = entropy(pL);\n                imp += value;\n            });\n            fieldsInVis.push({\n                ...fieldDictonary.get(dim),\n                impurity: imp,\n            });\n        });\n        const dAggData = cube.getCuboid(dimensions).getState(measures, measures.map(() => 'sum'));\n        measures.forEach((mea) => {\n            let fL = dAggData.map((r) => r[mea]);\n            let pL = normalize(mapPositive(fL));\n            let value = entropy(pL);\n            fieldsInVis.push({\n                ...fieldDictonary.get(mea),\n                impurity: value,\n            });\n        });\n        return fieldsInVis;\n    }\n    getFieldInfoInVisBeta(insightSpace) {\n        const fieldsInVis = [];\n        const cube = this.cube;\n        const fieldDictonary = this.fieldDictonary;\n        const { dimensions, measures } = insightSpace;\n        dimensions.forEach((dim) => {\n            const fd = fieldDictonary.get(dim);\n            fieldsInVis.push({\n                ...fd,\n                impurity: fd.features.entropy,\n            });\n        });\n        const aggs = cube.getCuboid(dimensions).getState(measures, measures.map(() => 'dist'));\n        measures.forEach((mea) => {\n            let conEnt = 0;\n            const totalCount = fieldDictonary.get(mea).features.size;\n            const distList = aggs.map(r => ({\n                // TODO: 讨论是否应当直接使用count\n                // props: 节省计算量\n                // cons: 强依赖于cube必须去计算count\n                freq: r[mea].reduce((total, value) => total + value, 0),\n                dist: r[mea]\n            }));\n            distList.sort((a, b) => b.freq - a.freq);\n            for (let i = 0; i < distList.length; i++) {\n                if (i >= DEFAULT_BIN_NUM - 1)\n                    break;\n                const subEnt1 = entropyAcc(distList[i].dist.filter(d => d > 0));\n                conEnt += (distList[i].freq / totalCount) * subEnt1;\n            }\n            const noiseGroup = new Array(DEFAULT_BIN_NUM).fill(0);\n            let noiseFre = 0;\n            for (let i = DEFAULT_BIN_NUM - 1; i < distList.length; i++) {\n                for (let j = 0; j < noiseGroup.length; j++) {\n                    noiseGroup[j] += distList[i].dist[j];\n                }\n                noiseFre += distList[i].freq;\n            }\n            if (noiseFre > 0) {\n                conEnt += (noiseFre / totalCount) * entropyAcc(noiseGroup.filter(d => d > 0));\n            }\n            const fd = fieldDictonary.get(mea);\n            fieldsInVis.push({\n                ...fd,\n                impurity: conEnt,\n            });\n        });\n        return fieldsInVis;\n    }\n    specification(insightSpace) {\n        const { dimensions, measures } = insightSpace;\n        const fieldsInVis = this.getFieldInfoInVisBeta(insightSpace);\n        const dataView = this.cube.getCuboid(dimensions).getState(measures, measures.map(() => 'sum'));\n        return specification(fieldsInVis, dataView);\n    }\n}\n","const DB_DATA_TYPE_TO_DATA_TYPE = {\n    'Int8': 'integer',\n    'Int16': 'integer',\n    'Int32': 'integer',\n    'Int64': 'integer',\n    'UInt8': 'integer',\n    'UInt16': 'integer',\n    'UInt32': 'number',\n    'UInt64': 'number',\n    'Float32': 'number',\n    'Float64': 'number',\n    'BOOLEAN': 'boolean',\n    'String': 'string'\n};\nconst DEFAULT_SEMANTIC_TYPE = {\n    'number': 'quantitative',\n    'integer': 'quantitative',\n    'boolean': 'nominal',\n    'date': 'temporal',\n    'string': 'nominal'\n};\nconst DEFAULT_ANALYTIC_TYPE = {\n    'number': 'measure',\n    'integer': 'measure',\n    'boolean': 'dimension',\n    'date': 'dimension',\n    'string': 'dimension'\n};\nexport function dbDataType2DataType(dbDataType) {\n    return DB_DATA_TYPE_TO_DATA_TYPE[dbDataType] || 'string';\n}\nexport function inferSemanticTypeFromDataType(dataType) {\n    return DEFAULT_SEMANTIC_TYPE[dataType];\n}\nexport function inferAnalyticTypeFromDataType(dataType) {\n    return DEFAULT_ANALYTIC_TYPE[dataType];\n}\nexport function parseCell(rawValue, dataType) {\n    switch (dataType) {\n        case 'Int8':\n        case 'Int16':\n        case 'Int32':\n        case 'Int64':\n        // case 'Int128':\n        // case 'Int256':\n        case 'UInt8':\n        case 'UInt16':\n        case 'UInt32':\n        case 'UInt64':\n            return parseInt(rawValue);\n        case 'Float32':\n        case 'Float64':\n            return Number(rawValue);\n        default:\n            return rawValue;\n    }\n}\nexport function parseTable(str, fields) {\n    const rows = [];\n    const rawRows = str.substring(0, str.length - 1).split('\\n');\n    for (let rawRow of rawRows) {\n        const row = {};\n        const rowValues = rawRow.split(/[\\t]/);\n        for (let i = 0; i < fields.length; i++) {\n            row[fields[i].fid] = parseCell(rowValues[i], fields[i].dataType);\n        }\n        rows.push(row);\n    }\n    return rows;\n}\n","import { CrammersVThreshold, PearsonCorrelation } from \"../../insights/config\";\nimport { Cluster } from \"../../ml\";\nexport class CHDataGraph {\n    constructor(viewName, dimensions, measures) {\n        this.DIMENSION_CORRELATION_THRESHOLD = CrammersVThreshold;\n        this.MEASURE_CORRELATION_THRESHOLD = PearsonCorrelation.strong;\n        this.SOFT_MAX_DIM_IN_VIEW = 4;\n        this.SOFT_MAX_MEA_IN_VIEW = 3;\n        this.dimensions = [];\n        this.measures = [];\n        this.viewName = viewName;\n        this.dimensions = dimensions;\n        this.measures = measures;\n    }\n    async computeGraph(colKeys, cc) {\n        const { viewName } = this;\n        let matrix = colKeys.map(() => colKeys.map(() => 0));\n        for (let i = 0; i < colKeys.length; i++) {\n            for (let j = 0; j < colKeys.length; j++) {\n                matrix[i][j] = matrix[j][i] = await cc(viewName, colKeys[i], colKeys[j]);\n            }\n        }\n        return matrix;\n    }\n    async computeDGraph(cc) {\n        this.DG = await this.computeGraph(this.dimensions, cc);\n        return this.DG;\n    }\n    async computeMGraph(cc) {\n        this.MG = await this.computeGraph(this.measures, cc);\n        return this.MG;\n    }\n    clusterDGraph(CORRELATION_THRESHOLD) {\n        const { DG, dimensions, SOFT_MAX_DIM_IN_VIEW, DIMENSION_CORRELATION_THRESHOLD } = this;\n        const threshold = typeof CORRELATION_THRESHOLD === 'number' ? CORRELATION_THRESHOLD : DIMENSION_CORRELATION_THRESHOLD;\n        this.DClusters = Cluster.kruskal({\n            matrix: DG,\n            measures: dimensions,\n            groupMaxSize: Math.round(dimensions.length / SOFT_MAX_DIM_IN_VIEW),\n            threshold\n        });\n        return this.DClusters;\n    }\n    clusterMGraph(CORRELATION_THRESHOLD) {\n        const { MG, measures, MEASURE_CORRELATION_THRESHOLD, SOFT_MAX_MEA_IN_VIEW } = this;\n        const threshold = typeof CORRELATION_THRESHOLD === 'number' ? CORRELATION_THRESHOLD : MEASURE_CORRELATION_THRESHOLD;\n        this.MClusters = Cluster.kruskal({\n            matrix: MG,\n            measures,\n            groupMaxSize: Math.round(measures.length / SOFT_MAX_MEA_IN_VIEW),\n            threshold\n        });\n        return this.MClusters;\n    }\n}\n","import { getCombination } from \"../../statistics\";\nexport function getCombinationFromClusterGroups(groups, limitSize) {\n    let fieldSets = [];\n    for (let group of groups) {\n        let combineFieldSet = getCombination(group, limitSize.MIN, limitSize.MAX);\n        fieldSets.push(...combineFieldSet);\n    }\n    return fieldSets;\n}\nexport class CHStatistics {\n    constructor(chUtils) {\n        this.chiSquared = async (viewName, col1, col2) => {\n            const chis = await this.utils.query(`with col1Totals as (select \\`${col1}\\` as col1, count(*) as values_count from ${viewName} group by \\`${col1}\\`),\n            col2Totals as (select \\`${col2}\\` as col2, count(*) as values_count from ${viewName} group by \\`${col2}\\`),\n            total as (select count(*) as values_count from ${viewName}),\n            colPairs as (select \\`${col1}\\` as col1, \\`${col2}\\` as col2, count(*) as values_count from ${viewName} group by \\`${col1}\\`, \\`${col2}\\`)\n            select sum(value) from (select pow(col1Totals.values_count * (col2Totals.values_count / total.values_count) - colPairs.values_count, 2) / (col1Totals.values_count * (col2Totals.values_count / total.values_count)) as value\n            from colPairs, total \n            inner join col1Totals on colPairs.col1 = col1Totals.col1\n            inner join col2Totals on colPairs.col2 = col2Totals.col2);\n        `);\n            return Number(chis);\n        };\n        this.crammersV = async (viewName, col1, col2) => {\n            const chis = await this.chiSquared(viewName, col1, col2);\n            const rawViewInfo = await this.utils.query(`select count(*), uniq(\\`${col1}\\`), uniq(\\`${col2}\\`) from ${viewName}`);\n            const viewInfo = rawViewInfo.slice(0, -1).split('\\t').map(v => parseInt(v));\n            const V = Math.sqrt(chis / (viewInfo[0] * Math.min(viewInfo[1] - 1, viewInfo[2] - 1)));\n            return V;\n        };\n        this.pearsonCC = async (viewName, col1, col2) => {\n            const rawValue = await this.utils.query(`select corr(\\`${col1}\\`, \\`${col2}\\`) from ${viewName}`);\n            return Number(rawValue);\n        };\n        this.getSpaceImpurity = async (viewName, dimensions, measures) => {\n            // try count_imp * sum(or other)_imp;\n            const res = await this.utils.query(`with agg_view as (select count(*) as values_count, ${measures.map(m => `sum(\\`${m}\\`) as \\`sum_${m}\\``).join(',')} from ${viewName} group by ${dimensions.map(d => `\\`${d}\\``).join(',')}),\n            abs_sum as (select sum(values_count) as abssum_values_count, ${measures.map(m => `sum(abs(\\`sum_${m}\\`)) as \\`abssum_sum_${m}\\``).join(',')} from agg_view),\n            pb_view as (select agg_view.values_count / abs_sum.abssum_values_count as pb_count,\n                ${measures.map(m => `abs(\\`sum_${m}\\`) / \\`abssum_sum_${m}\\` as \\`pb_${m}\\``).join(',')}\n                from agg_view, abs_sum),\n            safe_value as (select if(pb_count = 0, 0, -pb_count * log2(pb_count)) as safe_count, ${measures.map(m => `if(\\`pb_${m}\\` = 0, 0, -\\`pb_${m}\\` * log2(\\`pb_${m}\\`)) as \\`safe_${m}\\``).join(',')} from pb_view)\n            select sum(safe_count), ${measures.map(m => `sum(\\`safe_${m}\\`)`).join(',')} from safe_value\n        `);\n            const imps = res.slice(0, -1).split('\\t').map(n => Number(n));\n            let score = 0;\n            for (let i = 1; i < imps.length; i++) {\n                score += imps[i];\n            }\n            // score *= imps[0];\n            return score;\n        };\n        this.utils = chUtils;\n    }\n    getCombinationFromClusterGroups(groups, limitSize) {\n        let fieldSets = [];\n        for (let group of groups) {\n            let combineFieldSet = getCombination(group, limitSize.MIN, limitSize.MAX);\n            fieldSets.push(...combineFieldSet);\n        }\n        return fieldSets;\n    }\n}\n","import { encoding, geomTypes } from \"../../insights/InsightFlow/specification/encoding\";\nexport function pureSpec(fields, viewSize = 10) {\n    let rankedFields = fields.sort((a, b) => a.impurity - b.impurity);\n    let spec = encoding(rankedFields);\n    const dimensions = new Set(fields.filter(f => f.analyticType === 'dimension').map(f => f.key));\n    const measures = new Set(fields.filter(f => f.analyticType === 'measure').map(f => f.key));\n    // todo: design a better rule for choosing geom type.\n    if (spec.position && spec.position.length === 2) {\n        if ((dimensions.has(spec.position[0]) && measures.has(spec.position[1])) ||\n            (dimensions.has(spec.position[1]) && measures.has(spec.position[0]))) {\n            const dimIndex = dimensions.has(spec.position[0]) ? 0 : 1;\n            const dim = spec.position[dimIndex];\n            const mea = spec.position[(dimIndex + 1) % 2];\n            spec.position = [dim, mea];\n            const originDimField = fields.find((f) => f.key === dim);\n            const dimCardinality = originDimField ? originDimField.features.unique : 0;\n            spec.geomType = [\"interval\", \"line\", \"area\"].filter((geom) => {\n                return dimCardinality >= geomTypes[geom][0] && dimCardinality <= geomTypes[geom][1];\n            });\n            if (originDimField.semanticType === 'nominal') {\n                spec.geomType = [\"interval\"];\n            }\n        }\n        else {\n            // TODO: 重叠程度检测判断 (viewSize = 10的原因，临时设定)\n            // ['point', 'path', 'heatmap']\n            spec.geomType = [\"point\", \"density\"].filter((geom) => {\n                return viewSize >= geomTypes[geom][0] && viewSize <= geomTypes[geom][1];\n            });\n        }\n    }\n    return { schema: spec };\n}\n","import axios from \"axios\";\nexport const CLICKHOUSE_CONFIG = {\n    protocol: 'http',\n    host: 'localhost',\n    port: 8123,\n    path: ''\n};\nexport function getCHConfig() {\n    return CLICKHOUSE_CONFIG;\n}\nexport function setCHConfig(config) {\n    Object.keys(config).forEach(k => {\n        CLICKHOUSE_CONFIG[k] = config[k];\n    });\n}\nexport class CHUtils {\n    constructor(config) {\n        this.config = config || {\n            protocol: 'http',\n            host: 'localhost',\n            port: 8123,\n            path: ''\n        };\n    }\n    getCHConfig() {\n        return this.config;\n    }\n    setCHConfig(config) {\n        Object.keys(config).forEach(k => {\n            this.config[k] = config[k];\n        });\n    }\n    async query(sql) {\n        try {\n            const config = this.config;\n            const res = await axios(`${config.protocol}://${config.host}:${config.port}${config.path}?query=${sql}`);\n            return res.data;\n        }\n        catch (error) {\n            throw new Error(`[SQL Error] ${sql}.\\n${error.toString()}`);\n        }\n    }\n    async queryw(sql) {\n        try {\n            const config = this.config;\n            const res = await axios({\n                url: `${config.protocol}://${config.host}:${config.port}${config.path}`,\n                method: 'post',\n                params: {\n                    query: sql\n                }\n            });\n            return res.data;\n        }\n        catch (error) {\n            throw new Error(`[SQL Error] ${sql}.\\n${error.toString()}`);\n        }\n    }\n}\n","import { dbDataType2DataType, inferAnalyticTypeFromDataType, inferSemanticTypeFromDataType, parseTable } from \"../parser\";\nimport { DEFAULT_BIN_NUM } from \"../../constant\";\nimport { CHDataGraph } from \"./dataGraph\";\nimport { CHStatistics, getCombinationFromClusterGroups } from \"./statistics\";\nimport { getCombination } from \"../../statistics\";\nimport { pureSpec } from \"./specification\";\nimport { CHUtils } from \"./utils\";\nconst BIN_PREFIX = 'bin_';\nconst MIN_QUAN_MEMBER_SIZE = 50;\nfunction createBins(range, groupNumber) {\n    const binRanges = [];\n    const binSize = (range[1] - range[0]) / groupNumber;\n    for (let i = 0; i < groupNumber; i++) {\n        binRanges.push([\n            range[0] + i * binSize,\n            range[0] + (i + 1) * binSize\n        ]);\n    }\n    return binRanges;\n}\nexport class ClickHouseEngine {\n    constructor() {\n        this.rawFields = [];\n        this.fields = [];\n        this.dataViewName = null;\n        this.dataGraph = null;\n        this.dataViewMetas = [];\n        this.insightSpaces = [];\n        this.dbMetas = [];\n        this.features = { size: 0 };\n        /**\n        * number of dimensions appears in a view.\n        */\n        this.DIMENSION_NUM_IN_VIEW = {\n            MAX: 3,\n            MIN: 1,\n        };\n        /**\n        * number of measures appears in a view.\n        */\n        this.MEASURE_NUM_IN_VIEW = {\n            MAX: 3,\n            MIN: 1,\n        };\n        this.utils = new CHUtils();\n        this.statistics = new CHStatistics(this.utils);\n    }\n    get dimensions() {\n        return this.fields.filter(f => f.analyticType === 'dimension').map(f => f.key);\n    }\n    get measures() {\n        return this.fields.filter(f => f.analyticType === 'measure').map(f => f.key);\n    }\n    setRawFields(fields) {\n        this.rawFields = fields;\n    }\n    async query(sql) {\n        return this.utils.query(sql);\n    }\n    async queryw(sql) {\n        return this.utils.queryw(sql);\n    }\n    async loadData(viewName) {\n        const dataStr = await this.query(`SELECT * from ${viewName};`);\n        const metas = await this.getFieldMetas(viewName);\n        this.dbMetas = metas;\n        const data = parseTable(dataStr, metas);\n        return data;\n    }\n    async getFieldMetas(viewName) {\n        const metaRaw = await this.query(`DESC ${viewName}`);\n        return metaRaw.substr(0, metaRaw.length - 1).split('\\n').map(fr => {\n            const infos = fr.split('\\t');\n            return {\n                fid: infos[0],\n                dataType: infos[1]\n            };\n        });\n    }\n    async buildFieldsSummary(viewName) {\n        const baseMetas = await this.getFieldMetas(viewName);\n        this.dbMetas = baseMetas;\n        const rawColUniques = await this.query(`SELECT ${baseMetas.map(m => `uniq(\\`${m.fid}\\`)`).join(',')} FROM ${viewName};`);\n        const colUniques = rawColUniques.split('\\t').map(n => parseInt(n));\n        const viewSize = parseInt(await this.query(`SELECT COUNT(*) FROM ${viewName};`));\n        this.features.size = viewSize;\n        const summary = [];\n        for (let i = 0; i < baseMetas.length; i++) {\n            let maxEntropy = Math.log2(colUniques[i]);\n            let entropy = Infinity;\n            if (colUniques[i] === viewSize) {\n                entropy = maxEntropy;\n            }\n            else {\n                // rawfl: raw frequency list (count of members of a column)\n                const rawEnt = await this.query(`with frequency_list as (SELECT COUNT(*) as frequency FROM ${viewName} GROUP BY \\`${baseMetas[i].fid}\\`),\n                total as (select sum(frequency) as total from frequency_list),\n                pb_list as (select (frequency_list.frequency / total.total) as pb from frequency_list, total) \n                SELECT SUM(-pb * log2(pb)) FROM pb_list`);\n                entropy = Number(rawEnt);\n            }\n            const dataType = dbDataType2DataType(baseMetas[i].dataType);\n            summary.push({\n                key: baseMetas[i].fid,\n                name: baseMetas[i].fid,\n                analyticType: inferAnalyticTypeFromDataType(dataType),\n                semanticType: inferSemanticTypeFromDataType(dataType),\n                dataType,\n                features: {\n                    entropy,\n                    maxEntropy,\n                    unique: colUniques[i],\n                    size: viewSize\n                }\n            });\n        }\n        return summary;\n    }\n    async uvsView(tableName) {\n        const VIEW_NAME = 'test_view';\n        if (this.rawFields.length === 0) {\n            this.rawFields = await this.buildFieldsSummary(tableName);\n        }\n        const viewFields = await this.featureTransform(tableName, VIEW_NAME);\n        const fields = [];\n        for (let i = 0; i < this.rawFields.length; i++) {\n            const rawField = this.rawFields[i];\n            if (rawField.analyticType === 'dimension') {\n                if (rawField.semanticType === 'quantitative' && rawField.features.unique > MIN_QUAN_MEMBER_SIZE) {\n                    // fixme 这里对应字段判断做的不好。扩展性差。\n                    const relativeViewField = viewFields.find(vf => vf.key === `${BIN_PREFIX}`);\n                    if (relativeViewField) {\n                        fields.push({\n                            ...relativeViewField, features: {\n                                ...relativeViewField.features\n                            }\n                        });\n                    }\n                    continue;\n                }\n            }\n            if (rawField.semanticType === 'quantitative') {\n                const relativeViewField = viewFields.find(vf => vf.key === `${BIN_PREFIX}${rawField.key}`);\n                const mergedField = {\n                    ...rawField,\n                    features: {\n                        ...rawField.features\n                    }\n                };\n                if (relativeViewField) {\n                    mergedField.features.entropy = relativeViewField.features.entropy;\n                    mergedField.features.maxEntropy = relativeViewField.features.maxEntropy;\n                }\n                fields.push(mergedField);\n            }\n            else {\n                fields.push({\n                    ...rawField,\n                    features: { ...rawField.features }\n                });\n            }\n        }\n        this.fields = fields;\n        return fields;\n    }\n    async getContinuousRanges(viewName) {\n        const continuousFields = this.rawFields.filter(f => f.semanticType === 'quantitative');\n        const rangeQuery = continuousFields.map(f => `min(\\`${f.key}\\`),max(\\`${f.key}\\`)`);\n        const rawRanges = (await this.query(`SELECT ${rangeQuery.join(',')} FROM ${viewName};`));\n        const ranges = [];\n        const statValues = rawRanges.substring(0, rawRanges.length - 1).split('\\t').map(v => Number(v));\n        for (let i = 0; i < continuousFields.length; i++) {\n            ranges.push({\n                fid: continuousFields[i].key,\n                range: [statValues[i * 2], statValues[i * 2 + 1]]\n            });\n        }\n        return ranges;\n    }\n    async binContinuousFields(tableName, groupNumber) {\n        const ranges = await this.getContinuousRanges(tableName);\n        // func getRange\n        const binFields = ranges.map(r => {\n            const bins = createBins(r.range, groupNumber);\n            let binQuery = 'case ';\n            binQuery += `when \\`${r.fid}\\` < ${bins[0][1]} then '(-Infinity, ${bins[0][1]})'\\n`;\n            for (let bi = 1; bi < bins.length - 1; bi++) {\n                binQuery += `when \\`${r.fid}\\` >= ${bins[bi][0]} and \\`${r.fid}\\` < ${bins[bi][1]} then '[${bins[bi][0]}, ${bins[bi][1]})'\\n`;\n            }\n            binQuery += `when \\`${r.fid}\\` >= ${bins[bins.length - 1][0]} then '[${bins[bins.length - 1][0]}, Infinity)' end\\n`;\n            binQuery += `as \\`${BIN_PREFIX}${r.fid}\\``;\n            return binQuery;\n        });\n        return binFields;\n    }\n    async featureTransform(tableName, viewName) {\n        const binFields = await this.binContinuousFields(tableName, DEFAULT_BIN_NUM);\n        await this.queryw(`DROP VIEW IF EXISTS ${viewName};`);\n        await this.queryw(`CREATE VIEW IF NOT EXISTS ${viewName} AS SELECT *, ${binFields.join(',')} FROM ${tableName};`);\n        // const raw = await this.query(`select * from ${viewName} limit 10;`);\n        const viewFields = await this.buildFieldsSummary(viewName);\n        // todo: 调整bin字段的semanticType。\n        // 讨论：1. 完善原始字段和转换后字段的查询匹配机制（要具备对不同类型转换的扩展性）\n        // 2. 引入mutField中通配符机制，来直接使用指定类型，减少推断的计算量？但是推断好像是必须，无论是否指定，这里应该是个计算图关系，rath里有讨论过。\n        this.dataViewName = viewName;\n        return viewFields;\n    }\n    async buildDataGraph() {\n        const { dimensions, measures, dataViewName, statistics } = this;\n        this.dataGraph = new CHDataGraph(dataViewName, dimensions, measures);\n        await this.dataGraph.computeDGraph(statistics.crammersV);\n        await this.dataGraph.computeMGraph(statistics.pearsonCC);\n    }\n    clusterFields() {\n        this.dataGraph.clusterDGraph();\n        this.dataGraph.clusterMGraph();\n        return this;\n    }\n    buildSubspaces(DIMENSION_NUM_IN_VIEW = this.DIMENSION_NUM_IN_VIEW, MEASURE_NUM_IN_VIEW = this.MEASURE_NUM_IN_VIEW) {\n        const dimensionGroups = this.dataGraph.DClusters;\n        const measureGroups = this.dataGraph.MClusters;\n        const measureSets = getCombinationFromClusterGroups(measureGroups, MEASURE_NUM_IN_VIEW);\n        const subspaces = [];\n        for (let group of dimensionGroups) {\n            const dimSets = getCombination(group, DIMENSION_NUM_IN_VIEW.MIN, DIMENSION_NUM_IN_VIEW.MAX);\n            for (let dims of dimSets) {\n                for (let meas of measureSets) {\n                    subspaces.push({\n                        dimensions: dims,\n                        measures: meas,\n                    });\n                }\n            }\n        }\n        this.dataViewMetas = subspaces;\n        return this;\n    }\n    async getSpaceImpurity(viewName, dimensions, measures) {\n        // try count_imp * sum(or other)_imp;\n        const res = await this.query(`with agg_view as (select count(*) as values_count, ${measures.map(m => `sum(\\`${m}\\`) as \\`sum_${m}\\``).join(',')} from ${viewName} group by ${dimensions.map(d => `\\`${d}\\``).join(',')}),\n            abs_sum as (select sum(values_count) as abssum_values_count, ${measures.map(m => `sum(abs(\\`sum_${m}\\`)) as \\`abssum_sum_${m}\\``).join(',')} from agg_view),\n            pb_view as (select agg_view.values_count / abs_sum.abssum_values_count as pb_count,\n                ${measures.map(m => `abs(\\`sum_${m}\\`) / \\`abssum_sum_${m}\\` as \\`pb_${m}\\``).join(',')}\n                from agg_view, abs_sum),\n            safe_value as (select if(pb_count = 0, 0, -pb_count * log2(pb_count)) as safe_count, ${measures.map(m => `if(\\`pb_${m}\\` = 0, 0, -\\`pb_${m}\\` * log2(\\`pb_${m}\\`)) as \\`safe_${m}\\``).join(',')} from pb_view)\n            select sum(safe_count), ${measures.map(m => `sum(\\`safe_${m}\\`)`).join(',')} from safe_value\n        `);\n        const imps = res.slice(0, -1).split('\\t').map(n => Number(n));\n        let score = 0;\n        for (let i = 1; i < imps.length; i++) {\n            score += imps[i];\n        }\n        return score;\n    }\n    async fastInsightRecommand(dataViewMetas = this.dataViewMetas) {\n        let ansSpace = [];\n        for (let viewMeta of dataViewMetas) {\n            const { dimensions, measures } = viewMeta;\n            const imp = await this.getSpaceImpurity(this.dataViewName, dimensions, measures);\n            ansSpace.push({\n                dimensions,\n                measures,\n                impurity: imp,\n                score: imp,\n                significance: 1\n            });\n        }\n        ansSpace.sort((a, b) => a.score - b.score);\n        this.insightSpaces = ansSpace;\n        return ansSpace;\n    }\n    async getFieldInfoInVis(insightSpace) {\n        const fieldsInVis = [];\n        const { dimensions, measures } = insightSpace;\n        for (let dim of dimensions) {\n            const imp = await this.statistics.getSpaceImpurity(this.dataViewName, [dim], measures);\n            const originField = this.fields.find(f => f.key === dim);\n            if (originField) {\n                fieldsInVis.push({\n                    ...originField,\n                    impurity: imp,\n                });\n            }\n        }\n        for (let mea of measures) {\n            const imp = await this.statistics.getSpaceImpurity(this.dataViewName, dimensions, [mea]);\n            const originField = this.fields.find(f => f.key === mea);\n            if (originField) {\n                fieldsInVis.push({\n                    ...originField,\n                    impurity: imp,\n                });\n            }\n        }\n        return fieldsInVis;\n    }\n    async queryAggDataView(dimensions, measures, aggregators, limit) {\n        const fieldsInView = dimensions.concat(measures).map(fk => this.dbMetas.find(f => f.fid === fk)).filter(f => Boolean(f));\n        let sql = `select ${dimensions.map(f => `\\`${f}\\``).join(',')}, ${measures.map((f, fIndex) => `${aggregators[fIndex]}(\\`${f}\\`) as \\`${f}\\``).join(',')} from ${this.dataViewName} group by ${dimensions.map(f => `\\`${f}\\``).join(',')}`;\n        if (typeof limit === 'number') {\n            sql += ` limit ${limit}`;\n        }\n        const rawDataView = await this.query(sql);\n        const dataView = parseTable(rawDataView, fieldsInView);\n        return dataView;\n    }\n    async queryDataView(dimensions, measures, limit) {\n        const fieldsInView = dimensions.concat(measures).map(fk => this.dbMetas.find(f => f.fid === fk)).filter(f => Boolean(f));\n        let sql = `select ${dimensions.concat(measures).map(f => `\\`${f}\\``).join(',')} from ${this.dataViewName}`;\n        if (typeof limit === 'number') {\n            sql += ` limit ${limit}`;\n        }\n        const rawDataView = await this.query(sql);\n        const dataView = parseTable(rawDataView, fieldsInView);\n        return dataView;\n    }\n    async specification(insightSpace) {\n        const { dimensions, measures } = insightSpace;\n        const fieldsInVis = await this.getFieldInfoInVis(insightSpace);\n        const aggData = await this.queryAggDataView(dimensions, measures, measures.map(() => 'sum'));\n        const spec = pureSpec(fieldsInVis);\n        return {\n            ...spec,\n            detailSize: this.features.size,\n            dataView: aggData\n        };\n    }\n    async destroyView() {\n        await this.queryw(`drop view if exists ${this.dataViewName}`);\n    }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_customParseFormat=e()}(this,(function(){\"use strict\";var t={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},e=/(\\[[^[]*\\])|([-:/.()\\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,n=/\\d\\d/,r=/\\d\\d?/,i=/\\d*[^\\s\\d-_:/()]+/,o={},s=function(t){return(t=+t)+(t>68?1900:2e3)};var a=function(t){return function(e){this[t]=+e}},f=[/[+-]\\d\\d:?(\\d\\d)?|Z/,function(t){(this.zone||(this.zone={})).offset=function(t){if(!t)return 0;if(\"Z\"===t)return 0;var e=t.match(/([+-]|\\d\\d)/g),n=60*e[1]+(+e[2]||0);return 0===n?0:\"+\"===e[0]?-n:n}(t)}],u=function(t){var e=o[t];return e&&(e.indexOf?e:e.s.concat(e.f))},h=function(t,e){var n,r=o.meridiem;if(r){for(var i=1;i<=24;i+=1)if(t.indexOf(r(i,0,e))>-1){n=i>12;break}}else n=t===(e?\"pm\":\"PM\");return n},d={A:[i,function(t){this.afternoon=h(t,!1)}],a:[i,function(t){this.afternoon=h(t,!0)}],S:[/\\d/,function(t){this.milliseconds=100*+t}],SS:[n,function(t){this.milliseconds=10*+t}],SSS:[/\\d{3}/,function(t){this.milliseconds=+t}],s:[r,a(\"seconds\")],ss:[r,a(\"seconds\")],m:[r,a(\"minutes\")],mm:[r,a(\"minutes\")],H:[r,a(\"hours\")],h:[r,a(\"hours\")],HH:[r,a(\"hours\")],hh:[r,a(\"hours\")],D:[r,a(\"day\")],DD:[n,a(\"day\")],Do:[i,function(t){var e=o.ordinal,n=t.match(/\\d+/);if(this.day=n[0],e)for(var r=1;r<=31;r+=1)e(r).replace(/\\[|\\]/g,\"\")===t&&(this.day=r)}],M:[r,a(\"month\")],MM:[n,a(\"month\")],MMM:[i,function(t){var e=u(\"months\"),n=(u(\"monthsShort\")||e.map((function(t){return t.substr(0,3)}))).indexOf(t)+1;if(n<1)throw new Error;this.month=n%12||n}],MMMM:[i,function(t){var e=u(\"months\").indexOf(t)+1;if(e<1)throw new Error;this.month=e%12||e}],Y:[/[+-]?\\d+/,a(\"year\")],YY:[n,function(t){this.year=s(t)}],YYYY:[/\\d{4}/,a(\"year\")],Z:f,ZZ:f};function c(n){var r,i;r=n,i=o&&o.formats;for(var s=(n=r.replace(/(\\[[^\\]]+])|(LTS?|l{1,4}|L{1,4})/g,(function(e,n,r){var o=r&&r.toUpperCase();return n||i[r]||t[r]||i[o].replace(/(\\[[^\\]]+])|(MMMM|MM|DD|dddd)/g,(function(t,e,n){return e||n.slice(1)}))}))).match(e),a=s.length,f=0;f<a;f+=1){var u=s[f],h=d[u],c=h&&h[0],l=h&&h[1];s[f]=l?{regex:c,parser:l}:u.replace(/^\\[|\\]$/g,\"\")}return function(t){for(var e={},n=0,r=0;n<a;n+=1){var i=s[n];if(\"string\"==typeof i)r+=i.length;else{var o=i.regex,f=i.parser,u=t.substr(r),h=o.exec(u)[0];f.call(e,h),t=t.replace(h,\"\")}}return function(t){var e=t.afternoon;if(void 0!==e){var n=t.hours;e?n<12&&(t.hours+=12):12===n&&(t.hours=0),delete t.afternoon}}(e),e}}return function(t,e,n){n.p.customParseFormat=!0,t&&t.parseTwoDigitYear&&(s=t.parseTwoDigitYear);var r=e.prototype,i=r.parse;r.parse=function(t){var e=t.date,r=t.utc,s=t.args;this.$u=r;var a=s[1];if(\"string\"==typeof a){var f=!0===s[2],u=!0===s[3],h=f||u,d=s[2];u&&(d=s[2]),o=this.$locale(),!f&&d&&(o=n.Ls[d]),this.$d=function(t,e,n){try{if([\"x\",\"X\"].indexOf(e)>-1)return new Date((\"X\"===e?1e3:1)*t);var r=c(e)(t),i=r.year,o=r.month,s=r.day,a=r.hours,f=r.minutes,u=r.seconds,h=r.milliseconds,d=r.zone,l=new Date,m=s||(i||o?1:l.getDate()),M=i||l.getFullYear(),Y=0;i&&!o||(Y=o>0?o-1:l.getMonth());var p=a||0,v=f||0,D=u||0,g=h||0;return d?new Date(Date.UTC(M,Y,m,p,v,D,g+60*d.offset*1e3)):n?new Date(Date.UTC(M,Y,m,p,v,D,g)):new Date(M,Y,m,p,v,D,g)}catch(t){return new Date(\"\")}}(e,a,r),this.init(),d&&!0!==d&&(this.$L=this.locale(d).$L),h&&e!=this.format(a)&&(this.$d=new Date(\"\")),o={}}else if(a instanceof Array)for(var l=a.length,m=1;m<=l;m+=1){s[1]=a[m-1];var M=n.apply(this,s);if(M.isValid()){this.$d=M.$d,this.$L=M.$L,this.init();break}m===l&&(this.$d=new Date(\"\"))}else i.call(this,t)}}}));","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar periodCube_1 = require(\"./periodCube\");\nexports.periodCube = periodCube_1.default;\nvar momentCube_1 = require(\"./momentCube\");\nexports.momentCube = momentCube_1.default;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node(aggFunc) {\n        this.children = new Map();\n        this._rawData = [];\n        this.aggFunc = aggFunc;\n        this.cache = false;\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this._rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (measures) {\n        if (measures === void 0) { measures = []; }\n        if (!this.cache) {\n            this._aggData = this.aggFunc(this.rawData, measures);\n            this.cache = true;\n        }\n        return this._aggData;\n    };\n    Node.prototype.clearCache = function () {\n        this.cache = false;\n    };\n    Object.defineProperty(Node.prototype, \"rawData\", {\n        get: function () {\n            var e_1, _a;\n            if (!this.cache) {\n                if (this.children.size !== 0) {\n                    var children = this.children.values();\n                    var rawData = [];\n                    try {\n                        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                            var child = children_1_1.value;\n                            var i = void 0;\n                            var data = child.rawData;\n                            var len = data.length;\n                            for (i = 0; i < len; i++) {\n                                rawData.push(data[i]);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._rawData = rawData;\n                }\n                this.cache = true;\n            }\n            return this._rawData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nvar periodCube = /** @class */ (function () {\n    function periodCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n    }\n    periodCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_3, _a;\n            if (level === dimensions.length) {\n                return node.aggData(measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var _b = __read(children_3_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    periodCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    periodCube.prototype.buildTree = function () {\n        var tree = new Node(this.aggFunc);\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    periodCube.prototype.insertNode = function (record, node, level) {\n        node.push(record);\n        node.cache = false;\n        if (level < this.dimensions.length) {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node(this.aggFunc));\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    periodCube.prototype.aggTree = function (node) {\n        var e_4, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_4 = __values(children), children_4_1 = children_4.next(); !children_4_1.done; children_4_1 = children_4.next()) {\n                var child = children_4_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (children_4_1 && !children_4_1.done && (_a = children_4.return)) _a.call(children_4);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    periodCube.prototype.aggNode = function (node) {\n        var e_5, _a;\n        if (node === void 0) { node = this.tree; }\n        var children = node.children.values();\n        try {\n            for (var children_5 = __values(children), children_5_1 = children_5.next(); !children_5_1.done; children_5_1 = children_5.next()) {\n                var child = children_5_1.value;\n                this.aggTree(child);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (children_5_1 && !children_5_1.done && (_a = children_5.return)) _a.call(children_5);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        node.aggData(this.measures);\n        return node;\n    };\n    return periodCube;\n}());\nexports.default = periodCube;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Node = /** @class */ (function () {\n    function Node() {\n        this.children = new Map();\n        this.rawData = [];\n    }\n    Node.prototype.push = function () {\n        var _a;\n        var params = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n        }\n        (_a = this.rawData).push.apply(_a, __spread(params));\n    };\n    Node.prototype.aggData = function (aggFunc, measures) {\n        if (measures === void 0) { measures = []; }\n        this._aggData = aggFunc(this.rawData, measures);\n        return this._aggData;\n    };\n    Node.prototype.getNode = function (dimensions) {\n        var search = function (node, level) {\n            var e_1, _a;\n            if (level === dimensions.length) {\n                return node;\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var _b = __read(children_1_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return search(this, 0);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar momentCube = /** @class */ (function () {\n    function momentCube(props) {\n        this.aggFunc = props.aggFunc;\n        this.factTable = props.factTable;\n        this.dimensions = props.dimensions;\n        this.measures = props.measures;\n        this.buildTree();\n        this.aggTree();\n    }\n    momentCube.prototype.get = function (dimensions) {\n        var _a = this, tree = _a.tree, aggFunc = _a.aggFunc, measures = _a.measures;\n        var search = function (node, level) {\n            var e_2, _a;\n            if (level === dimensions.length) {\n                return node.aggData(aggFunc, measures);\n            }\n            var children = node.children.entries();\n            try {\n                for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {\n                    var _b = __read(children_2_1.value, 2), childName = _b[0], child = _b[1];\n                    if (childName === dimensions[level]) {\n                        return search(child, level + 1);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return false;\n        };\n        return search(tree, 0);\n    };\n    momentCube.prototype.getNode = function (dimensions) {\n        var tree = this.tree;\n        return tree.getNode(dimensions);\n    };\n    momentCube.prototype.setData = function (props) {\n        var _a = props.aggFunc, aggFunc = _a === void 0 ? this.aggFunc : _a, _b = props.factTable, factTable = _b === void 0 ? this.factTable : _b, _c = props.dimensions, dimensions = _c === void 0 ? this.dimensions : _c, _d = props.measures, measures = _d === void 0 ? this.measures : _d;\n        if (dimensions !== this.dimensions || factTable !== this.factTable) {\n            this.dimensions = dimensions;\n            this.factTable = factTable;\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.buildTree();\n            this.aggTree();\n        }\n        else if (measures !== this.measures || aggFunc !== this.aggFunc) {\n            this.measures = measures;\n            this.aggFunc = aggFunc;\n            this.aggTree();\n        }\n    };\n    momentCube.prototype.buildTree = function () {\n        var tree = new Node();\n        var len = this.factTable.length, i;\n        for (i = 0; i < len; i++) {\n            this.insertNode(this.factTable[i], tree, 0);\n        }\n        this.tree = tree;\n        return tree;\n    };\n    momentCube.prototype.insertNode = function (record, node, level) {\n        if (level === this.dimensions.length) {\n            node.push(record);\n        }\n        else {\n            var member = record[this.dimensions[level]];\n            if (!node.children.has(member)) {\n                node.children.set(member, new Node());\n            }\n            this.insertNode(record, node.children.get(member), level + 1);\n        }\n    };\n    momentCube.prototype.aggTree = function (node) {\n        var e_3, _a;\n        if (node === void 0) { node = this.tree; }\n        if (node.children.size > 0) {\n            node.rawData = [];\n            var children = node.children.values();\n            try {\n                for (var children_3 = __values(children), children_3_1 = children_3.next(); !children_3_1.done; children_3_1 = children_3.next()) {\n                    var child = children_3_1.value;\n                    var i = void 0;\n                    var data = this.aggTree(child).rawData;\n                    var len = data.length;\n                    for (i = 0; i < len; i++) {\n                        node.rawData.push(data[i]);\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (children_3_1 && !children_3_1.done && (_a = children_3.return)) _a.call(children_3);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        node.aggData(this.aggFunc, this.measures);\n        return node;\n    };\n    return momentCube;\n}());\nexports.default = momentCube;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tree2Table(props) {\n    var dimensions = props.dimensions, measures = props.measures, cube = props.cube;\n    var aggFunc = cube.aggFunc;\n    var table = [];\n    function dfs(node, record, level) {\n        var e_1, _a, _b;\n        if (node.children.size === 0) {\n            var values = node._aggData;\n            table.push(__assign(__assign({}, record), values));\n            return;\n        }\n        try {\n            for (var _c = __values(node.children.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), childName = _e[0], child = _e[1];\n                var r = __assign(__assign({}, record), (_b = {}, _b[dimensions[level]] = childName, _b));\n                dfs(child, r, level + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    dfs(cube.tree, {}, 0);\n    return table;\n}\nexports.tree2Table = tree2Table;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","import dayjs from \"dayjs\"\nimport customParseFormat from \"dayjs/plugin/customParseFormat\"\nimport { IRow } from \"visual-insights\"\nimport { IAnalyticType } from \"visual-insights/build/esm/insights/InsightFlow/interfaces\"\nimport { inferAnalyticTypeFromSemanticType } from \".\"\nimport { Field } from \"../global\"\nimport { IFieldMeta } from \"../interfaces\"\nimport { FieldSummary } from \"../service\"\n\ndayjs.extend(customParseFormat);\n\nexport function transNumber(num: any): number | null {\n    if (isNaN(num)) {\n        return null\n    }\n    return Number(num)\n}\n\nexport function fieldMeta2fieldSummary(metas: IFieldMeta[]): FieldSummary[] {\n    return metas.map(f => ({\n        fieldName: f.fid,\n        entropy: f.features.entropy,\n        maxEntropy: f.features.maxEntropy,\n        type: f.semanticType,\n        distribution: f.distribution\n    }))\n}\n\nexport function fieldSummary2fieldMeta(summary: FieldSummary[], analyticTypes?: IAnalyticType[]): IFieldMeta[] {\n    if (typeof analyticTypes === 'undefined') {\n        console.warn('You are using analytic types infered from semantic type, it may not be safe.')\n    }\n    return summary.map((s, i) => ({\n        fid: s.fieldName,\n        features: {\n            maxEntropy: s.maxEntropy,\n            entropy: s.entropy\n        },\n        semanticType: s.type,\n        analyticType: analyticTypes ? analyticTypes[i] : inferAnalyticTypeFromSemanticType(s.type),\n        distribution: s.distribution,\n        disable: false\n    }))\n}\n\n/**\n * @deprecated\n */\nexport function meta2fieldScores(metas: IFieldMeta[]): [string, number, number, Field][] {\n    return metas.map(m => [m.fid, m.features.entropy, m.features.maxEntropy, {\n        name: m.fid,\n        type: m.semanticType\n    }])\n}\n// todo: Sync time rules in visual-insights\n// const TIME_RULES: RegExp[] = [\n//     /^[0-9]{2,4}[-/][0-9]{1,2}([-/][0-9]{1,2})?$/, // YYYY-MM-DD\n//     /^[0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4}$/, // MM-DD-YYYY\n//     /^[0-9]{4}[0-9]{2}[0-9]{2}$/, // YYYYMMDD\n//     /^[0-9]{2,4}[-/][0-9]{1,2}[-/][0-9]{1,2} [0-9]{1,2}:[0-9]{1-2}:[0-9]{1-2}$/ // YYYY-MM-DD HH:mm:ss\n// ]\nconst NON_SRD_TIME_REULES = {\n    'DD-MM-YYYY': /^[0-9]{1,2}[-/][0-9]{1,2}[-/][0-9]{2,4}$/,\n    'YYYYMMDD': /^[0-9]{4}[0-9]{2}[0-9]{2}$/\n} as const\nfunction stdTimeFormatter(value: string): string | null {\n    if (NON_SRD_TIME_REULES['DD-MM-YYYY'].test(value)) {\n        const d = dayjs(value, 'DD-MM-YYYY');\n        return d.isValid() ? d.format('YYYY-MM-DD') : null;\n    }\n    if (NON_SRD_TIME_REULES['YYYYMMDD'].test(value)) {\n        const d = dayjs(value, 'DD-MM-YYYY');\n        return d.isValid() ? d.format('YYYYMMDD') : null;\n    }\n    return value;\n}\n/**\n * This function will mute dataSource itself. The return of the function is the same ref of params dataSource.\n * @param dataSource \n * @param timeFields \n */\nexport function formatTimeField (dataSource: IRow[], timeFields: string[]): IRow[] {\n    for (let i = 0; i < dataSource.length; i++) {\n        const row = dataSource[i];\n        for (let j = 0; j < timeFields.length; j++) {\n            if (typeof row[timeFields[j]] === 'string') {\n                row[timeFields[j]] = stdTimeFormatter(row[timeFields[j]]);\n            }\n        }\n    }\n    return dataSource;\n}","import * as FileLoader from './fileParser';\nimport * as Transform from './transform';\nimport deepcopy from './deepcopy';\nimport { IRow } from '../interfaces';\n// TODO: Rath和VI中都有一套，弱约束关联，可能带来潜在的迭代负担或bug\nimport { IAnalyticType, IDataType, ISemanticType } from 'visual-insights';\n\nfunction isASCII(str: string) {\n  return /^[\\x00-\\x7F]*$/.test(str)\n}\n\n\nfunction inferAnalyticType (dataSource: IRow[], fid: string): IAnalyticType {\n  return dataSource.every((row) => {\n    // TODO: 推断逻辑抽象一下\n        return !isNaN(Number(row[fid])) || row[fid] === undefined\n    })\n    ? 'measure'\n    : 'dimension'\n}\n\nfunction inferAnalyticTypeFromSemanticType (semanticType: ISemanticType): IAnalyticType {\n  switch (semanticType) {\n    case 'quantitative':\n      return 'measure';\n    default:\n      return 'dimension'\n  }\n}\n\nfunction isSetEqual (A: string[], B: string[]) {\n  if (A.length !== B.length) return false;\n  const bset = new Set(B);\n  for (let a of A) {\n    if (!bset.has(a)) return false;\n  }\n  return true;\n}\n\nconst DB_DATA_TYPE_TO_DATA_TYPE: { [key: string]: IDataType } = {\n  'Int8': 'integer',\n  'Int16': 'integer',\n  'Int32': 'integer',\n  'Int64': 'integer',\n  'UInt8': 'integer',\n  'UInt16': 'integer',\n  'UInt32': 'number',\n  'UInt64': 'number',\n  'Float32': 'number',\n  'Float64': 'number',\n  'BOOLEAN': 'boolean',\n  'String': 'string'\n}\n\nconst DEFAULT_SEMANTIC_TYPE = {\n  'number': 'quantitative',\n  'integer': 'quantitative',\n  'boolean': 'nominal',\n  'date': 'temporal',\n  'string': 'nominal'\n} as const;\n\nconst DEFAULT_ANALYTIC_TYPE = {\n  'number': 'measure',\n  'integer': 'measure',\n  'boolean': 'dimension',\n  'date': 'dimension',\n  'string': 'dimension'\n} as const;\n\nexport function dbDataType2DataType (dbDataType: string): IDataType {\n  return DB_DATA_TYPE_TO_DATA_TYPE[dbDataType] || 'string';\n}\n\nexport function inferSemanticTypeFromDataType (dataType: IDataType): ISemanticType {\n  return DEFAULT_SEMANTIC_TYPE[dataType]\n}\n\nexport function inferAnalyticTypeFromDataType (dataType: IDataType): IAnalyticType {\n  return DEFAULT_ANALYTIC_TYPE[dataType];\n}\n\nexport {\n  isASCII,\n  inferAnalyticType,\n  inferAnalyticTypeFromSemanticType,\n  isSetEqual,\n  FileLoader,\n  deepcopy,\n  Transform\n}","export function intersect (A: string[], B: string[]) {\n    const bset = new Set(B);\n    for (let a of A) {\n        if (bset.has(a)) return true\n    }\n    return false;\n}","import { Computation, IDataViewMeta, IInsightSpace } from 'visual-insights';\nimport { IVizSpace } from '../../store/exploreStore';\nimport { isSetEqual } from '../../utils';\nimport { intersect } from './utils';\nexport class RathCHEngine extends Computation.ClickHouseEngine {\n    public async createInsightSpaces(dataViewMetas: IDataViewMeta[] = this.dataViewMetas): Promise<IInsightSpace[]> {\n        return this.createInsightSpaces(dataViewMetas);\n    }\n    public async scanDetail() {\n        return []\n    }\n    public async associate(space: { dimensions: string[]; measures: string[] }) {\n        const { insightSpaces } = this;\n        // const space = insightSpaces[spaceIndex];\n        const { dimensions, measures, dataGraph } = this;\n        // type1: meas cor assSpacesT1\n        // type2: dims cor assSpacesT2\n        // this.vie.dataGraph.DG\n        const dimIndices = space.dimensions.map(f => dimensions.findIndex(d => f === d));\n        const meaIndices = space.measures.map(f => measures.findIndex(m => f === m));\n        const assSpacesT1: IVizSpace[] = [];\n        const assSpacesT2: IVizSpace[] = [];\n        for (let i = 0; i < insightSpaces.length; i++) {\n            if (!intersect(insightSpaces[i].dimensions, space.dimensions)) continue;\n            if (isSetEqual(insightSpaces[i].measures, space.measures)) continue;\n            if (!isSetEqual(insightSpaces[i].dimensions, space.dimensions)) continue;\n            let t1_score = 0;\n            const iteMeaIndices = insightSpaces[i].measures.map(f => measures.findIndex(m => f === m));\n            if (dataGraph !== null) {\n                for (let j = 0; j < meaIndices.length; j++) {\n                    for (let k = 0; k < iteMeaIndices.length; k++) {\n                        t1_score += dataGraph.MG[j][k]\n                    }\n                }\n            }\n            t1_score /= (meaIndices.length * iteMeaIndices.length)\n            if (t1_score > 0.7) {\n                // const spec = await specify(i);\n                const spec = await this.specification(insightSpaces[i]);\n                if (spec) {\n                    assSpacesT1.push({\n                        ...insightSpaces[i],\n                        score: t1_score,\n                        schema: spec.schema,\n                        dataView: spec.dataView\n                    })\n                }\n            }\n        }\n        for (let i = 0; i < insightSpaces.length; i++) {\n            if (!intersect(insightSpaces[i].measures, space.measures)) continue;\n            if (isSetEqual(insightSpaces[i].dimensions, space.dimensions)) continue;\n            // if (!isSetEqual(insightSpaces[i].measures, space.measures)) continue;\n            let t1_score = 0;\n            const iteDimIndices = insightSpaces[i].dimensions.map(f => dimensions.findIndex(m => f === m));\n            if (dataGraph !== null) {\n                for (let j = 0; j < dimIndices.length; j++) {\n                    for (let k = 0; k < iteDimIndices.length; k++) {\n                        t1_score += dataGraph.DG[j][k]\n                    }\n                }\n            }\n            t1_score /= (dimIndices.length * iteDimIndices.length)\n            if (t1_score > 0.65) { // (1 + 0.3) / 2\n                const spec = await this.specification(insightSpaces[i]);\n                if (spec) {\n                    assSpacesT1.push({\n                        ...insightSpaces[i],\n                        score: t1_score,\n                        schema: spec.schema,\n                        dataView: spec.dataView\n                    })\n                }\n            }\n        }\n        assSpacesT1.sort((a, b) => (b.score || 0) - (a.score || 0))\n        assSpacesT2.sort((a, b) => (b.score || 0) - (a.score || 0))\n        return {\n            assSpacesT1,\n            assSpacesT2\n        }\n    }\n}","import { GroupIntention } from '../intention/groups';\nexport const KNNClusterWorker = async (aggData, dimensions, measures) => {\n    if (dimensions.length < 2)\n        return null;\n    let sig = 0;\n    let groupIntention = new GroupIntention({\n        dataSource: aggData,\n        dimensions,\n        measures,\n        K: 8,\n    });\n    sig = groupIntention.getSignificance(measures.concat(dimensions.slice(0, -1)), dimensions.slice(-1));\n    return {\n        dimensions,\n        measures,\n        significance: sig,\n    };\n};\n","import { IInsightSpace, Insight } from 'visual-insights'\nimport { ViewSpace } from 'visual-insights/build/esm/insights/InsightFlow/engine';\nimport { KNNClusterWorker } from 'visual-insights/build/esm/insights/workers/KNNCluster';\nimport { IVizSpace } from '../../store/exploreStore';\nimport { isSetEqual } from '../../utils';\nimport { intersect } from './utils';\n\nconst VIEngine = Insight.VIEngine;\n\nexport class RathEngine extends VIEngine {\n    public constructor() {\n        super();\n        this.workerCollection.register('clusters', KNNClusterWorker);\n        this.workerCollection.enable('clusters', true);\n        this.DIMENSION_NUM_IN_VIEW = {\n            MIN: 0,\n            MAX: 3\n        }\n        // vie.workerCollection.register('identity', identityWorker);\n        // vie.workerCollection.enable(DefaultIWorker.outlier, false);\n        // vie.workerCollection.enable(DefaultIWorker.trend, false);\n    }\n    public async createInsightSpaces(viewSpaces: ViewSpace[] = this.subSpaces): Promise<IInsightSpace[]> {\n        const ansSpaces = await this.exploreViews(viewSpaces);\n        this.insightSpaces = ansSpaces;\n        return ansSpaces\n    }\n    public async scanDetail(viewSpace: ViewSpace) {\n        const context = this;\n        // @ts-ignore TODO: FIX this in visual insights\n        const { cube, fieldDictonary } = context;\n        const { dimensions, measures } = viewSpace;\n        const cuboid = cube.getCuboid(viewSpace.dimensions);\n        const aggData = cuboid.getState(measures, measures.map(() => 'sum'));\n        const insightSpaces: IInsightSpace[] = []\n        const taskPool: Promise<void>[] = [];\n        this.workerCollection.each((iWorker, name) => {\n            const task = async () => {\n                const result = await iWorker(aggData, dimensions, measures, fieldDictonary, context);\n                if (result) {\n                    result.type = name;\n                    insightSpaces.push(result)\n                }\n            }\n            taskPool.push(task());\n        })\n        await Promise.all(taskPool);\n        return insightSpaces\n    }\n    public async searchPointInterests(viewSpace: ViewSpace) {\n        // const globalMeasures = this.measures;\n        let ansSet: any[] = []\n        if (viewSpace.dimensions.length > 0) {\n            const cuboid = this.cube.getCuboid(viewSpace.dimensions);\n            const globalDist = this.cube.getCuboid([]).getState(viewSpace.measures, viewSpace.measures.map(() => 'dist'));\n            const localDist = cuboid.getState(viewSpace.measures, viewSpace.measures.map(() => 'dist'))\n            if (globalDist.length === 0) return ansSet;\n            const globalDistMapByMeasure: Map<string, number[]> = new Map();\n            for (let mea of viewSpace.measures) {\n                const _sum: number = globalDist[0][mea].reduce((total: number, value: number) => total + value, 0)\n                const pbDist: number[] = globalDist[0][mea].map((v: number) => v / _sum)\n                globalDistMapByMeasure.set(mea, pbDist);\n            }\n            for (let ld of localDist) {\n                let EKL = 0;\n                for (let mea of viewSpace.measures) {\n                    let kl = 0;\n                    const globalPbDist: number[] = globalDistMapByMeasure.get(mea)!;\n                    const localDist: number[] = ld[mea];\n                    const localSum: number = localDist.reduce((total, value) => total + value, 0);\n                    for (let b = 0; b < globalPbDist.length; b++) {\n                        const px = localDist[b] / localSum;\n                        const py = globalPbDist[b]\n                        if (px > 0 && py > 0) {\n                            kl += px * Math.log2(px / py)\n                        }\n                    }\n                    EKL += kl;\n                }\n                EKL /= viewSpace.measures.length\n                ansSet.push({\n                    ...ld,\n                    kl: EKL\n                })\n            }\n            \n        //     for (let mea of viewSpace.measures) {\n        //         const distList = localDist.map(r => ({\n        //             // TODO: 讨论是否应当直接使用count\n        //             // props: 节省计算量\n        //             // cons: 强依赖于cube必须去计算count\n        //             ...r,\n        //             freq: r[mea].reduce((total: number, value: number) => total + value, 0),\n        //             dist: r[mea]\n        //         }))\n        //         if (globalDist.length > 0) {\n        //             const globalSum = globalDist[0][mea].reduce((total: number, value: number) => total + value, 0);\n        //             const globalProbDist = globalDist[0][mea].map((v: number) => v / globalSum)\n        //             for (let i = 0; i < distList.length; i++) {\n        //                 let kl = 0;\n        //                 for (let b = 0; b < distList[i].dist.length; b++) {\n        //                     const px = distList[i].dist[b] / distList[i].freq\n        //                     const py = globalProbDist[b];\n        //                     if (px > 0 && py > 0) {\n        //                         kl += px * Math.log2(px / py);\n        //                     }\n        //                 }\n        //                 ansSet.push({\n        //                     ...distList[i],\n        //                     kl\n        //                 })\n        //             }\n        //         }\n        //     }\n        } else {\n            // todo\n        }\n        ansSet.sort((a, b) => b.kl - a.kl)\n        return ansSet\n    }\n    public async associate(space: { dimensions: string[]; measures: string[] }) {\n        const { insightSpaces } = this;\n        const { dimensions, measures, dataGraph } = this;\n        // type1: meas cor assSpacesT1\n        // type2: dims cor assSpacesT2\n        // this.vie.dataGraph.DG\n        const dimIndices = space.dimensions.map(f => dimensions.findIndex(d => f === d));\n        const meaIndices = space.measures.map(f => measures.findIndex(m => f === m));\n        const assSpacesT1: IVizSpace[] = [];\n        const assSpacesT2: IVizSpace[] = [];\n        for (let i = 0; i < insightSpaces.length; i++) {\n            // if (i === spaceIndex) continue;\n            if (!intersect(insightSpaces[i].dimensions, space.dimensions)) continue;\n            if (isSetEqual(insightSpaces[i].measures, space.measures)) continue;\n            if (!isSetEqual(insightSpaces[i].dimensions, space.dimensions)) continue;\n            let t1_score = 0;\n            const iteMeaIndices = insightSpaces[i].measures.map(f => measures.findIndex(m => f === m));\n            if (dataGraph !== null) {\n                for (let j = 0; j < meaIndices.length; j++) {\n                    for (let k = 0; k < iteMeaIndices.length; k++) {\n                        t1_score += dataGraph.MG[meaIndices[j]][iteMeaIndices[k]]\n                    }\n                }\n            }\n            t1_score /= (meaIndices.length * iteMeaIndices.length)\n            if (t1_score > 0.7) {\n                const card = insightSpaces[i].dimensions.map(d => this.fields.find(f => f.key === d))\n                .filter(f => f !== undefined)\n                .map(f => Number(f?.features.unique))\n                .reduce((t, v) => t * v, 1)\n                const spec = this.specification(insightSpaces[i])\n                if (spec) {\n                    // assSpacesT1.push({\n                    //     schema: spec.schema,\n\n                    // })\n                    assSpacesT1.push({\n                        ...insightSpaces[i],\n                        score: t1_score / card / iteMeaIndices.length,\n                        card,\n                        // ...spec,\n                        schema: spec.schema,\n                        dataView: spec.dataView\n                    })\n                }\n            }\n        }\n        for (let i = 0; i < insightSpaces.length; i++) {\n            // if (i === spaceIndex) continue;\n            if (!intersect(insightSpaces[i].measures, space.measures)) continue;\n            if (isSetEqual(insightSpaces[i].dimensions, space.dimensions)) continue;\n            // if (!isSetEqual(insightSpaces[i].measures, space.measures)) continue;\n            let t1_score = 0;\n            const iteDimIndices = insightSpaces[i].dimensions.map(f => dimensions.findIndex(m => f === m));\n            if (dataGraph !== null) {\n                for (let j = 0; j < dimIndices.length; j++) {\n                    for (let k = 0; k < iteDimIndices.length; k++) {\n                        t1_score += dataGraph.DG[dimIndices[j]][iteDimIndices[k]]\n                    }\n                }\n            }\n            t1_score /= (dimIndices.length * iteDimIndices.length)\n            if (t1_score > 0.35) { // (1 + 0.3) / 2\n                const card = insightSpaces[i].dimensions.map(d => this.fields.find(f => f.key === d))\n                .filter(f => f !== undefined)\n                .map(f => Number(f?.features.unique))\n                // .reduce((t, v) => t * v, 1)\n                .reduce((t, v) => t + v, 0)\n                const spec = this.specification(insightSpaces[i])\n                if (spec) {\n                    assSpacesT2.push({\n                        ...insightSpaces[i],\n                        score: t1_score / card,\n                        card,\n                        ...spec\n                    })\n                }\n            }\n        }\n        // assSpacesT1.sort((a, b) => (b.score || 0) / (b.impurity || 0) - (a.score || 0) / (a.impurity || 0))\n        // assSpacesT2.sort((a, b) => (b.score || 0) / (b.impurity || 0) - (a.score || 0) / (a.impurity || 0))\n        assSpacesT1.sort((a, b) => (b.score || 0) - (a.score || 0))\n        assSpacesT2.sort((a, b) => (b.score || 0) - (a.score || 0))\n        return {\n            assSpacesT1,\n            assSpacesT2\n        }\n    }\n}","import { IFieldSummary, IInsightSpace } from \"visual-insights\";\nimport { ViewSpace } from \"visual-insights/build/esm/insights/InsightFlow/engine\";\nimport { StatFuncName } from \"visual-insights/build/esm/statistics\";\nimport { IFieldMeta, IRow, ISyncEngine } from \"../../interfaces\";\nimport { IRathStorage } from \"../../utils/storage\";\nimport { RathCHEngine } from \"./clickhouse\";\n// import { isSetEqual } from \"../../utils/index\";\nimport { RathEngine } from \"./core\";\n\nconst EngineRef: { current: RathEngine | null, mode: 'webworker' } | { current: RathCHEngine | null, mode: 'clickhouse' } = {\n    mode: 'webworker',\n    current: null\n}\n\nexport interface MessageProps {\n    task: 'init' | 'destroy' | 'start' | 'specification' | 'associate' | 'detail' | 'cube' | 'download' | 'upload' | 'sync' | 'subinsight';\n    props?: any\n}\n\nfunction initEngine (engineMode: string) {\n    if (engineMode === 'webworker') {\n        EngineRef.current = new RathEngine();\n        EngineRef.mode = engineMode;\n    } else if (engineMode === 'clickhouse') {\n        EngineRef.current = new RathCHEngine();\n        EngineRef.current.utils.setCHConfig({\n            protocol: 'https',\n            host: 'localhost',\n            port: 2333,\n            path: '/api/ch/general'\n        })\n        EngineRef.mode = engineMode;\n    }\n    console.log(`Rath engine is created, engine mode is [${EngineRef.mode}].`)\n}\n\nfunction destroyEngine () {\n    EngineRef.current = null;\n}\n\ntype StartPipeLineProps = {\n    mode: 'webworker';\n    dataSource: IRow[];\n    fieldMetas: IFieldMeta[];\n} | {\n    mode: 'clickhouse';\n    fieldMetas: IFieldMeta[];\n    viewName: string;\n}\n\nasync function startPipeLine (props: StartPipeLineProps) {\n    const times: number[] = [];\n    const prints: IRow[] = [];\n    let insightSpaces: IInsightSpace[] = [];\n    let viewSampleData: IRow[] = [];\n    let viewFields: IFieldSummary[] = [];\n    times.push(performance.now())\n    console.log('[computation engine mode]', props.mode)\n    if (EngineRef.mode === 'webworker' && props.mode === 'webworker') {\n        const { dataSource, fieldMetas } = props;\n        const fieldsProps = fieldMetas.map(f => ({ key: f.fid, semanticType: f.semanticType, analyticType: f.analyticType, dataType: '?' as '?' }));\n        const engine = EngineRef.current;\n        if (engine === null) throw new Error('Engine is not created.');\n        engine.setData(dataSource)\n            .setFields(fieldsProps)\n        engine.univarSelection();\n        times.push(performance.now())\n        prints.push({ task: 'init&univar', value: times[times.length - 1] - times[times.length - 2] })\n        engine.buildGraph();\n        times.push(performance.now())\n        prints.push({ task: 'co-graph', value: times[times.length - 1] - times[times.length - 2] })\n        engine.clusterFields();\n        times.push(performance.now())\n        prints.push({ task: 'clusters', value: times[times.length - 1] - times[times.length - 2] })\n        engine.buildCube();\n        times.push(performance.now())\n        prints.push({ task: 'cube', value: times[times.length - 1] - times[times.length - 2] })\n        engine.buildSubspaces();\n        times.push(performance.now())\n        prints.push({ task: 'subspaces', value: times[times.length - 1] - times[times.length - 2] });\n        await engine.createInsightSpaces();\n        times.push(performance.now())\n        prints.push({ task: 'insights', value: times[times.length - 1] - times[times.length - 2] })\n        // engine.setInsightScores();\n        // times.push(performance.now())\n        // prints.push({ task: 'scores', value: times[times.length - 1] - times[times.length - 2] })\n        engine.insightSpaces = engine.insightSpaces.filter(s => typeof s.score === 'number' && !isNaN(s.score));\n        // engine.insightSpaces.sort((a, b) => Number(a.score) - Number(b.score));\n        engine.insightSpaces.sort((a, b) => Number(b.impurity) - Number(a.impurity));\n        viewFields = engine.fields;\n        insightSpaces = engine.insightSpaces;\n        viewSampleData = engine.dataSource;\n        console.log('insightspaces, length', insightSpaces.length)\n        console.log('insightspaces, length', engine.subSpaces.length)\n    } else if (EngineRef.mode === 'clickhouse' && props.mode === 'clickhouse') {\n        const engine = EngineRef.current;\n        if (engine === null) throw new Error('Engine is not created.');\n        const { viewName } = props;\n        // engine.setRawFields(fieldsProps);\n        await engine.uvsView(viewName);\n        await engine.buildDataGraph();\n        engine.clusterFields();\n        engine.buildSubspaces();\n        insightSpaces = await engine.fastInsightRecommand();\n        viewFields = engine.fields;\n        viewSampleData = await engine.loadData(viewName);\n    } else {\n        throw new Error(`Engine mode is not support: ${props.mode}`)\n    }\n    return {\n        insightSpaces,\n        fields: viewFields,\n        dataSource: viewSampleData,\n        performance: prints\n    };\n}\n\nasync function specify (space: IInsightSpace) {\n    const engine = EngineRef.current;\n    if (engine === null) throw new Error('Engine is not created.');\n    return engine.specification(space)\n}\n\nfunction scanDetails (spaceIndex: number) {\n    const engine = EngineRef.current;\n    if (engine === null) throw new Error('Engine is not created.');\n    const space = engine.insightSpaces[spaceIndex];\n    if (space) {\n        return engine.scanDetail(space)\n    } else {\n        throw new Error(`insightSpaces(${spaceIndex}/${engine.insightSpaces.length}) not exist.`)\n    }\n}\n\nasync function associate (props: { dimensions: string[]; measures: string[] }) {\n    const engine = EngineRef.current;\n    if (engine === null) throw new Error('Engine is not created.');\n    engine.associate(props);\n    if (EngineRef.mode === 'webworker' && EngineRef.mode === 'webworker') {\n        return engine.associate(props);\n    } else if (EngineRef.mode === 'clickhouse' && EngineRef.mode === 'clickhouse') {\n        return engine.associate(props);\n    }\n}\n\nfunction aggregate (props: { dimensions: string[]; measures: string[]; aggregators: StatFuncName[] }): IRow[] {\n    if (EngineRef.mode === 'webworker' && EngineRef.mode === 'webworker') {\n        const engine = EngineRef.current;\n        if (engine === null) throw new Error('Engine is not created.');\n        const { dimensions, measures, aggregators } = props;\n        const cube = engine.cube;\n        const cuboid = cube.getCuboid(dimensions);\n        const aggData = cuboid.getState(measures, aggregators);\n        return aggData;\n    } else if (EngineRef.mode === 'clickhouse' && EngineRef.mode === 'clickhouse') {\n        const engine = EngineRef.current;\n        if (engine === null) throw new Error('Engine is not created.');\n        // engine.loadD\n        // return engine.associate(spaceIndex);\n        return []\n    }\n    return []\n}\n\nfunction exportResult (): Pick<IRathStorage, 'dataStorage' | 'engineStorage'> {\n    if (EngineRef.mode === 'webworker') {\n        const engine = EngineRef.current\n        if (engine === null) throw new Error('Engine is not created.');\n        const ser = engine.serialize();\n        return {\n            dataStorage: JSON.stringify(ser.dataStorage),\n            engineStorage: JSON.stringify(ser.storage)\n        }\n    } else {\n        throw new Error('Not supported current data engine type.')\n    }\n}\n\nfunction importFromUploads(props: Pick<IRathStorage, 'dataStorage' | 'engineStorage'>) {\n    if (EngineRef.mode === 'webworker') {\n        const engine = EngineRef.current\n        if (engine === null) throw new Error('Engine is not created.');\n        const { dataStorage, engineStorage } = props;\n        engine.deSerialize(JSON.parse(engineStorage), JSON.parse(dataStorage))\n    } else {\n        throw new Error('Not supported current data engine type.')\n    }\n}\n\nfunction syncEngine (): ISyncEngine {\n    if (EngineRef.mode === 'webworker') {\n        const engine = EngineRef.current\n        if (engine === null) throw new Error('Engine is not created.');\n        return {\n            fields: engine.fields,\n            dataSource: engine.dataSource,\n            insightSpaces: engine.insightSpaces\n        }\n    } else {\n        throw new Error('Not supported current data engine type.')\n    }\n}\n\nasync function subInsight (props: ViewSpace) {\n    if (EngineRef.mode === 'webworker') {\n        const engine = EngineRef.current\n        if (engine === null) throw new Error('Engine is not created.');\n        const res = await engine.searchPointInterests(props)\n        return res\n    } else {\n        throw new Error('Not supported current data engine type.')\n    }\n}\n\nexport async function router (e: { data: MessageProps }, onSuccess: (res?: any) => void, onFailed: (res: string) => void) {\n    const req = e.data;\n    console.log(req.task, 'worker router')\n    try {\n        switch (req.task) {\n            case 'cube':\n                const aggData = aggregate(req.props);\n                onSuccess(aggData);\n                break;\n            case 'init':\n                initEngine(req.props);\n                onSuccess()\n                break;\n            case 'destroy':\n                destroyEngine();\n                onSuccess()\n                break;\n            case 'start':\n                const res_start = await startPipeLine(req.props);\n                onSuccess(res_start);\n                break;\n            case 'specification':\n                const res_spec = await specify(req.props);\n                onSuccess(res_spec)\n                break;\n            case 'associate':\n                const res_asso = await associate(req.props);\n                onSuccess(res_asso)\n                break;\n            case 'detail':\n                const res_details = scanDetails(req.props);\n                onSuccess(res_details)\n                break;\n            case 'download':\n                const res_result = exportResult();\n                onSuccess(res_result)\n                break;\n            case 'sync':\n                const res_sync = syncEngine();\n                onSuccess(res_sync);\n                break;\n            case 'subinsight':\n                const res_subinsight = await subInsight(req.props);\n                onSuccess(res_subinsight);\n                break;\n            case 'upload':\n                const res_upload = importFromUploads(req.props);\n                onSuccess(res_upload)\n                break;\n            default:\n                throw new Error(`Unknow task: \"${req.task}\".`)\n        }\n    } catch (error) {\n        onFailed(`[${req.task}]${error}`)\n    }\n}","/* eslint no-restricted-globals: 0 */\n\nimport { router } from './service';\n\nfunction main (e) {\n    router(e, (res) => {\n        self.postMessage({\n            success: true,\n            data: res\n        })\n    }, (message) => {\n        self.postMessage({\n            success: false,\n            message: `[worker]${message}`\n        })\n    })\n}\n\nself.addEventListener('message', main, false);"],"sourceRoot":""}