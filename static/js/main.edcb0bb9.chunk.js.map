{"version":3,"sources":["workers/dashboard.worker.js","workers/cluster.worker.js","workers/combineFields.worker.js","workers/fieldsSummary.worker.js","workers/groupFields.worker.js","service.ts","actions.ts","state.tsx","utils/fileParser.ts","utils/transform.ts","utils/useComposeState.tsx","components/preference.tsx","demo/vegaBase.tsx","../../visual-insights/build/esm/utils.js","../../visual-insights/build/esm/specification.js","../../visual-insights/build/esm/insights/cluster.js","../../visual-insights/build/esm/cleaner/index.js","../../visual-insights/build/esm/sampling/index.js","plugins/visSummary/index.tsx","plugins/visSummary/description.tsx","pages/gallery/association/digDimension.tsx","pages/gallery/association/index.tsx","pages/gallery/index.tsx","pages/notebook/distributionChart.tsx","pages/notebook/fieldAnalysis.tsx","pages/notebook/subspaces.tsx","pages/notebook/cluster.tsx","pages/notebook/index.tsx","components/table.tsx","components/fieldConfig.tsx","pages/dataSource/clean.ts","pages/dataSource/useDataSource.tsx","utils/deepcopy.ts","pages/dataSource/index.tsx","pages/dashBoard/indicatorCard.tsx","pages/dashBoard/combinedChart.tsx","pages/dashBoard/index.tsx","components/userSettings.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","server","workerService","worker","data","Promise","resolve","reject","postMessage","onmessage","e","console","log","onerror","success","message","error","getFieldsSummaryService","dataSource","fields","useServer","a","fieldSummaryList","fetch","method","headers","body","JSON","stringify","res","json","result","Error","fieldsSummaryWorker","terminate","getGroupFieldsService","ans","groupedData","newFields","groupFieldsWorker","combineFieldsService","dimensions","measures","operator","subspaceList","combineFieldsWorker","maxGroupNumber","combinedSpaces","viewSpaces","spaces","map","v","i","index","clusterWorker","generateDashBoard","subspaces","dashBoardList","dashBoardGeneratorWorker","univariateSummary","state","updateState","params","filter","field","type","name","f","originSummary","fieldWithTypeList","includes","fieldName","groupedResult","newBIFields","groupedField","find","newDimensions","groupedSummary","draft","cookedDataSource","summary","origin","grouped","loading","concat","subspaceSearch","subspaceSearching","orderedDimensions","d","target","g","entropy","Infinity","sort","b","cookedDimensions","cookedMeasures","selectedDimensions","slice","Math","round","length","topK","dimensionSize","extractInsights","gallery","univariateResult","actions","getDashBoard","dashBoard","setAutoFreeze","initState","currentPage","rawData","subspacePercentSize","GloalStateContext","createContext","GlobalStateProvider","children","useState","setState","getters","dimScores","useMemo","maxEntropy","useGetters","stateUpdater","produce","draftState","Provider","value","actionName","useGlobalState","useContext","csvLoader","file","Papa","parse","complete","results","row","record","forEach","jsonLoader","reader","FileReader","readAsText","onload","ev","transNumber","num","isNaN","Number","useComposeState","nextState","checkboxStyles","root","marginTop","aggregationList","key","text","PreferencePanel","props","show","onUpdateConfig","onClose","config","aggregator","setAggregator","defaultAggregated","setDefaultAggregated","defaultStack","setDefaultStack","useEffect","Panel","isOpen","PanelType","smallFixedFar","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","Label","Stack","verticalFill","tokens","childrenGap","padding","ComboBox","selectedKey","label","allowFreeform","autoComplete","options","onChange","option","Checkbox","styles","checked","isChecked","geomTypeMap","interval","line","point","density","BaseChart","schema","position","color","opacity","size","shape","geomType","facets","page","fieldFeatures","container","useRef","getFieldType","targetField","aggregatedMeasures","mea","op","as","table","aggregate","asFields","adjustField","aggField","getSpecification","fieldMap","x","y","column","spec","width","values","basicSpec","mark","tooltip","encoding","channel","stack","transform","selection","groupby","dim","Boolean","sliderSpec","brush","encodings","vconcat","current","embed","ref","memberCount","counter","Map","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","undefined","_step4","_iterator4","Symbol","iterator","next","done","member","has","set","get","err","return","entries","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","geomTypes","area","path","findBestField","fieldRankList","choosen","aestheticMapping","dimFields","visualElements","highFacets","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","priority","fieldLeft","typeIndex","channelList","aggData","dimIndex","dimMembers","geom","turnAdjMatrix2List","matrix","edges","j","abs","parents","n","union","n1","n2","p1","p2","dropNullColumn","keepFields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","finalFields","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dropNull","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","keep","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_loop","every","isFieldNumeric","toString","isNullValue","useMode","fieldNames","countMap","modeMap","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_fieldName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_counter","members","max","maxPos","newDataSource","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_record","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_fieldName2","simpleClean","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","reservoirSampling","sampleSpace","len","pos","random","StoryTeller","space","spaceList","isTeachingBubbleVisible","setIsTeachingBubbleVisible","sortedFieldsScores","mostInfluencedDimension","sp","some","bestMeasure","measuresInView","min","minPos","countDiffField","join","DefaultButton","id","TeachingBubble","calloutProps","directionalHint","DirectionalHint","bottomCenter","isWide","hasCloseIcon","headline","VisDescription","similarityThrehold","topKRelatedSpace","measuresRelatedScore","measures1","measures2","meaSet","Set","meaSet1","meaSet2","meaVec1","meaVec2","score","sqrt","useDigDimension","interestedViewSpace","fieldScores","relatedSpaces","visualConfig","subDim","rankedRelatedSpaces","measureSimilarity","relatedScore","spaceFieldScores","specification","Association","digDimensionProps","onSelectView","relatedCharts","className","view","currentSpace","dimensions1","dimensions2","dim1","style","border","margin","overflow","fontSize","horizontal","IconButton","iconProps","iconName","title","Gallery","setCurrentPage","insightBoard","fieldConfig","configPanel","dataConfig","pageStatus","setPageStatus","showAssociation","setShowAssociation","setVisualConfig","setViewSpaces","dataView","setDataView","gotoPage","pageNo","clusterMeasures","correlationMatrix","then","viewState","subspace","ProgressIndicator","description","marginBottom","ariaLabel","dir","allowDisabledFocus","findIndex","DistributionChart","chart","fieldType","hasIndex","test","memberName","exec","groups","left","sortBy","background","height","axis","columns","minWidth","maxWidth","getIconNameByFieldType","contrastColor","FieldAnalsis","entropyRange","originEntropy","s","onRenderCompactCard","item","toFixed","distribution","onRenderExpandedCard","DetailsList","compact","items","selectionMode","SelectionMode","none","onRenderItemColumn","expandingCardProps","renderData","compactCardHeight","expandedCardHeight","fieldContent","bgColor","Icon","range","chroma","scale","domain","rgb","bgColorStr","fontColorStr","HoverCard","expandedCardOpenDelay","instantOpenOnClick","boxShadow","backgroundColor","encodeArr","arr","Subspaces","onSpaceChange","curIndex","setCurIndex","spaceChart","relationChart","measureName","measureValue","on","reverse","condition","addEventListener","datum","targetSpace","m","correlation","scheme","ClusterBoard","adjMatrix","onFocusGroup","clusterResult","groupNumber","edgesInMST","inCutEdge","edge","kruskalMST","treeData","nodes","group","NoteBook","isAggregated","setIsAggregated","clusterState","setClusterState","setMeasuresInView","Slider","valueFormat","showValue","step","measInView","Toggle","defaultChecked","onText","offText","DataTable","maxHeight","FieldPanel","setFields","updateFieldType","cleanMethodList","useDataSource","cleanMethod","Transform","preparedData","Cleaner","cleanData","deepcopy","SampleKey","SampleOptions","reservoir","DataSourceBoard","dispatch","setCleanMethod","sampleMethod","setSampleMethod","sampleSize","setSampleSize","dataSetting","fileEle","labelId","useId","files","tmpFields","FileLoader","Sampling","commandBarList","click","disabled","onExtractInsights","Callout","role","gapSpace","setInitialFocus","hidden","required","ChoiceGroup","defaultSelectedKey","ariaLabelledBy","val","multiple","accept","display","CommandBar","overflowButtonProps","fontWeight","Card","styled","div","IndicatorCard","datalib","parts","split","replace","numberWithCommas","CombinedChart","globalFilters","setGlobalFilters","chartStateList","setChartStateList","filedDomains","fieldList","domainDict","dsLen","fLen","chartSpecList","board","shouldFieldAggregate","specList","markType","xType","yType","xAgg","yAgg","mustDefineScale","autosize","sl","dataSourceContainer","signalHandler","vsourceList","filters","isRange","ds","float","overflowY","minHeight","VegaLite","signalListeners","list","nextList","DashBoardPage","dashBoardIndex","setDashBoardIndex","Separator","overflowX","UserSettings","setShow","ActionButton","bottomLeftEdge","pivotList","itemKey","getLogoSrc","withGlasses","App","pivotKey","href","src","Pivot","onLinkClick","headersOnly","pivot","PivotItem","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edcb0bb9.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"a4fd1878c3a618ceb5cb.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"aea3e59a6c3f37c9b366.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"1d61e55cb576d2883047.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"bb5a87bb572bec58d788.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"c950a4ba8b93df3b88f3.worker.js\");\n};","import { DataSource,  Field, FieldType, OperatorType } from './global';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport dashBoardGeneratorWorker from './workers/dashboard.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport clusterWorker from './workers/cluster.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport combineFieldsWorker from './workers/combineFields.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport fieldsSummaryWorker from './workers/fieldsSummary.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport groupFieldsWorker from './workers/groupFields.worker';\n\nlet server = '//lobay.moe:8443';\n\nif (process.env.NODE_ENV !== 'production') {\n  console.log('using dev server');\n  server = '//localhost:8000';\n}\n\ninterface SuccessResult<T> {\n  success: true;\n  data: T;\n}\ninterface FailResult<T> {\n  success: false;\n  message: string;\n}\n\ntype Result<T> = SuccessResult<T> | FailResult<T>;\n\nfunction workerService<T, R> (worker: Worker, data: R): Promise<Result<T>> {\n  return new Promise<Result<T>>((resolve, reject) => {\n    worker.postMessage(data);\n    worker.onmessage = (e: MessageEvent) => {\n      console.log('worker res', e)\n      resolve(e.data)\n    }\n    worker.onerror = (e: ErrorEvent) => {\n      reject({\n        success: false,\n        message: e.error\n      })\n    }\n  })\n}\n\nexport interface View {\n  groups: string[][];\n  detail: [string[], any, number[][]];\n  score: number;\n}\n\n/**\n * statistic description for a field\n */\nexport interface FieldSummary {\n  fieldName: string;\n  entropy: number;\n  maxEntropy: number;\n  distribution: Array<{ memberName: string; count: number }>\n  type: FieldType\n}\nexport async function getFieldsSummaryService (dataSource: DataSource, fields: string[] | Field[], useServer?: boolean): Promise<FieldSummary[]> {\n  let fieldSummaryList: FieldSummary[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/fieldsSummary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          fields\n        })\n      })\n      const result: Result<FieldSummary[]> = await res.json();\n      if (result.success === true) {\n        fieldSummaryList = result.data;\n      } else {\n        throw new Error('[fields summary failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new fieldsSummaryWorker();\n    const result = await workerService<FieldSummary[], any>(worker, { dataSource, fields });\n    if (result.success === true) {\n      fieldSummaryList = result.data;\n    } else {\n      throw new Error('[fields summary failed]' + result.message)\n    }\n    worker.terminate()\n  }\n  return fieldSummaryList\n}\n\ninterface GroupFieldsResponse {\n  groupedData: DataSource;\n  newFields: Field[];\n  fields: Field[];\n}\nexport async function getGroupFieldsService (dataSource: DataSource, fields: Field[], useServer?: boolean): Promise<GroupFieldsResponse> {\n  let ans: GroupFieldsResponse = {\n    groupedData: [],\n    newFields: [],\n    fields: []\n  };\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/groupFields', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          fields\n        })\n      })\n      const result: Result<GroupFieldsResponse> = await res.json();\n      if (result.success === true) {\n        ans = result.data;\n      } else {\n        throw new Error('[group fields failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new groupFieldsWorker();\n    const result = await workerService<GroupFieldsResponse, any>(worker, { dataSource, fields });\n    if (result.success === true) {\n      ans = result.data;\n    } else {\n      throw new Error('[group fields failed]' + result.message)\n    }\n    worker.terminate();\n  }\n  return ans;\n}\n\nexport interface Subspace {\n  score: number;\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  correlationMatrix: number[][];\n}\nexport async function combineFieldsService (dataSource: DataSource, dimensions: string[], measures: string[], operator: OperatorType, useServer?: boolean): Promise<Subspace[]> {\n  let subspaceList: Subspace[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/combineFields', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          dimensions,\n          measures,\n          operator\n        })\n      })\n      const result: Result<Subspace[]> = await res.json();\n      if (result.success === true) {\n        subspaceList = result.data;\n      } else {\n        throw new Error('[combine fields failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new combineFieldsWorker();\n    const result = await workerService<Subspace[], any>(worker, { dataSource, dimensions, measures, operator });\n    if (result.success === true) {\n      subspaceList = result.data;\n    } else {\n      throw new Error('[combine fields failed]' + result.message)\n    }\n    worker.terminate()\n  }\n  return subspaceList\n}\n\nexport interface ViewCombinedSpace {\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  matrix: number[][];\n}\n\nexport interface ViewSpace {\n  index: number;\n  dimensions: string[];\n  measures: string[];\n  score: number;\n}\n\nexport async function clusterMeasures (maxGroupNumber: number, combinedSpaces: ViewCombinedSpace[], useServer?: boolean): Promise<ViewSpace[]> {\n  let viewSpaces: ViewSpace[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/clusterMeasures', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          maxGroupNumber,\n          spaces: combinedSpaces\n        })\n      });\n      const result: Result<ViewSpace[]> = await res.json();\n      if (result.success === true) {\n        viewSpaces = result.data.map((v, i) => {\n          return {\n            ...v,\n            index: i\n          }\n        });\n      } else {\n        throw new Error('[cluster measures]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new clusterWorker();\n    const result = await workerService<ViewSpace[], any>(worker, { maxGroupNumber, spaces: combinedSpaces });\n    if (result.success === true) {\n      viewSpaces = result.data.map((v, i) => {\n        return {\n          ...v,\n          index: i\n        }\n      });\n    } else {\n      throw new Error('[cluster measures]' + result.message)\n    }\n    worker.terminate();\n  }\n  return viewSpaces;\n}\n\ninterface ViewInDashBoard {\n  type: string;\n  dimensions: string[];\n  measures: string[];\n}\n\nexport type DashBoard = ViewInDashBoard[];\n\nexport async function generateDashBoard (dataSource: DataSource, dimensions: string[], measures: string[], subspaces: Subspace[], useServer?: boolean): Promise<DashBoard[]> {\n  let dashBoardList: DashBoard[] = [];\n  if (useServer) {\n    try {\n      const res =  await fetch(server + '/api/service/generateDashBoard', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          dimensions,\n          measures,\n          subspaces\n        })\n      });\n      const result = await res.json();\n      if (result.success) {\n        dashBoardList = result.data;\n      } else {\n        throw new Error('[generateDashBoard]' + result.message);\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new dashBoardGeneratorWorker();\n    const result = await workerService<DashBoard[], any>(worker, {\n        dataSource,\n        dimensions,\n        measures,\n        subspaces\n      });\n    if (result.success) {\n      dashBoardList = result.data;\n    } else {\n      throw new Error('[generateDashBoard]' + result.message);\n    }\n    worker.terminate()\n  }\n  \n  return dashBoardList;\n} ","import { DataSource, BIField, Field, OperatorType } from \"./global\";\nimport {\n  getFieldsSummaryService,\n  FieldSummary,\n  getGroupFieldsService,\n  combineFieldsService,\n  generateDashBoard\n} from \"./service\";\nimport { GlobalState, StateUpdater } from './state';\n\n\n\ntype Action<T> = (state: GlobalState, updateState: (updater:StateUpdater<GlobalState>) => void, params: T) => any;\n\n\nconst univariateSummary: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  const dimensions = fields\n    .filter(field => field.type === \"dimension\")\n    .map(field => field.name);\n  const measures = fields\n    .filter(field => field.type === \"measure\")\n    .map(field => field.name);\n  // updateState(draft => { draft.loading.univariateSummary = true })\n  try {\n    /**\n     * get summary of the orignal dataset(fields without grouped)\n     */\n    const originSummary = await getFieldsSummaryService(\n      dataSource,\n      fields.map(f => f.name),\n      state.useServer\n    );\n    // todo only group dimension.\n    let fieldWithTypeList: Field[] = originSummary\n      ? originSummary\n          .filter(f => dimensions.includes(f.fieldName))\n          .map(f => {\n            return {\n              name: f.fieldName,\n              type: f.type\n            };\n          })\n      : [];\n    /**\n     * bug:\n     * should not group measures!!!\n     */\n    const groupedResult = await getGroupFieldsService(\n      dataSource,\n      fieldWithTypeList,\n      state.useServer\n    );\n    const { groupedData, newFields } = groupedResult\n      ? groupedResult\n      : { groupedData: dataSource, newFields: fieldWithTypeList };\n    /**\n     * `newBIFields` shares the same length (size) with fields.\n     * It repalces some of the fields with high entropy with a grouped new field.\n     * newBIFields does not contain field before grouped.\n     */\n    const newBIFields: BIField[] = fields.map(field => {\n      let groupedField = newFields.find(\n        f => f.name === field.name + \"(group)\"\n      );\n      return {\n        name: groupedField ? groupedField.name : field.name,\n        type: field.type\n      };\n    });\n    const newDimensions: string[] = newBIFields\n      .filter(f => f.type === \"dimension\")\n      .map(f => f.name);\n\n    /**\n     * groupedSummary only contains newFields generated during `groupFieldsService`.\n     */\n    const groupedSummary = await getFieldsSummaryService(\n      groupedData,\n      newFields,\n      state.useServer\n    );\n    \n    updateState(draft => {\n      draft.cookedDataSource = groupedData;\n      draft.summary = {\n        origin: originSummary || [],\n        grouped: groupedSummary || []\n      }\n      draft.loading.univariateSummary = false;\n    });\n    // setFields(newBIFields);\n    // tmp solutions\n    let summary = (groupedSummary || []).concat(originSummary || []);\n    return {\n      groupedData,\n      summary,\n      newDimensions,\n      measures\n    }\n    // await SubspaceSeach(groupedData, summary, newDimensions, measures, \"sum\");\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.univariateSummary = false;\n    });\n  }\n}\n\n\n\ninterface SubspaceSeachParams {\n  groupedData: DataSource;\n  summary: FieldSummary[];\n  dimensions: string[];\n  measures: string[];\n  operator: OperatorType\n}\nconst subspaceSearch: Action<SubspaceSeachParams> = async (state, updateState, params) => {\n  const { groupedData: dataSource, summary, dimensions, measures, operator } = params;\n  updateState(draft => {\n    draft.loading.subspaceSearching = true;\n  });\n  let orderedDimensions: Array<{ name: string; entropy: number }> = [];\n  orderedDimensions = dimensions.map(d => {\n    let target = summary.find(g => g.fieldName === d);\n    return {\n      name: d,\n      entropy: target ? target.entropy : Infinity\n    };\n  });\n\n  orderedDimensions.sort((a, b) => a.entropy - b.entropy);\n  updateState(draft => {\n    draft.cookedDimensions = orderedDimensions.map(d => d.name);\n    draft.cookedMeasures = measures;\n  });\n  const selectedDimensions = orderedDimensions\n    .map(d => d.name)\n    .slice(\n      0,\n      Math.round(orderedDimensions.length * state.topK.dimensionSize)\n    );\n  try {\n    const subspaceList = await combineFieldsService(\n      dataSource,\n      selectedDimensions,\n      measures,\n      operator,\n      state.useServer\n    );\n    if (subspaceList) {\n      updateState(draft => {\n        draft.subspaceList = subspaceList;\n      });\n    }\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  }\n}\n\nconst extractInsights: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  updateState(draft => {\n    draft.loading.gallery = true\n  })\n  try {\n    const univariateResult = await univariateSummary(state, updateState, {\n      dataSource, fields\n    });\n      if (univariateResult) {\n        const {\n          groupedData,\n          summary,\n          newDimensions,\n          measures\n        } = univariateResult;\n        await subspaceSearch(state, updateState, {\n          groupedData, summary, dimensions: newDimensions, measures, operator: \"sum\"\n        });\n      }\n  } catch (error) {\n  } finally {\n    updateState(draft => {\n      draft.loading.gallery = false\n      draft.loading.gallery = false\n    })\n  }\n}\n\nconst getDashBoard: Action<{dataSource: DataSource, dimensions: string[], measures: string[]}> = async (state, updateState, params) => {\n  const { dataSource, dimensions, measures } = params;\n  updateState(draft => {\n    draft.loading.dashBoard = true\n  })\n  try {\n    const dashBoardList = await generateDashBoard(dataSource, dimensions, measures, state.subspaceList, state.useServer)\n    updateState(draft => {\n      draft.dashBoardList = dashBoardList;\n    })\n  } catch (error) {\n    console.error(error)\n  } finally {\n    updateState(draft => {\n      draft.loading.dashBoard = false\n    })\n  }\n}\nconst actions = {\n  univariateSummary,\n  subspaceSearch,\n  extractInsights,\n  getDashBoard\n}\nexport type Actions =  typeof actions\n\ntype valueof<T> = T[keyof T]\n\ntype Foo = Parameters<typeof subspaceSearch> // ReturnType\nexport type Test = valueof<{  [key in keyof Actions]: {\n  name: key,\n  params: Parameters<Actions[key]>[2]\n}}>\n\nexport default actions;\n","import produce, { Draft, setAutoFreeze } from 'immer';\nimport React, { useState, useMemo, createContext, useContext } from 'react';\nimport { DataSource, BIField, Field } from './global';\nimport { Subspace, FieldSummary, ViewSpace, DashBoard } from './service';\nimport actions, { Test, Actions } from './actions';\n\nsetAutoFreeze(false)\n\nexport interface GlobalState {\n  /**\n   * `currentPage` is the current page number of visualization in explore board.\n   */\n  currentPage: number;\n  /**\n   * use server to complete computing task, if not, use web worker.\n   */\n  useServer: boolean;\n  /**\n   * raw data is fetched and parsed data or uploaded data without any other changes.\n   * computed value `dataSource` will be calculated \n   */\n  rawData: DataSource;\n  /**\n   * fields contains fields with `dimension` or `measure` type.\n   * currently, this kind of type is not computed property unlike 'quantitative', 'nominal'...\n   * This is defined by user's purpose or domain knowledge.\n   */\n  fields: BIField[];\n  /**\n   * dataSource been cleaned and grouped which is readly for exploration.\n   */\n  cookedDataSource: DataSource;\n  cookedDimensions: string[];\n  cookedMeasures: string[];\n  /**\n   * subspaceList is ordered list by it score.\n   */\n  // subspaceList: Subspace[]\n  /**\n   * loading status for some service\n   * todo: \n   * manage the loading status in pages intead of globally.\n   */\n  loading: {\n    univariateSummary: boolean;\n    subspaceSearching: boolean;\n    gallery: boolean;\n    dashBoard: boolean;\n  };\n  \n  topK: {\n    /**\n     * top k percent subspace it will fetch.\n     */\n    subspacePercentSize: number;\n    dimensionSize: number;\n  }\n  maxGroupNumber: number;\n  subspaceList: Subspace[];\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n  viewSpaces: ViewSpace[];\n  dashBoardList: DashBoard[];\n}\n\ninterface Getters {\n  /**\n   * `dataSource` is computed data based on fields' property(dimension or measure).\n   * sometimes, uploaded data contains contains some measure field but they are parsed into string value, which is raw data.\n   * dataSource transform these fields into what they should be for future computation.\n   * This is usually happened when a csv file is uploaded.\n   */\n  dimScores: [string, number, number, Field][]\n}\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n\n// function createStore<S>(initState: S) {\n//   const [state, setState] = useState<S>(initState)\n\n//   return function useGlobalState(): [S, (stateUpdater: StateUpdater<S>) => void] {\n//     const updateState = (stateUpdater: StateUpdater<S>) => {\n//       const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n//       setState(nextState)\n//     }\n//     return [state, updateState]\n//   }\n// }\n\nconst initState: GlobalState = {\n  currentPage: 0,\n  useServer: false,\n  fields: [],\n  rawData: [],\n  cookedDataSource: [],\n  cookedDimensions: [],\n  cookedMeasures: [],\n  loading: {\n    univariateSummary: false,\n    subspaceSearching: false,\n    gallery: false,\n    dashBoard: false,\n  },\n  topK: {\n    subspacePercentSize: 0.3,\n    dimensionSize: 0.72\n  },\n  maxGroupNumber: 4,\n  subspaceList: [],\n  summary: {\n    origin: [],\n    grouped: []\n  },\n  viewSpaces: [],\n  dashBoardList: []\n};\ntype Dispatch<T> = (actionName: string, params: T) => void;\ntype valueof<T> = T[keyof T]\nconst GloalStateContext = createContext<[GlobalState, (updater:StateUpdater<GlobalState>) => void, <P extends Test>(actionName: P['name'], params: P['params']) => void, Getters]>(null!)\nfunction useGetters(state: GlobalState) {\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...state.summary.origin, ...state.summary.grouped].map(field => {\n      return [\n        field.fieldName,\n        field.entropy,\n        field.maxEntropy,\n        { name: field.fieldName, type: field.type }\n      ];\n    });\n  }, [state.summary])\n\n  const getters: Getters = {\n    dimScores\n  }\n\n  return getters;\n}\nexport function GlobalStateProvider({ children }: { children: React.ReactNode }) {\n  const [state, setState] = useState<GlobalState>(initState)\n\n  const getters = useGetters(state);\n  const updateState = (stateUpdater: StateUpdater<GlobalState>) => {\n    setState(state => {\n      const nextState = produce<GlobalState>(state, draftState => stateUpdater(draftState))\n      return nextState;\n    })\n  }\n\n  const dispatch: <P extends Test>(actionName: P['name'], params: P['params']) => void = (actionName, params) => {\n    if (typeof actions[actionName] === 'function') {\n\n      // todo: fix the any type\n      \n      actions[actionName](state, updateState, params as any);\n      // actions['subspaceSearch'](state, updateState, params)\n    }\n  }\n\n\n\n  return (\n    <GloalStateContext.Provider value={[state, updateState, dispatch, getters]}>\n      {children}\n    </GloalStateContext.Provider>\n  )\n}\nexport function useGlobalState() {\n  return useContext(GloalStateContext)\n}","import { Record, DataSource } from '../global';\nimport Papa from 'papaparse';\n\nexport function csvLoader (file: File) {\n  return new Promise<DataSource>((resolve, reject) => {\n    Papa.parse(file, {\n      complete (results, file) {\n        let data: string[][] = results.data;\n        let fields: string[] = data[0];\n        let rawData = data.slice(1).map(row => {\n          let record: Record = {};\n          fields.forEach((field, index) => {\n            record[field] = row[index]\n          })\n          return record\n        })\n        resolve(rawData)\n      },\n      error (error, file) {\n        reject(error)\n      }\n    })\n  })\n}\n\nexport function jsonLoader (file: File): Promise<DataSource> {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = (ev) => {\n      if (ev.target) {\n        try {\n          const rawData: DataSource = JSON.parse(ev.target.result as string);\n          resolve(rawData);\n        } catch (error) {\n          reject(error)\n        }\n      } else {\n        reject(ev)\n      }\n    }\n    reader.onerror = reject\n  })\n}","export function transNumber(num: any): number | null {\n  if (isNaN(num)) {\n    return null\n  }\n  return Number(num)\n}","import React, { useState } from 'react';\nimport produce, { Draft } from 'immer';\n/**\n * @param S type of the composed state\n */\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n/**\n * \n * @param initState\n * useComposeState helps you manage several state together, provided with immutable state change api\n * \n * example:\n * ```js\n * const [state, setState] = useComposeState({foo: 12, bar: { foo: 20}})\n * setState(draft => {\n *  draft.bar.foo = 100;\n * })\n * ```\n */\nexport default function useComposeState<S>(initState: S): [S, (stateUpdater: StateUpdater<S>) => void] {\n  const [state, setState] = useState<S>(initState)\n  const updateState = (stateUpdater: StateUpdater<S>) => {\n    const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n    setState(nextState)\n  }\n  return [state, updateState]\n}","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Stack, Checkbox, Panel, PanelType, ComboBox, Label } from 'office-ui-fabric-react';\nimport { Aggregator } from '../global';\nconst checkboxStyles = () => {\n  return {\n    root: {\n      marginTop: '10px'\n    }\n  };\n}\n\n// todo: import aggregators list from cube-core\nconst aggregationList: Array<{ key: Aggregator; text: string }> = [\n  { key: 'sum', text: 'Sum' },\n  { key: 'count', text: 'Count' },\n  { key: 'mean', text: 'Mean' }\n]\nexport interface PreferencePanelConfig {\n  aggregator: Aggregator;\n  defaultAggregated: boolean;\n  defaultStack: boolean\n}\nexport interface PreferencePanelProps {\n  show: boolean;\n  onUpdateConfig: (props: PreferencePanelConfig) => void;\n  onClose: () => void;\n  config: PreferencePanelConfig\n}\n\nconst PreferencePanel: React.FC<PreferencePanelProps> = (props) => {\n  const {\n    show = false,\n    onUpdateConfig,\n    onClose,\n    config\n  } = props;\n  \n  const [aggregator, setAggregator] = useState<Aggregator>('sum');\n  const [defaultAggregated, setDefaultAggregated] = useState(true);\n  const [defaultStack, setDefaultStack] = useState(true);\n  \n  useEffect(() => {\n    const { aggregator, defaultAggregated, defaultStack } = config;\n    setAggregator(aggregator);\n    setDefaultAggregated(defaultAggregated);\n    setDefaultStack(defaultStack);\n  }, [config, show])\n  \n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig({ aggregator, defaultAggregated, defaultStack }) }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Preference\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <Label>Preference</Label>\n    <Stack verticalFill tokens={{ childrenGap: 50, padding: 6}}>\n      <ComboBox\n        selectedKey={aggregator}\n        label=\"Aggregator\"\n        allowFreeform={true}\n        autoComplete=\"on\"\n        options={aggregationList}\n        onChange={(e, option) => {option && setAggregator(option.key as Aggregator)}}\n      />\n      <Checkbox styles={checkboxStyles} label=\"measurement aggregation\" checked={defaultAggregated} onChange={(e, isChecked) => {setDefaultAggregated(isChecked || false)}} />\n      <Checkbox styles={checkboxStyles} label=\"measurement stack\" checked={defaultStack} onChange={(e, isChecked) => {setDefaultStack(isChecked || false)}} />\n    </Stack>\n  </Panel>\n}\n\nexport default PreferencePanel;","import React, { useEffect, useRef } from 'react';\nimport aggregate from 'cube-core';\nimport embed from 'vega-embed';\nimport { DataSource, Field, FieldType } from '../global'\nexport const geomTypeMap: {[key: string]: any} = {\n  interval: 'bar',\n  line: 'line',\n  point: 'point',\n  // density: 'rect'\n  density: 'point'\n}\nexport interface Specification {\n  position?: string[];\n  color?: string[];\n  opacity?: string[];\n  size?: string[];\n  shape?: string[];\n  geomType?: string[];\n  facets?: string[];\n  page?: string[];\n  filter?: string[]\n}\ninterface BaseChartProps {\n  defaultAggregated: boolean;\n  defaultStack: boolean;\n  aggregator: 'sum' | 'mean' | 'count';\n  dataSource: DataSource;\n  dimensions: string[];\n  measures: string[];\n  fieldFeatures: Field[];\n  schema: Specification;\n}\n\nconst BaseChart: React.FC<BaseChartProps> = (props) => {\n  const {\n    defaultAggregated,\n    defaultStack,\n    aggregator,\n    dataSource = [],\n    dimensions = [],\n    measures = [],\n    schema: {\n      position = [],\n      color = [],\n      opacity = [],\n      size = [],\n      shape = [],\n      geomType = [],\n      facets = [],\n      page = [],\n      filter = []\n    },\n    fieldFeatures = []\n  } = props;\n\n  const container = useRef<HTMLDivElement>(null);\n\n  function getFieldType (field: string): FieldType {\n    let targetField = fieldFeatures.find(f => f.name === field);\n    return targetField ? targetField.type : 'nominal';\n  }\n\n  const aggregatedMeasures = measures.map(mea => {\n    return {\n      op: aggregator,\n      field: mea,\n      as: `${mea}_${aggregator}`\n    }\n  })\n  let table = defaultAggregated ? aggregate({ dataSource, dimensions, measures, operator: aggregator, asFields: aggregatedMeasures.map(mea => mea.as)}) : dataSource;\n  function adjustField (fieldName: string): string {\n    if (defaultAggregated && measures.includes(fieldName)) {\n      let aggField = aggregatedMeasures.find(mea => {\n        return mea.field === fieldName;\n      });\n      return aggField ? aggField.as : fieldName;\n    }\n    return fieldName;\n  }\n  // todo for slider\n  // function getDomain (field) {\n  //   let fieldType = fieldFeatures.find(f => f.name === field).type;\n  //   let values = table.map(row => row[field]);\n  //   if (fieldType === 'quantitative') {\n  //     let min = Math.min(0, ...values)\n  //     let max = Math.max(...values)\n  //     return [min, max]\n  //   }\n  //   return [...new Set(values)];\n  // }\n  function getSpecification () {\n    let chartWidth = 600; //container.current ? container.current.offsetWidth * 0.8 : 600;\n    const fieldMap: any = {\n      x: position[0],\n      y: position[1],\n      color: color[0],\n      size: size[0],\n      opacity: opacity[0],\n      row: facets[0],\n      column: facets[1]\n    }\n    let spec: any = {\n      width: chartWidth,\n      data: {\n        values: table\n      }\n    }\n    let basicSpec: any = {\n      width: chartWidth,\n      mark: {\n        type: (geomType[0] && geomTypeMap[geomType[0]]) ? geomTypeMap[geomType[0]] : geomType[0],\n        tooltip: true\n      },\n      encoding: {}\n    };\n    for (let channel in fieldMap) {\n      if (fieldMap[channel]) {\n        basicSpec.encoding[channel] = {\n          field: adjustField(fieldMap[channel]),\n          type: getFieldType(fieldMap[channel])\n        }\n        if (['x', 'y'].includes(channel) && getFieldType(fieldMap[channel]) === 'quantitative' && !defaultStack) {\n          basicSpec.encoding[channel].stack = null;\n        }\n      }\n    }\n    if (!defaultStack && opacity.length === 0) {\n      basicSpec.encoding.opacity = { value: 0.7 }\n    }\n    if (page.length === 0) {\n      spec = {\n        ...spec,\n        ...basicSpec\n      }\n    } else if (page.length > 0) {\n      basicSpec.transform = [\n        {filter: {selection: 'brush'}},\n        defaultAggregated ? {\n          aggregate: aggregatedMeasures,\n          groupby: dimensions.filter(dim => dim !== page[0])\n        } : null\n      ].filter(Boolean);\n      let sliderSpec = {\n        width: chartWidth,\n        mark: 'tick',\n        selection: { brush: { encodings: ['x'], type: 'interval'}},\n        encoding: {\n          x: { field: page[0], type: getFieldType(page[0]) }\n        }\n      }\n      spec.vconcat = [basicSpec, sliderSpec];\n    }\n    return spec;\n  }\n  useEffect(() => {\n    if (container.current !== null) {\n      if (position.length > 0 && geomType.length > 0) {\n        let spec = getSpecification()\n        // console.log(spec)\n        embed(container.current, spec);\n      }\n    }\n  })\n  return <div ref={container}></div>\n  \n}\n\nexport default BaseChart;","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar JOIN_SYMBOL = '_';\nvar MAGIC_NUMBER = 5;\n\nfunction deepcopy(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nfunction isFieldCategory(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'string' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldContinous(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'number' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldNumeric(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldTime(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(Date.parse(record[fieldName])) && typeof record[fieldName] === 'string' && /[0-9]{0,4}-[0-9]{0,2}(-[0-9]{0,2})?/.test(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction aggregate(_ref) {\n  var dataSource = _ref.dataSource,\n      fields = _ref.fields,\n      bys = _ref.bys,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'sum' : _ref$method;\n  var tmp = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = bys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var by = _step.value;\n      var map = new Map();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var record = _step2.value;\n          var key = JSON.stringify(fields.map(function (field) {\n            return record[field];\n          }));\n\n          if (!map.has(key)) {\n            map.set(key, 0);\n          }\n\n          map.set(key, map.get(key) + record[by]);\n        };\n\n        for (var _iterator2 = dataSource[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref4 = _step3.value;\n\n          var _ref3 = _slicedToArray(_ref4, 2);\n\n          var key = _ref3[0];\n          var value = _ref3[1];\n\n          var row = _defineProperty({\n            index: key\n          }, by, value);\n\n          var dims = JSON.parse(key);\n\n          for (var i = 0; i < fields.length; i++) {\n            row[fields[i]] = dims[i];\n          }\n\n          tmp.push(row);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var ans = new Map();\n\n  for (var _i = 0, _tmp = tmp; _i < _tmp.length; _i++) {\n    var record = _tmp[_i];\n\n    if (!ans.has(record.index)) {\n      ans.set(record.index, {});\n    }\n\n    ans.set(record.index, _objectSpread({}, ans.get(record.index), {}, record));\n  }\n\n  return _toConsumableArray(ans.values());\n}\n\nfunction memberCount(dataSource, field) {\n  var counter = new Map();\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = dataSource[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var row = _step4.value;\n      var member = row[field];\n\n      if (!counter.has(member)) {\n        counter.set(member, 0);\n      }\n\n      counter.set(member, counter.get(member) + 1);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return _toConsumableArray(counter.entries());\n}\n\nfunction groupContinousField(_ref5) {\n  var dataSource = _ref5.dataSource,\n      field = _ref5.field,\n      _ref5$newField = _ref5.newField,\n      newField = _ref5$newField === void 0 ? \"\".concat(field, \"(con-group)\") : _ref5$newField,\n      groupNumber = _ref5.groupNumber;\n  // const members = memberCount(dataSource, field);\n  // todo: outlier detection\n  var values = dataSource.map(function (item) {\n    return item[field];\n  });\n  var max = Math.max.apply(Math, _toConsumableArray(values)); // Number.EPSILON * ;\n\n  var min = Math.min.apply(Math, _toConsumableArray(values));\n  var segWidth = (max - min) / groupNumber;\n  var ranges = [];\n\n  for (var i = 0; i < groupNumber; i++) {\n    var left = min + i * segWidth;\n    var right = min + (i + 1) * segWidth;\n    ranges.push([left, right]);\n  }\n\n  ranges[0][0] = -Infinity;\n  ranges[ranges.length - 1][1] = Infinity;\n  var precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n\n  var _loop2 = function _loop2(_i2) {\n    var record = dataSource[_i2];\n    var rangeIndex = ranges.findIndex(function (r) {\n      return r[0] <= record[field] && record[field] < r[1];\n    });\n    var range = ranges[rangeIndex];\n\n    if (typeof range !== 'undefined') {\n      record[newField] = \"\".concat(rangeIndex + 1, \":[\").concat(Number(range[0].toPrecision(precision)), \", \").concat(Number(range[1].toPrecision(precision)), \")\");\n    } else {\n      record[newField] = 'null';\n    }\n  };\n\n  for (var _i2 = 0; _i2 < dataSource.length; _i2++) {\n    _loop2(_i2);\n  }\n\n  return dataSource;\n}\n\nfunction groupCategoryField(_ref6) {\n  var dataSource = _ref6.dataSource,\n      field = _ref6.field,\n      _ref6$newField = _ref6.newField,\n      newField = _ref6$newField === void 0 ? \"\".concat(field, \"(cat-group)\") : _ref6$newField,\n      groupNumber = _ref6.groupNumber;\n  // auto category should obey Power law distrubution.\n  var members = memberCount(dataSource, field);\n  members.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var sum = members.map(function (v) {\n    return v[1];\n  });\n  groupNumber = members.length;\n\n  for (var i = sum.length - 2; i >= 0; i--) {\n    sum[i] = sum[i + 1] + sum[i];\n  }\n\n  for (var _i3 = 0; _i3 < members.length - 2; _i3++) {\n    // strict mode\n    // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n    if (members[_i3][1] * MAGIC_NUMBER >= sum[_i3 + 1] && members[_i3 + 1][1] / MAGIC_NUMBER < sum[_i3 + 2]) {\n      groupNumber = _i3 + 2;\n      break;\n    }\n  } // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n\n\n  if (groupNumber === members.length) {\n    return dataSource.map(function (record) {\n      return _objectSpread({}, record, _defineProperty({}, newField, record[field]));\n    });\n  }\n\n  var set = new Set();\n\n  for (var _i4 = groupNumber - 1; _i4 < members.length; _i4++) {\n    set.add(members[_i4][0]);\n  }\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = dataSource[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var record = _step5.value;\n\n      if (set.has(record[field])) {\n        record[newField] = 'others';\n      } else {\n        record[newField] = record[field];\n      }\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\n\n\nfunction DKL(p1List, p2List) {\n  var sum = 0;\n  var len = Math.max(p1List.length, p2List.length);\n\n  for (var i = 0; i < len; i++) {\n    var p1 = p1List[i] || 0;\n    var p2 = p2List[i] || 0;\n    sum += p1 * Math.log2(p1 / p2);\n  }\n\n  return sum;\n}\n\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL };","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { // isFieldCategory,\n// isFieldContinous,\nmemberCount } from './utils';\n\nfunction getVisualElements() {\n  return {\n    position: 2,\n    color: 1,\n    size: 1,\n    shape: 1,\n    opacity: 1,\n    facets: 2,\n    page: 1,\n    filter: 1,\n    highFacets: Infinity\n  };\n}\n\nvar geomTypes = {\n  interval: [0, 20],\n  line: [21, Infinity],\n  area: [21, Infinity],\n  point: [0, 1000],\n  path: [0, 100],\n  density: [1001, Infinity]\n};\n\nfunction findBestField(type, fieldRankList) {\n  for (var i = fieldRankList.length - 1; i >= 0; i--) {\n    if (fieldRankList[i].type === type && !fieldRankList[i].choosen) {\n      return fieldRankList[i];\n    }\n  }\n\n  return false;\n}\n/**\n *\n * @param dimFields ranked dimension by entropy. asc\n * todo: not clear enough implementation for using asc and desc\n */\n\n\nfunction aestheticMapping(dimFields) {\n  var spec = {};\n  var visualElements = getVisualElements();\n  var fieldRankList = dimFields.map(function (field) {\n    return _objectSpread({}, field, {\n      choosen: false\n    });\n  });\n  var priority = [['quantitative', ['position', 'size', 'opacity', 'color', 'page', 'filter', 'hightFacets']], ['ordinal', ['position', 'color', 'opacity', 'facets', 'size', 'page', 'filter', 'highFacets']], ['nominal', ['position', 'color', 'facets', 'shape', 'page', 'filter', 'hightFacets']], ['temporal', ['position', 'page', 'filter']]];\n  var fieldLeft = fieldRankList.length;\n\n  for (var typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n    var type = priority[typeIndex][0];\n    var channelList = priority[typeIndex][1];\n\n    for (var i = 0; i < channelList.length && fieldLeft > 0; i++) {\n      var channel = channelList[i];\n      var field = void 0;\n\n      while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n        if (typeof spec[channel] === 'undefined') {\n          spec[channel] = [];\n        }\n\n        spec[channel].push(field.name);\n        visualElements[channel]--;\n        fieldLeft--;\n        field.choosen = true;\n      }\n    }\n  }\n\n  return spec;\n} // todo:\n// don't use dimScores: FieldImpurity.\n// it's a structure with redundency design.\n\n\nfunction specification(dimScores, aggData, dimensions, measures) {\n  var rankedFields = dimScores.sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (dim) {\n    return dim[3];\n  });\n  var spec = aestheticMapping(rankedFields); // todo: design a better rule for choosing geom type.\n\n  if (spec.position.length === 2) {\n    if (dimensions.includes(spec.position[0]) && measures.includes(spec.position[1]) || dimensions.includes(spec.position[1]) && measures.includes(spec.position[0])) {\n      var dimIndex = dimensions.includes(spec.position[0]) ? 0 : 1;\n      var dim = spec.position[dimIndex];\n      var mea = spec.position[(dimIndex + 1) % 2];\n      spec.position = [dim, mea];\n      var dimMembers = memberCount(aggData, dim);\n      spec.geomType = ['interval', 'line', 'area'].filter(function (geom) {\n        return dimMembers.length >= geomTypes[geom][0] && dimMembers.length <= geomTypes[geom][1];\n      });\n      var x = dimScores.find(function (dim) {\n        return dim[0] === spec.position[0];\n      })[3];\n      var y = dimScores.find(function (dim) {\n        return dim[0] === spec.position[1];\n      })[3];\n\n      if (x.type === 'nominal' || y.type === 'nominal') {\n        spec.geomType = ['interval'];\n      }\n    } else {\n      // ['point', 'path', 'heatmap']\n      spec.geomType = ['point', 'density'].filter(function (geom) {\n        return aggData.length >= geomTypes[geom][0] && aggData.length <= geomTypes[geom][1];\n      });\n    }\n  }\n\n  return {\n    schema: spec,\n    aggData: aggData\n  };\n}\n\nexport default specification;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n  // only for the special matrix here(corelational matrix)\n  var edges = [];\n\n  for (var i = 0; i < matrix.length; i++) {\n    for (var j = i + 1; j < matrix[i].length; j++) {\n      edges.push([[i, j], Math.abs(matrix[i][j])]);\n    }\n  }\n\n  return edges;\n}\n\nfunction find(parents, n) {\n  return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\n\nfunction union(parents, n1, n2) {\n  var p1 = find(parents, n1);\n  var p2 = find(parents, n2);\n  parents[p1] = p2; // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n  // may check and prove whether it's necessary.\n\n  find(parents, n1);\n  find(parents, n2);\n}\n\nfunction findWithEffect(parents, sizes, n) {\n  if (parents[n] === n) {\n    return n;\n  }\n\n  parents[n] = findWithEffect(parents, sizes, parents[n]);\n  sizes[n] = sizes[parents[n]];\n  return parents[n];\n}\n\nfunction unionWithEffect(parents, sizes, n1, n2) {\n  var p1 = findWithEffect(parents, sizes, n1);\n  var p2 = findWithEffect(parents, sizes, n2);\n  var size1 = sizes[p1];\n  var size2 = sizes[p2];\n  parents[p1] = p2;\n  sizes[p1] = sizes[p2] = size1 + size2;\n  findWithEffect(parents, sizes, n1);\n  findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\n\n\nfunction kruskal(matrix, groupNumber) {\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = edges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var edge = _step.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i = 0; _i < parents.length; _i++) {\n        parents[_i] = find(parents, _i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size <= groupNumber) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\n\n\nfunction kruskalWithLimitSize(matrix, limitSize) {\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var sizes = matrix.map(function () {\n    return 1;\n  });\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = edges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var edge = _step2.value;\n\n      if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n        if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n          continue;\n        }\n\n        unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i2 = 0; _i2 < parents.length; _i2++) {\n        parents[_i2] = findWithEffect(parents, sizes, _i2);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n\nexport function kruskalMSTWithLimitSize(matrix) {\n  var limitSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var cloneParents = matrix.map(function (m, i) {\n    return i;\n  });\n  var sizes = matrix.map(function () {\n    return 1;\n  });\n  var inCutEdge = false;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = edges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var edge = _step3.value;\n\n      if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n        if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n          if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n            edgesInMST.push([edge[0], edge[1], true]);\n            union(cloneParents, edge[0][0], edge[0][1]);\n          }\n\n          continue;\n        }\n\n        unionWithEffect(parents, sizes, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], false]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = findWithEffect(parents, sizes, i);\n        cloneParents[i] = find(cloneParents, i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: parents\n  };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\n\nexport function kruskalMST(matrix) {\n  var groupNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n\n  var groups = _toConsumableArray(parents);\n\n  var inCutEdge = false;\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = edges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var edge = _step4.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], inCutEdge]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = find(parents, i);\n      }\n\n      var set = new Set(parents); // TODO:\n      // + use kruskalMST instead of kruskal.\n\n      if (set.size <= groupNumber) {\n        inCutEdge = true;\n      } else {\n        groups = _toConsumableArray(parents);\n      }\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: groups\n  };\n}\n\nfunction cluster(_ref) {\n  var matrix = _ref.matrix,\n      measures = _ref.measures,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'kruskal' : _ref$method,\n      _ref$groupMaxSize = _ref.groupMaxSize,\n      groupMaxSize = _ref$groupMaxSize === void 0 ? 4 : _ref$groupMaxSize,\n      _ref$limitSize = _ref.limitSize,\n      limitSize = _ref$limitSize === void 0 ? false : _ref$limitSize;\n  // const groups = kruskal({ matrix, groupMaxSize });\n  var groups;\n\n  if (limitSize) {\n    groups = kruskalWithLimitSize(matrix, groupMaxSize);\n  } else {\n    groups = kruskal(matrix, groupMaxSize);\n  }\n\n  var ans = [];\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = groups.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var meas = _step5.value;\n      ans.push(meas.map(function (meaIndex) {\n        return measures[meaIndex];\n      }));\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return ans;\n}\n\nexport default cluster;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { deepcopy, isFieldNumeric, memberCount } from '../utils';\n\nfunction dropNullColumn(dataSource, fields) {\n  var keepFields = fields.map(function () {\n    return false;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = dataSource[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var record = _step.value;\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n\n        if (typeof record[field] !== 'undefined' && record[field] !== '' && record[field] !== null) {\n          keepFields[i] = true;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var finalFields = fields.filter(function (field, index) {\n    return keepFields[index];\n  });\n  return {\n    fields: finalFields,\n    dataSource: dataSource.map(function (record) {\n      var ans = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = finalFields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var field = _step2.value;\n          ans[field] = record[field];\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return ans;\n    })\n  };\n}\n\nfunction dropNull(dataSource, dimensions, measures) {\n  var data = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = dataSource[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var record = _step3.value;\n      var keep = true;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = dimensions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var dim = _step5.value;\n\n          if (typeof record[dim] === 'undefined' || record[dim] === '' || record[dim] === null) {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = measures[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var mea = _step6.value;\n\n          if (typeof record[mea] !== 'number') {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (keep) {\n        data.push(record);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var dim = _step4.value;\n\n      if (isFieldNumeric(data, dim)) {\n        var members = memberCount(data, dim);\n\n        if (members.length > 20) {\n          data.forEach(function (record) {\n            record[dim] = Number(record[dim]) || 0;\n          });\n        } else {\n          data.forEach(function (record) {\n            record[dim] = (Number(record[dim]) || 0).toString();\n          });\n        }\n      }\n    };\n\n    for (var _iterator4 = dimensions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isNullValue(value) {\n  return ['', null, undefined].includes(value);\n}\n/**\n * use mode of one field to replace its null value\n * @param dataSource\n * @param fieldNames name list of fields you want to clean with useMode function.\n * problem: some field may regard the null value as the most common value... sad : (.\n * I am dead.\n */\n\n\nfunction useMode(dataSource, fieldNames) {\n  /**\n   * map to count each member's times of apperance in fields.\n   */\n  var countMap = new Map();\n  /**\n   * map to get the mode member of each field.\n   */\n\n  var modeMap = new Map();\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = fieldNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var fieldName = _step7.value;\n      countMap.set(fieldName, new Map());\n      modeMap.set(fieldName, 0);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = dataSource[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var record = _step8.value;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = fieldNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _fieldName = _step11.value;\n          var counter = countMap.get(_fieldName);\n\n          if (!isNullValue(record[_fieldName])) {\n            if (!counter.has(record[_fieldName])) {\n              counter.set(record[_fieldName], 0);\n            }\n\n            counter.set(record[_fieldName], counter.get(record[_fieldName]) + 1);\n          }\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = countMap.keys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var key = _step9.value;\n\n      var _counter = countMap.get(key);\n\n      var members = _toConsumableArray(_counter.entries());\n\n      var max = 0;\n      var maxPos = 0;\n\n      for (var i = 0; i < members.length; i++) {\n        var member = members[i];\n\n        if (member[1] > max) {\n          max = member[1];\n          maxPos = i;\n        }\n      }\n\n      modeMap.set(key, members[maxPos][0]);\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = newDataSource[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _record = _step10.value;\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = fieldNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var _fieldName2 = _step12.value;\n\n          if (isNullValue(_record[_fieldName2])) {\n            _record[_fieldName2] = modeMap.get(_fieldName2);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nfunction simpleClean(dataSource, dimensions, measures) {\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = dataSource[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var record = _step13.value;\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = dimensions[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var dim = _step14.value;\n\n          if (isNullValue(record[dim])) {\n            record[dim] = 'null';\n          }\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = measures[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var mea = _step15.value;\n\n          if (isNullValue(record[mea])) {\n            record[mea] = 0;\n          }\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nexport { simpleClean, dropNull, useMode, dropNullColumn };","/**\n * todo reservoir sampling is better to support stream data\n * Algorithm R:\n * Vitter, Jeffrey S. (1 March 1985). \"Random sampling with a reservoir\" (PDF). ACM Transactions on Mathematical Software. 11 (1): 37–57. CiteSeerX 10.1.1.138.784. doi:10.1145/3147.3165.\n */\nexport function reservoirSampling(dataSource) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  if (dataSource.length <= size) return dataSource;\n  var sampleSpace = dataSource.slice(0, size);\n  var len = dataSource.length;\n\n  for (var i = size + 1; i < len; i++) {\n    var pos = Math.round(Math.random() * i);\n\n    if (pos < size) {\n      sampleSpace[pos] = dataSource[i];\n    }\n  }\n\n  return sampleSpace;\n}","import React, { useMemo, useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace, FieldSummary } from '../../service';\nimport { DefaultButton, TeachingBubble, DirectionalHint } from 'office-ui-fabric-react';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../demo/vegaBase';\n\ninterface StoryTellerProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst StoryTeller: React.FC<StoryTellerProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n  const [isTeachingBubbleVisible, setIsTeachingBubbleVisible] = useState(false);\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <div>\n      <DefaultButton id=\"vis-summary\" text=\"Summary\" onClick={() => { setIsTeachingBubbleVisible(true) }} />\n      {isTeachingBubbleVisible ? (\n          <div>\n            <TeachingBubble\n              calloutProps={{ directionalHint: DirectionalHint.bottomCenter }}\n              isWide={true}\n              hasCloseIcon={true}\n              closeButtonAriaLabel=\"Close\"\n              target={'#vis-summary'}\n              onDismiss={() => { setIsTeachingBubbleVisible(false) }}\n              headline=\"Chart Description\"\n            >\n              <ReactMarkdown source={result} />\n            </TeachingBubble>\n          </div>\n        ) : null}\n    </div>\n  )\n}\n\nexport default StoryTeller","import React, { useMemo, useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace, FieldSummary } from '../../service';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../demo/vegaBase';\n\ninterface VisDescriptionProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst VisDescription: React.FC<VisDescriptionProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <ReactMarkdown source={result} />\n  )\n}\n\nexport default VisDescription","import React, { useMemo } from 'react';\nimport {\n  ViewSpace\n} from '../../../service';\nimport { Field, DataSource } from '../../../global';\nimport { specification } from 'visual-insights';\nimport { PreferencePanelConfig } from '../../../components/preference';\nconst similarityThrehold = 0.2;\nconst topKRelatedSpace = 5;\n\nfunction measuresRelatedScore (measures1: string[], measures2: string[]) {\n  let meaSet = new Set([...measures1, ...measures2])\n  let meaSet1 = new Set(measures1)\n  let meaSet2 = new Set(measures2)\n  let meaVec1: number[] = [];\n  let meaVec2: number[] = [];\n  for (let mea of meaSet) {\n    meaVec1.push(Number(meaSet1.has(mea)))\n    meaVec2.push(Number(meaSet2.has(mea)))\n  }\n  let score = 0;\n  for (let i = 0; i < meaVec1.length; i++) {\n    score += meaVec1[i] * meaVec2[i];\n  }\n  score /= (Math.sqrt(measures1.length) * Math.sqrt(measures2.length))\n  // console.log(measures1, measures2, score)\n  return score;\n}\ninterface RelatedViewSpace extends ViewSpace {\n  relatedScore: number;\n}\nexport interface DigDimensionProps {\n  /**\n   * we suppose that viewSpaces here is a ranked space list\n   */\n  viewSpaces: ViewSpace[];\n  interestedViewSpace: ViewSpace;\n  fieldScores: Array<[string, number, number, Field]>;\n  dataSource: DataSource;\n  visualConfig: PreferencePanelConfig\n}\n\nfunction useDigDimension(props: DigDimensionProps) {\n  const { viewSpaces, interestedViewSpace, fieldScores, dataSource, visualConfig } = props;\n  const relatedSpaces = useMemo<ViewSpace[]>(() => {\n    let ans: ViewSpace[] = []\n    for (let space of viewSpaces) {\n      if (space.dimensions.length > interestedViewSpace.dimensions.length && space.dimensions.length - interestedViewSpace.dimensions.length <= 2) {\n        let isSubset = interestedViewSpace.dimensions.every(subDim => {\n          return space.dimensions.find(dim => subDim === dim)\n        })\n        if (isSubset) {\n          ans.push(space)\n        }\n      }\n    }\n    return ans;\n  }, [interestedViewSpace, viewSpaces])\n  const rankedRelatedSpaces = useMemo(() => {\n    let ans: RelatedViewSpace[] = [];\n    for (let space of relatedSpaces) {\n      let measureSimilarity = measuresRelatedScore(interestedViewSpace.measures, space.measures);\n      if (measureSimilarity > similarityThrehold) {\n        // console.log({ measureSimilarity })\n        ans.push({\n          ...space,\n          relatedScore: space.score / Math.sqrt(measureSimilarity)\n        })\n      }\n    }\n    return ans.sort((a, b) => a.relatedScore - b.relatedScore);\n  }, [relatedSpaces]);\n\n  const viewList = useMemo(() => {\n    const ans = rankedRelatedSpaces.slice(0, topKRelatedSpace).map(space => {\n      let spaceFieldScores = fieldScores.filter(field => {\n        return space.dimensions.includes(field[0]) || space.measures.includes(field[0])\n      })\n      return {\n        ...space,\n        schema: specification(spaceFieldScores, dataSource, space.dimensions, space.measures).schema\n      };\n    })\n    return ans;\n  }, [rankedRelatedSpaces, fieldScores])\n\n  return viewList\n}\n\nexport default useDigDimension;\n","import React, { useMemo } from \"react\";\nimport VisDescription from \"../../../plugins/visSummary/description\";\nimport useDigDimension, { DigDimensionProps } from \"./digDimension\";\nimport BaseChart, { Specification } from \"../../../demo/vegaBase\";\nimport { Subspace } from \"../../../service\";\nimport { IconButton, Stack } from \"office-ui-fabric-react\";\n\nfunction isDimensionEqual(dimensions1: string[], dimensions2: string[]) {\n  if (dimensions1.length !== dimensions2.length) {\n    return false;\n  }\n  return dimensions1.every(dim1 => {\n    return dimensions2.includes(dim1);\n  });\n}\ninterface AssociationProps {\n  digDimensionProps: DigDimensionProps;\n  subspaceList: Subspace[];\n  onSelectView: (index: number) => void\n}\nconst Association: React.FC<AssociationProps> = props => {\n  const { digDimensionProps, subspaceList, onSelectView } = props;\n  const { dataSource, visualConfig, fieldScores } = digDimensionProps;\n  const relatedCharts = useDigDimension(digDimensionProps);\n  const fieldFeatures = fieldScores.map(f => f[3]);\n  return (\n    <div>\n      <div className=\"ms-Grid\">\n        {relatedCharts.map((view, i) => {\n          let currentSpace = subspaceList.find(space => {\n            return isDimensionEqual(space.dimensions, view.dimensions);\n          });\n          return (\n            <div key={`associate-row-${i}`}\n              className=\"ms-Grid-row\"\n              style={{\n                border: \"solid 1px #bfbfbf\",\n                margin: \"1em\",\n                padding: \"1em\"\n              }}\n            >\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg9\"\n                style={{ overflow: 'auto' }}\n              >\n                <BaseChart\n                  aggregator={visualConfig.aggregator}\n                  defaultAggregated={view.schema.geomType && view.schema.geomType.includes(\"point\") ? false : true}\n                  defaultStack={visualConfig.defaultStack}\n                  dimensions={view.dimensions}\n                  measures={view.measures}\n                  dataSource={dataSource}\n                  schema={view.schema}\n                  fieldFeatures={fieldFeatures}\n                />\n              </div>\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg3\"\n                style={{ fontSize: 14, color: \"#8a8886\", overflow: \"auto\" }}\n              >\n                <div>\n                  \n                  <Stack tokens={{ childrenGap: 8 }} horizontal>\n                    <IconButton iconProps={{ iconName: 'Lightbulb' }} title=\"Interested\" onClick={() => {\n                      onSelectView(view.index)\n                    }} />\n                  </Stack>\n                </div>\n                {currentSpace && (\n                  <VisDescription\n                    dimensions={view.dimensions}\n                    measures={view.measures}\n                    dimScores={fieldScores}\n                    space={currentSpace}\n                    spaceList={subspaceList}\n                    schema={view.schema}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Association;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  DefaultButton,\n  IconButton,\n  Stack,\n  ProgressIndicator\n} from \"office-ui-fabric-react\";\nimport PreferencePanel, {\n  PreferencePanelConfig\n} from \"../../components/preference\";\nimport { useComposeState } from \"../../utils/index\";\nimport BaseChart, { Specification } from \"../../demo/vegaBase\";\nimport { DataSource, Field } from \"../../global\";\nimport { specification } from \"visual-insights\";\nimport VisSummary from \"../../plugins/visSummary/index\";\nimport { useGlobalState } from \"../../state\";\nimport Association from \"./association/index\";\nimport {\n  Subspace,\n  clusterMeasures,\n  ViewSpace,\n  FieldSummary\n} from \"../../service\";\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n}\ninterface DataView {\n  schema: Specification;\n  aggData: DataSource;\n  fieldFeatures: Field[];\n  dimensions: string[];\n  measures: string[];\n}\n\ninterface GalleryProps {\n  subspaceList: Subspace[];\n  /**\n   * dataSource here should be cookedData.\n   */\n  dataSource: DataSource;\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n}\n\nconst Gallery: React.FC<GalleryProps> = props => {\n  const { dataSource, summary, subspaceList } = props;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  });\n  const [showAssociation, setShowAssociation] = useState(false);\n  const [visualConfig, setVisualConfig] = useState<PreferencePanelConfig>({\n    aggregator: \"sum\",\n    defaultAggregated: true,\n    defaultStack: true\n  });\n  const [viewSpaces, setViewSpaces] = useState<ViewSpace[]>([]);\n\n  const [dataView, setDataView] = useState<DataView>({\n    schema: {\n      position: [],\n      color: [],\n      opacity: [],\n      geomType: []\n    },\n    fieldFeatures: [],\n    aggData: [],\n    dimensions: [],\n    measures: []\n  });\n\n  const gotoPage = (pageNo: number) => {\n    setCurrentPage(pageNo);\n  };\n\n  useEffect(() => {\n    updateState(draft => {\n      draft.loading.gallery = true;\n    });\n    // todo:\n    // should group number be the same for different subspaces?\n    clusterMeasures(\n      state.maxGroupNumber,\n      subspaceList.map(space => {\n        return {\n          dimensions: space.dimensions,\n          measures: space.measures,\n          matrix: space.correlationMatrix\n        };\n      }),\n      state.useServer\n    ).then(viewSpaces => {\n      setViewSpaces(viewSpaces);\n      updateState(draft => {\n        draft.loading.gallery = false;\n      });\n    });\n  }, [subspaceList, dataSource, state.maxGroupNumber]);\n\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [\n        field.fieldName,\n        field.entropy,\n        field.maxEntropy,\n        { name: field.fieldName, type: field.type }\n      ];\n    });\n  }, [summary.origin, summary.grouped]);\n\n  useEffect(() => {\n    const viewState = viewSpaces[currentPage];\n    if (viewState) {\n      const { dimensions, measures } = viewState;\n      try {\n        // todo: find the strict confition instead of using try catch\n        const fieldScores = dimScores.filter(field => {\n          return dimensions.includes(field[0]) || measures.includes(field[0]);\n        });\n        const { schema } = specification(\n          fieldScores,\n          dataSource,\n          dimensions,\n          measures\n        );\n        setDataView({\n          schema,\n          fieldFeatures: fieldScores.map(f => f[3]),\n          aggData: dataSource,\n          dimensions,\n          measures\n        });\n        // ugly code\n        // todo:\n        // implement this in specification\n        // + check geomType\n        // + check geom number and aggregated geom number\n        if (schema.geomType && (schema.geomType.includes(\"point\") || schema.geomType.includes(\"density\"))) {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: false\n            };\n          });\n        } else {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: true\n            };\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [viewSpaces, currentPage]);\n  const currentSpace = useMemo<Subspace>(() => {\n    return subspaceList.find(subspace => {\n      return subspace.dimensions.join(\",\") === dataView.dimensions.join(\",\");\n    })!;\n  }, [subspaceList, currentPage, dataView]);\n  useEffect(() => {\n    setShowAssociation(false);\n  }, [currentPage]);\n  return (\n    <div className=\"content-container\">\n      <PreferencePanel\n        show={pageStatus.show.configPanel}\n        config={visualConfig}\n        onUpdateConfig={config => {\n          setVisualConfig(config);\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n      />\n\n      <div className=\"card\">\n        {(state.loading.gallery ||\n          state.loading.subspaceSearching ||\n          state.loading.univariateSummary) && (\n          <ProgressIndicator description=\"calculating\" />\n        )}\n        <h2 style={{ marginBottom: 0 }}>\n          Visual Insights{\" \"}\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Preference\"\n            ariaLabel=\"preference\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.configPanel = true;\n              });\n            }}\n          />\n          <IconButton\n            iconProps={{ iconName: \"Lightbulb\" }}\n            title=\"Dig In\"\n            ariaLabel=\"digIn\"\n            onClick={() => {\n              setShowAssociation(true);\n            }}\n          />\n        </h2>\n        <p className=\"state-description\">\n          Page No. {currentPage + 1} of {viewSpaces.length}\n        </p>\n        <p className=\"state-description\">\n          Details of the recommendation process can be seen in <b>NoteBook</b>{\" \"}\n          Board. You can adjust some of the parameters and operators and see how\n          it influence recommendation results.\n        </p>\n        <p className=\"state-description\">\n          Try to use the setting button beside the \"visual insight\" title to\n          adjust the visualization settings to get a view you prefer better.\n        </p>\n        <div className=\"ms-Grid\" dir=\"ltr\">\n          <div className=\"ms-Grid-row\">\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\"\n              style={{ overflow: \"auto\" }}\n            >\n              <Stack horizontal tokens={{ childrenGap: 20 }}>\n                <DefaultButton\n                  text=\"Last\"\n                  onClick={() => {\n                    gotoPage(\n                      (currentPage - 1 + viewSpaces.length) % viewSpaces.length\n                    );\n                  }}\n                  allowDisabledFocus\n                />\n                <DefaultButton\n                  text=\"Next\"\n                  onClick={() => {\n                    gotoPage((currentPage + 1) % viewSpaces.length);\n                  }}\n                  allowDisabledFocus\n                />\n              </Stack>\n              <h3>Specification</h3>\n              <pre>{JSON.stringify(dataView.schema, null, 2)}</pre>\n              <VisSummary\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dimScores={dimScores}\n                space={currentSpace}\n                spaceList={subspaceList}\n                schema={dataView.schema}\n              />\n            </div>\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg9\"\n              style={{ overflow: \"auto\" }}\n            >\n              <BaseChart\n                aggregator={visualConfig.aggregator}\n                defaultAggregated={visualConfig.defaultAggregated}\n                defaultStack={visualConfig.defaultStack}\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dataSource={dataView.aggData}\n                schema={dataView.schema}\n                fieldFeatures={dataView.fieldFeatures}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {showAssociation && (\n        <div className=\"card\">\n          <h2> Related Views </h2>\n          <Association\n            onSelectView={(index) => {\n              let pos = viewSpaces.findIndex(v => v.index === index)\n              if (pos > -1) {\n                gotoPage(pos);\n              }\n            }}\n            subspaceList={subspaceList}\n            digDimensionProps={{\n              visualConfig,\n              dataSource,\n              viewSpaces,\n              fieldScores: dimScores,\n              interestedViewSpace: viewSpaces[currentPage]\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useRef, useEffect } from 'react';\nimport embed from 'vega-embed';\nimport { FieldType, DataSource } from '../../global';\nexport interface DistributionChartProps {\n  fieldType: FieldType;\n  x: string;\n  y: string;\n  dataSource: DataSource\n}\n\nconst DistributionChart: React.FC<DistributionChartProps> = (props) => {\n  const chart = useRef<HTMLDivElement>(null);\n  const { x, y, dataSource, fieldType } = props;\n    useEffect(() => {\n      if (chart.current) {\n        let values: typeof dataSource = [];\n        let hasIndex = false;\n        if (fieldType === 'ordinal' && dataSource.some(member => {\n          return /(\\[|\\()-?([0-9.]+|Infinity),\\s*([0-9.]+|Infinity)(\\]|\\))/.test(member.memberName)\n        })) {\n          values = dataSource.map(member => {\n            hasIndex = true;\n            let result = /(\\[|\\()(?<left>-?([0-9.]+|Infinity)),\\s*([0-9.]+|Infinity)(\\]|\\))/.exec(member.memberName);\n            \n            return {\n              ...member,\n              index: result === null ? member.name : Number(result.groups!.left)\n            }\n          })\n        } else {\n          values = dataSource\n        }\n        let sortBy: string | undefined | any = undefined;\n        if (fieldType === 'nominal') {\n          sortBy = '-y'\n        } else if (fieldType === 'ordinal' && hasIndex) {\n          sortBy = { field: 'index' }\n        }\n        embed(chart.current, {\n          background: '#fff',\n          data: {\n            values\n          },\n          height: 120,\n          width: 200,\n          mark: ['quantitative', 'temporal'].includes(fieldType) ? 'line' : 'bar',\n          encoding: {\n            x: {\n              field: x,\n              axis: dataSource.length > 16 ? null : undefined,\n              type: fieldType, sort: sortBy\n            },\n            y: { field: y, type: 'quantitative', aggregate: 'sum' }\n          }\n        }, {\n          actions: false\n        })\n      }\n    }, [x, y, dataSource])\n  return <div ref={chart}></div>\n}\n\nexport default DistributionChart;","import React, { useMemo } from 'react';\nimport { DetailsList, SelectionMode, IColumn, Icon, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport chroma, { Color } from 'chroma-js';\nimport { FieldSummary } from '../../service';\nimport DistributionChart from './distributionChart';\nimport { FieldType, Record } from '../../global';\n\nimport './fieldAnalysis.css';\n\n// todo: distribution info\n\ninterface FieldAnalsisProps {\n  originSummary: FieldSummary[];\n  groupedSummary: FieldSummary[];\n}\nconst columns: IColumn[] = [\n  {\n    key: 'fieldName',\n    name: 'fieldName',\n    fieldName: 'fieldName',\n    minWidth: 70,\n    maxWidth: 150\n  },\n  {\n    key: 'type',\n    name: 'type',\n    fieldName: 'type',\n    minWidth: 50\n  },\n  {\n    key: 'entropy',\n    name: 'entropy',\n    fieldName: 'entropy',\n    minWidth: 120\n  },\n  {\n    key: 'maxEntropy',\n    name: 'maxEntropy',\n    fieldName: 'maxEntropy',\n    minWidth: 120\n  }\n];\nfunction getIconNameByFieldType (type: string): string {\n  switch (type) {\n    case 'nominal':\n      return 'TextField';\n    case 'quantitative':\n      return 'NumberField';\n    case 'ordinal':\n      return 'Breadcrumb';\n    case 'temporal':\n      return 'EventDate';\n    default:\n      return ''\n  }\n}\n\nfunction getValueColor (value: number, range: [number, number]): [number, number, number] {\n  return chroma.scale('YlGnBu').domain([range[1], range[0]])(value).rgb();\n}\n\n/**\n * \n * @param color rgb array\n * algorithm provided by https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color\n */\nfunction contrastColor(color: [number, number, number]): [number, number, number] {\n  let luminance = (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  return luminance > 0.5 ? [0, 0, 0] : [255, 255, 255]\n}\nconst FieldAnalsis: React.FC<FieldAnalsisProps> = (props) => {\n\n  const { originSummary, groupedSummary } = props;\n\n  const entropyRange = useMemo<[number, number]>(() => {\n    const originEntropy = originSummary.map(s => s.maxEntropy);\n    return [0, Math.max(...originEntropy)];\n  }, [originSummary])\n\n  const onRenderCompactCard = (item: Record) => {\n    return (\n      <div className=\"field-hover-card\">\n        <h2>{item.fieldName}</h2>\n        <div>Field entropy is { Number(item.entropy).toFixed(2) }</div>\n        <div className=\"chart-vertical-margin-container\" >\n          <DistributionChart x=\"memberName\" y=\"count\" fieldType={item.type as FieldType} dataSource={item.distribution} />\n        </div>\n        \n      </div>\n    )\n  }\n  const onRenderExpandedCard = (item: Record) => {\n    const name = item.fieldName;\n    const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n    return (\n      <div className=\"field-hover-card\">\n        {\n          target ? <div>\n            <h3>{target.fieldName}</h3>\n            <div>Field entropy is { Number(target.entropy).toFixed(2) }</div>\n            <div className=\"chart-vertical-margin-container\">\n              <DistributionChart x=\"memberName\" y=\"count\" fieldType={target.type as FieldType} dataSource={target.distribution} />\n            </div>\n          </div> : <div>This field is not grouped.</div>\n        }\n      </div>\n    )\n  }\n\n\n\n  const renderItemColumn = (item: Record, index?: number, column?: IColumn) => {\n    if (column !== undefined) {\n      const name = item.fieldName;\n      const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n      const expandingCardProps: IExpandingCardProps = {\n        onRenderCompactCard,\n        onRenderExpandedCard,\n        renderData: item,\n        compactCardHeight: 320,\n        expandedCardHeight: target ? 320 : 40\n      }\n      const fieldContent = item[column.fieldName!];\n      let bgColor: [number, number, number] = [255, 255, 255];\n      switch (column.key) {\n        case 'type':\n          return <div>\n            <Icon iconName={getIconNameByFieldType(fieldContent)} /> {fieldContent}\n          </div>\n        case 'entropy':\n        case 'maxEntropy':\n          bgColor = getValueColor(item[column.key], entropyRange);\n          let fontColor = contrastColor(bgColor)\n          let bgColorStr = `rgb(${bgColor.join(',')})`\n          let fontColorStr = `rgb(${contrastColor(bgColor).join(',')})`\n          return (\n            <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n              <div style={{ boxShadow: `${bgColorStr} 0px 0px 0px 10px`, backgroundColor: bgColorStr, color: fontColorStr }}>{fieldContent}</div>\n            </HoverCard>\n          )\n        default:\n          return <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n          <div>{fieldContent}</div>\n        </HoverCard>\n      }\n    }\n  }\n\n  // const onRenderRow: IRenderFunction<any> = (props) => {\n  //   const customStyles: Partial<IDetailsRowStyles> = {};\n  //   customStyles.root = { backgroundColor: getValueColor(props.item['entropy'], entropyRange), color: '#fff' }\n  //   return <DetailsRow {...props} styles={customStyles} />;\n  // };\n\n  return <DetailsList compact={true} columns={columns} items={originSummary} selectionMode={SelectionMode.none} onRenderItemColumn={renderItemColumn} />\n}\n\nexport default FieldAnalsis;","import React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Subspace } from '../../service';\nimport embed from 'vega-embed';\nimport { DataSource } from '../../global';\n\nfunction encodeArr (arr: any[]): string {\n  return arr.join(',')\n}\ninterface SubspacesProps {\n  subspaceList: Subspace[];\n  onSpaceChange: (dimensions: string[], measures: string[], matrix: number[][]) => void\n}\nconst Subspaces: React.FC<SubspacesProps> = (props) => {\n  const { subspaceList, onSpaceChange } = props;\n  const [curIndex, setCurIndex] = useState(0);\n  const spaceChart = useRef<HTMLDivElement>(null)\n  const relationChart = useRef<HTMLDivElement>(null)\n  // const subspaces = useMemo<IndexSubspace[]>(() => {\n  //   return subspaceList.map((space, index) => {\n  //     return {\n  //       ...space,\n  //       index\n  //     }\n  //   })\n  // }, [subspaceList]);\n  const range = useMemo<[number, number]>(() => {\n    let max = 0;\n    let min = Infinity;\n    for (let space of subspaceList) {\n      for (let { name, value } of space.measures) {\n        max = Math.max(max, value);\n        min = Math.min(min, value);\n      }\n    }\n    return [min, max]\n  }, [subspaceList])\n  const values = useMemo<DataSource>(() => {\n    let ans = [];\n    // todos:\n    // the fold operation here is a tmp solution. it is designed when I don't there is a api in vega to handle event listener.\n    // the fold operation here can caused a wasted of time and space.\n    // I suggested to divied it into two charts and connect the logic throgh a state manager outside the charts.\n    for (let i = 0; i < subspaceList.length; i++) {\n      let space = subspaceList[i];\n      let dimensions = encodeArr(space.dimensions)\n      for (let { name, value } of space.measures) {\n        let record: any = {\n          test: i,\n          score: space.score,\n          dimensions,\n          measureName: name,\n          measureValue: value,\n        };\n        ans.push(record)\n      }\n    }\n    return ans\n  }, [subspaceList, range])\n  useEffect(() => {\n    if (spaceChart.current && subspaceList.length > 0) {\n      embed(spaceChart.current, {\n        data: {\n          values\n        },\n        vconcat: [\n          {\n            mark: 'rect',\n            selection: {\n              dim: {\n                type: 'single',\n                on: 'click',\n                encodings: ['y']\n              }\n            },\n            encoding: {\n              x: { field: 'measureName', type: 'nominal' },\n              y: {\n                field: 'dimensions',\n                type: 'ordinal',\n                sort: { field: 'score' }\n              },\n              color: { field: 'measureValue', type: 'quantitative', aggregate: 'mean', scale: { reverse: true } },\n              opacity: {\n                condition: {selection: 'dim', value: 1},\n                value: 0.72\n              },\n            }\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            /**\n             * record is the data record(defiend in `values`) the event contains.\n             */\n            let record = item.datum;\n            let index = subspaceList.findIndex(space => encodeArr(space.dimensions) === record.dimensions)\n\n            if (index > -1) {\n              let targetSpace = subspaceList[index];\n              onSpaceChange(targetSpace.dimensions, targetSpace.measures.map(m => m.name), targetSpace.correlationMatrix);\n              setCurIndex(index);\n            }\n          }\n        })\n      })\n    }\n  }, [subspaceList, values])\n  useEffect(() => {\n    let space = subspaceList[curIndex];\n    if (relationChart.current && subspaceList.length > 0 && space) {\n      let matrix: DataSource = [];\n      \n      for (let i = 0; i < space.correlationMatrix.length; i++) {\n          for (let j = 0; j < space.correlationMatrix[i].length; j++) {\n            matrix.push({\n              x: space.measures[i].name,\n              y: space.measures[j].name,\n              correlation: space.correlationMatrix[i][j]\n            })\n          }\n        }\n      embed(relationChart.current, {\n        data: {\n          values: matrix\n        },\n        mark: 'rect',\n        encoding: {\n          x: { field: 'x', type: 'nominal' },\n          y: { field: 'y', type: 'nominal' },\n          color: { field: 'correlation', type: 'quantitative', aggregate: 'mean' , scale: { scheme: 'redyellowgreen', domain: [-1, 1] } }\n        }\n      })\n    }\n    \n  }, [subspaceList, curIndex])\n  return <div>\n    <div ref={spaceChart}></div>\n    <div ref={relationChart}></div>\n  </div>\n}\n\nexport default Subspaces;","import React, { useEffect, useMemo, useRef } from 'react';\nimport { kruskalMST } from 'visual-insights';\nimport { useGlobalState } from '../../state';\nimport embed from 'vega-embed';\n// cluster should be used for small graph because the number of measure is limited. \n// Browser may be more likely crashed by other algorithm or data structure or memory used in the whole analysis pipline.\n/**\n * adjMatrix and measures share a common index system;\n */\ninterface ClusterBoardProps {\n  adjMatrix: number[][];\n  measures: string[];\n  onFocusGroup: (measuresInView: string[]) => void;\n}\n\ninterface VegaEdge {\n  source: number | string;\n  target: number | string;\n  value: number;\n  inCutEdge: boolean;\n}\ninterface VegaNode {\n  name: string;\n  index: number;\n  value: number;\n  group: number;\n}\ninterface TreeData { \n  nodes: VegaNode[];\n  edges: VegaEdge[]\n}\nconst ClusterBoard: React.FC<ClusterBoardProps> = (props) => {\n  const { adjMatrix, measures, onFocusGroup } = props;\n  const [state, updateState] = useGlobalState();\n  const chart = useRef<HTMLDivElement>(null);\n  // const groups = useMemo<string[][]>(() => {\n  //   return clusterMeasures({\n  //     matrix: adjMatrix,\n  //     measures,\n  //   })\n  // }, [adjMatrix, measures]);\n  const clusterResult = useMemo(() => {\n    /**\n     * todo: \n     * maxGroupNumber = the measures length / max visual channel for measure.\n     */\n    let { edgesInMST, groups } = kruskalMST(adjMatrix, state.maxGroupNumber);\n    return { edgesInMST, groups }\n  }, [adjMatrix, state.maxGroupNumber])\n  const treeData = useMemo<TreeData>(() => {\n    let { edgesInMST, groups } = clusterResult;\n    const edges: VegaEdge[] = edgesInMST.map(edge => {\n      return {\n        source: edge[0][0],\n        target: edge[0][1],\n        value: 1 / edge[1],\n        inCutEdge: edge[2]\n      }\n    });\n    const nodes: VegaNode[] = [];\n    for (let i = 0; i < groups.length; i++) {\n      nodes.push({\n        name: measures[i],\n        index: i,\n        value: 1,\n        group: groups[i]\n      })\n    }\n    return {\n      nodes,\n      edges\n    }\n  }, [measures, clusterResult])\n  useEffect(() => {\n    if (chart.current && measures.length > 0) {\n      embed(chart.current, {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"width\": 700,\n        \"height\": 500,\n        \"padding\": 0,\n        \"autosize\": \"none\",\n      \n        \"signals\": [\n          { \"name\": \"cx\", \"update\": \"width / 2\" },\n          { \"name\": \"cy\", \"update\": \"height / 2\" },\n          {\n            \"description\": \"State variable for active node fix status.\",\n            \"name\": \"fix\", \"value\": false,\n            \"on\": [\n              {\n                \"events\": \"text:mouseout[!event.buttons], window:mouseup\",\n                \"update\": \"false\"\n              },\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix || true\"\n              },\n              {\n                \"events\": \"[text:mousedown, window:mouseup] > window:mousemove!\",\n                \"update\": \"xy()\",\n                \"force\": true\n              }\n            ]\n          },\n          {\n            \"description\": \"Graph node most recently interacted with.\",\n            \"name\": \"node\", \"value\": null,\n            \"on\": [\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix === true ? item() : node\"\n              }\n            ]\n          },\n          {\n            \"description\": \"Flag to restart Force simulation upon data changes.\",\n            \"name\": \"restart\", \"value\": false,\n            \"on\": [\n              {\"events\": {\"signal\": \"fix\"}, \"update\": \"fix && fix.length\"}\n            ]\n          }\n        ],\n      \n        \"data\": [\n          {\n            \"name\": \"node-data\",\n            values: treeData.nodes,\n          },\n          {\n            \"name\": \"link-data\",\n            values: treeData.edges\n          }\n        ],\n      \n        \"scales\": [\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"domain\": {\"data\": \"node-data\", \"field\": \"group\"},\n            \"range\": {\"scheme\": \"tableau20\"}\n          },\n          {\n            \"name\": \"colorEdge\",\n            \"type\": \"quantize\",\n            \"domain\": {\"data\": \"link-data\", \"field\": \"value\"},\n            \"range\": {\"scheme\": \"viridis\"}\n          }\n        ],\n      \n        \"marks\": [\n          {\n            \"name\": \"nodes\",\n            \"type\": \"text\",\n            \"zindex\": 1,\n      \n            \"from\": {\"data\": \"node-data\"},\n            \"on\": [\n              {\n                \"trigger\": \"fix\",\n                \"modify\": \"node\",\n                \"values\": \"fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}\"\n              },\n              {\n                \"trigger\": \"!fix\",\n                \"modify\": \"node\", \"values\": \"{fx: null, fy: null}\"\n              }\n            ],\n      \n            \"encode\": {\n              \"enter\": {\n                \"fill\": {\"scale\": \"color\", \"field\": \"group\"},\n                \"text\": {\"field\": \"name\"},\n                \"fontSize\": {\"value\": 14},\n                \"fontWeight\": {\"value\": 600}\n              },\n              \"update\": {\n                \"cursor\": {\"value\": \"pointer\"}\n              }\n            },\n      \n            \"transform\": [\n              {\n                \"type\": \"force\",\n                \"iterations\": 300,\n                \"restart\": {\"signal\": \"restart\"},\n                \"signal\": \"force\",\n                \"forces\": [\n                  {\"force\": \"center\", \"x\": {\"signal\": \"cx\"}, \"y\": {\"signal\": \"cy\"}},\n                  {\"force\": \"collide\" },\n                  {\"force\": \"nbody\" },\n                  {\"force\": \"link\", \"links\": \"link-data\" }\n                ]\n              }\n            ]\n          },\n          {\n            \"type\": \"path\",\n            \"from\": {\"data\": \"link-data\"},\n            \"interactive\": false,\n            \"encode\": {\n              \"update\": {\n                \"stroke\": {\n                  \"scale\": \"colorEdge\",\n                  \"field\": \"value\"\n                },\n                \"strokeWidth\": {\"value\": 0.8},\n                \"opacity\": {\"value\": 0.5}\n              },\n            },\n            \"transform\": [\n              {\n                \"type\": \"linkpath\",\n                \"require\": {\"signal\": \"force\"},\n                \"shape\": \"line\",\n                \"sourceX\": \"datum.source.x\", \"sourceY\": \"datum.source.y\",\n                \"targetX\": \"datum.target.x\", \"targetY\": \"datum.target.y\"\n              }\n            ]\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            let record = item.datum;\n            let group = record.group;\n            let measuresInView = measures.filter((mea, index) => {\n              return clusterResult.groups[index] === group\n            });\n            onFocusGroup(measuresInView);\n          }\n        })\n      })\n    }\n  }, [treeData, measures])\n  return <div ref={chart}>\n  </div>\n}\n\nexport default ClusterBoard;","import React, { useMemo, useState, useEffect } from 'react';\nimport { DataSource, Field } from '../../global';\nimport FieldAnalysisBoard from './fieldAnalysis';\nimport Subspaces from './subspaces';\nimport { FieldSummary, Subspace, combineFieldsService } from '../../service';\nimport ClusterBoard from './cluster';\nimport { specification } from 'visual-insights';\nimport { ProgressIndicator, Toggle, Slider } from 'office-ui-fabric-react';\nimport { useGlobalState } from '../../state';\nimport VegaBase from '../../demo/vegaBase';\nimport './index.css';\nconst maxMeasureInView = 4;\ninterface NoteBookProps {\n  dataSource: DataSource;\n  // dimScores: [string, number, number, Field][],\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[]\n  };\n  subspaceList: Subspace[]\n}\nconst NoteBook: React.FC<NoteBookProps> = (props) => {\n  const { summary, subspaceList, dataSource } = props;\n  const [state, updateState] = useGlobalState();\n  const [isAggregated, setIsAggregated] = useState(false);\n  interface ClusterState {\n    measures: string[];\n    dimensions: string[];\n    matrix: number[][];\n  }\n  const [clusterState, setClusterState] = useState<ClusterState>({\n    measures: [],\n    dimensions: [],\n    matrix: []\n  })\n\n  const [measuresInView, setMeasuresInView] = useState<string[]>([]);\n\n\n  // todo:\n  // should be updated after designing new specification api\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [field.fieldName, field.entropy, field.maxEntropy, { name: field.fieldName, type: field.type }]\n    });\n  }, [summary.origin, summary.grouped])\n\n  const spec = useMemo(() => {\n    const { dimensions, measures } = clusterState;\n    // todo\n    // this condition is not strict enough. dimScores should share same elements with dimensions and measures.\n    // maybe use try catch in future\n    try {\n      /**\n       * fieldScores is the scores info for the dims and meas in current view.\n       * dimensions should get the grouped new field.\n       * measures shall never use the grouped field.\n       */\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measuresInView.includes(field[0])\n      })\n      const { schema } = specification(fieldScores, dataSource, dimensions, measuresInView)\n      return schema;\n    } catch (error) {\n      console.log(error)\n      return {\n        position: []\n      }\n    }\n\n  }, [dimScores, clusterState, dataSource, measuresInView])\n  useEffect(() => {\n    updateState(draft => {\n      draft.maxGroupNumber = Math.round(state.cookedMeasures.length / maxMeasureInView)\n    })\n  }, [state.cookedMeasures])\n  return <div>\n    <h3 className=\"notebook header\">Univariate Summary</h3>\n    <p className=\"state-description\">Hover your mouse over the fields and see the distails and entropy reducing strategy.</p>\n    {state.loading.univariateSummary && <ProgressIndicator description=\"analyzing\" />}\n    <div className=\"notebook content container\">\n      <FieldAnalysisBoard originSummary={summary.origin} groupedSummary={summary.grouped} />\n    </div>\n\n    <h3 className=\"notebook header\">Subspace Searching</h3>\n    <p className=\"state-description\">Try to choose one row(combination of dimensions) of the subspace and see the changes of the processes below.</p>\n    {state.loading.subspaceSearching && <ProgressIndicator description=\"analyzing\" />}\n    {!state.loading.subspaceSearching && <Slider value={state.topK.dimensionSize * 100} label=\"top k percent dimension used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n      onChange={(value: number) => {\n        updateState(draft => {\n          draft.topK.dimensionSize = value / 100;\n        })\n        const selectedDimensions = state.cookedDimensions.slice(0, Math.round(state.cookedDimensions.length * value / 100));\n        combineFieldsService(dataSource, selectedDimensions, state.cookedMeasures, 'sum', state.useServer)\n          .then(subspaces => {\n            if (subspaces) {\n              updateState(draft => {\n                draft.subspaceList = subspaces\n              })\n            }\n          })\n      }}/>}\n      {\n        !state.loading.subspaceSearching && <Slider value={state.topK.subspacePercentSize * 100} label=\"top k percent subspace used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n        onChange={(value: number) => {\n          updateState(draft => {\n            draft.topK.subspacePercentSize = value / 100;\n          })\n        }}/>\n      }\n    <div className=\"notebook content center container\">\n      <Subspaces subspaceList={subspaceList.slice(0, Math.round(subspaceList.length * state.topK.subspacePercentSize))} onSpaceChange={(dimensions, measures, matrix) => {\n        setClusterState({\n          dimensions,\n          measures,\n          matrix\n        })\n      }} />\n    </div>\n\n    <h3 className=\"notebook header\">Measurement Clustering</h3>\n    <p className=\"state-description\">Try to choose one group to visualize them.</p>\n    <Slider\n      label=\"Max Group Number\"\n      min={1}\n      max={state.cookedMeasures.length || 4}\n      step={1}\n      // defaultValue={clusterState.measures.length / 4}\n      value={state.maxGroupNumber}\n      showValue={true}\n      onChange={(value: number) => { updateState(draft => {\n        draft.maxGroupNumber = value\n      })}}\n    />\n    <div className=\"notebook content center container\">\n      <ClusterBoard adjMatrix={clusterState.matrix} measures={clusterState.measures} onFocusGroup={(measInView) => { setMeasuresInView(measInView); console.log('view in measures', measInView) }} />\n    </div>\n\n    <h3 className=\"notebook header\">Visualization</h3>\n    <p className=\"state-description\">\n      If there is no result here, try to click one group of measures in <b>Clustering</b> process above.\n    </p>\n    <Toggle checked={isAggregated} label=\"aggregate measures\" defaultChecked onText=\"On\" offText=\"Off\" onChange={(e, checked: boolean | undefined) => {setIsAggregated(!!checked)}} />\n    <div className=\"notebook content center container\">\n      <VegaBase defaultAggregated={isAggregated} defaultStack={true} aggregator={'sum'}\n        schema={spec}\n        fieldFeatures={dimScores.map(dim => dim[3])}\n        dataSource={dataSource}\n        dimensions={clusterState.dimensions} measures={measuresInView} />\n    </div>\n\n  </div>\n}\n\nexport default NoteBook;","import React from 'react';\nimport { DetailsList, SelectionMode } from 'office-ui-fabric-react';\nimport { DataSource, BIField, BIFieldType } from '../global';\nexport interface DataTableProps {\n  dataSource: DataSource,\n  fields: BIField[]\n}\nconst DataTable: React.FC<DataTableProps> = (props) => {\n  const { dataSource = [], fields = [] } = props;\n  let columns = fields.map(field => {\n    return {\n      key: field.name,\n      name: field.name,\n      fieldName: field.name,\n      minWidth: 70,\n      maxHeight: 90\n    }\n  });\n\n  return <div style={{maxHeight: 400, overflow: 'auto'}}>\n    <DetailsList items={dataSource} columns={columns} selectionMode={SelectionMode.none} />\n  </div>\n}\n\nexport default DataTable;","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Panel, PanelType, Toggle } from 'office-ui-fabric-react';\n\nimport { BIField, BIFieldType } from '../global';\n\ninterface FieldPanelProps {\n  show: boolean;\n  onClose: () => void;\n  onUpdateConfig: (fields: BIField[]) => void;\n  fields: BIField[];\n}\nconst FieldPanel: React.FC<FieldPanelProps> = (props) => {\n  const {\n    show = false,\n    // fields = [],\n    onUpdateConfig,\n    onClose\n  } = props;\n  const [fields, setFields] = useState<BIField[]>([])\n  useEffect(() => {\n    setFields(props.fields)\n  }, [props.fields])\n  \n  function updateFieldType(field: BIField, type: BIFieldType) {\n    setFields(fields => {\n      return fields.map(f => {\n        if (field.name === f.name) {\n          return {\n            name: field.name,\n            type\n          }\n        } else {\n          return f\n        }\n      })\n    })\n  }\n\n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig(fields); onClose(); }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Meta Config\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <div>\n      {\n        fields.map(field => <Toggle key={field.name} checked={field.type === 'dimension'} label={field.name} onText=\"dimension\" offText=\"measure\" onChange={(e, checked) => { updateFieldType(field, checked ? 'dimension' : 'measure')}} />)\n      }\n    </div>\n  </Panel>\n}\n\nexport default FieldPanel;\n","import { Cleaner } from 'visual-insights';\nimport { DataSource } from '../../global';\n\n// todo\n// cleanMethodList has redundency.\n// clean method type, cleanData(switch), cleanMethodList should be maintained in one structure.\nexport type CleanMethod = 'dropNull' | 'useMode' | 'simpleClean';\nexport function cleanData (dataSource: DataSource, dimensions: string[], measures: string[], method: CleanMethod): DataSource {\n  // hint: dropNull works really bad when we test titanic dataset.\n  // useMode fails when there are more null values than normal values;\n  switch (method) {\n    case 'dropNull':\n      return Cleaner.dropNull(dataSource, dimensions, measures);\n    case 'useMode':\n      // todo: bad props design\n      return Cleaner.useMode(dataSource, dimensions.concat(measures));  \n    case 'simpleClean':\n    default:\n      return Cleaner.simpleClean(dataSource, dimensions, measures);\n  }\n}\n\nexport const cleanMethodList: Array<{ key: CleanMethod; text: string }> = [\n  { key: 'dropNull', text: 'drop null records' },\n  { key: 'useMode', text: 'replace null with mode' },\n  { key: 'simpleClean', text: 'simple cleaning' }\n]\n","import React, { useMemo } from 'react';\nimport { BIField, DataSource, Record } from '../../global';\nimport { Transform } from '../../utils/index'\nimport {  cleanData,  CleanMethod } from './clean';\nimport { deepcopy } from '../../utils/index';\n\n\nexport function useDataSource (rawData: DataSource, fields: BIField[], cleanMethod: CleanMethod): [DataSource, DataSource] {\n  const dimensions = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'dimension').map(field => field.name)\n  }, [fields])\n\n  const measures = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'measure').map(field => field.name)\n  }, [fields])\n\n  const dataSource = useMemo<DataSource>(() => {\n    return rawData.map(row => {\n      let record: Record = {}\n      fields.forEach(field => {\n        record[field.name] = field.type === 'dimension' ? row[field.name] : Transform.transNumber(row[field.name])\n      })\n      return record\n    })\n  }, [rawData, fields])\n\n  const preparedData = useMemo<DataSource>(() => {\n    return cleanData(deepcopy(dataSource), dimensions, measures, cleanMethod);\n  }, [dimensions, measures, dataSource, cleanMethod])\n\n  return [dataSource, preparedData]\n}","// todo replace the deepcopy with a safe and faster one.\nexport default function deepcopy(dataSource: any) {\n  return JSON.parse(JSON.stringify(dataSource))\n}","import React, { useState, useRef } from \"react\";\nimport { useGlobalState } from \"../../state\";\nimport { FileLoader, useComposeState } from '../../utils/index';\nimport { ComboBox, PrimaryButton, IconButton, Callout, Stack, CommandBar, ChoiceGroup, IChoiceGroupOption, Slider, Label } from 'office-ui-fabric-react';\nimport DataTable from '../../components/table';\nimport FieldPanel from '../../components/fieldConfig';\nimport { DataSource,  BIField } from '../../global';\nimport {  cleanMethodList, CleanMethod } from './clean';\nimport { Cleaner, Sampling } from 'visual-insights';\nimport { useDataSource } from './useDataSource';\nimport { useId } from '@uifabric/react-hooks';\n\nenum SampleKey {\n  none = 'none',\n  reservoir = 'reservoir',\n}\n\nconst SampleOptions = [\n  {\n    key: SampleKey.none,\n    text: 'none'\n  },\n  {\n    key: SampleKey.reservoir,\n    text: 'reservoir'\n  }\n];\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  }\n}\n\ninterface DataSourceBoardProps {\n  onExtractInsights: () => void;\n}\n\nconst DataSourceBoard: React.FC<DataSourceBoardProps> = (props) => {\n  const [state,updateState, dispatch] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  })\n  const [cleanMethod, setCleanMethod] = useState<CleanMethod>('dropNull');\n  const [sampleMethod, setSampleMethod] = useState<SampleKey>(SampleKey.none)\n  const [sampleSize, setSampleSize] = useState<number>(0.2);\n\n  const dataSetting = useRef<HTMLDivElement>(null);\n  const fileEle = useRef<HTMLInputElement>(null);\n\n  const [dataSource, preparedData] = useDataSource(state.rawData, state.fields, cleanMethod);\n\n  const labelId = useId('labelElement');\n\n  async function fileUploadHanlder () {\n    if (fileEle.current !== null && fileEle.current.files !== null) {\n      const file = fileEle.current.files[0];\n      /**\n       * tmpFields is fields cat by specific rules, the results is not correct sometimes, waitting for human's input\n       */\n      let tmpFields: BIField[] = [];\n      let rawData: DataSource = [];\n\n      if (file.type === 'text/csv' || file.type === 'application/vnd.ms-excel') {\n        rawData = await FileLoader.csvLoader(file);\n      } else if (file.type === 'application/json') {\n        rawData = await FileLoader.jsonLoader(file);\n      } else {\n        throw new Error(`unsupported file type=${file.type} `)\n      }\n      if (sampleMethod === SampleKey.reservoir) {\n        rawData = Sampling.reservoirSampling(rawData, Math.round(rawData.length * sampleSize));\n      }\n      rawData = Cleaner.dropNullColumn(rawData, Object.keys(rawData[0])).dataSource;\n      tmpFields = Object.keys(rawData[0]).map(fieldName => {\n        return {\n          name: fieldName,\n          type: rawData.every(row => {\n            return !isNaN(row[fieldName]) || row[fieldName] === undefined;\n          }) ? 'measure' : 'dimension'\n        }\n      });\n      updateState(draft => {\n        draft.fields = tmpFields;\n        draft.rawData = rawData;\n      })\n      setPageStatus(draft => {\n        draft.show.dataConfig = false;\n      });\n    }\n  }\n  // const analysisHandler = startAnalysis(preparedData, state.fields);\n\n  const commandBarList = [\n    {\n      key: 'upload',\n      name: 'Upload',\n      iconProps: { iconName: 'Upload' },\n      onClick: () => {\n        if (fileEle.current) {\n          fileEle.current.click();\n        }\n      }\n    }\n  ]\n\n  return (\n    <div className=\"content-container\">\n      <FieldPanel\n        fields={state.fields}\n        show={pageStatus.show.fieldConfig}\n        onUpdateConfig={fields => {\n          updateState(draft => {\n            draft.fields = fields;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.fieldConfig = false;\n          });\n        }}\n      />\n      <div className=\"card\">\n        <Stack horizontal>\n          <PrimaryButton\n            disabled={dataSource.length === 0}\n            iconProps={{ iconName: \"Financial\" }}\n            text=\"Extract Insights\"\n            onClick={() => {\n              dispatch('extractInsights', {\n                dataSource: preparedData,\n                fields: state.fields\n              })\n              props.onExtractInsights();\n            }}\n          />\n          <div ref={dataSetting}>\n            <IconButton\n              iconProps={{ iconName: \"ExcelDocument\" }}\n              title=\"Upload\"\n              ariaLabel=\"upload data\"\n              onClick={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = true;\n                });\n              }}\n            />\n            <Callout\n              style={{ maxWidth: 300 }}\n              className=\"vi-callout-callout\"\n              role=\"alertdialog\"\n              gapSpace={0}\n              target={dataSetting.current}\n              onDismiss={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = false;\n                });\n              }}\n              setInitialFocus={true}\n              hidden={!pageStatus.show.dataConfig}\n            >\n              <div className=\"vi-callout-header\">\n                <p className=\"vi-callout-title\">Upload Your own dataset</p>\n              </div>\n              <div className=\"vi-callout-inner\">\n                <div className=\"vi-callout-content\">\n                  <p className=\"vi-callout-subTex\">\n                    .csv, .json are supportted.\n                  </p>\n                </div>\n                <div>\n                <Label id={labelId} required={true}>\n                  Sampling\n                </Label>\n                <ChoiceGroup\n                  defaultSelectedKey=\"B\"\n                  options={SampleOptions}\n                  selectedKey={sampleMethod}\n                  onChange={(ev: any, option: IChoiceGroupOption | undefined) => {\n                    if (option) {\n                      setSampleMethod(option.key as SampleKey)\n                    }\n                  }}\n                  ariaLabelledBy={labelId}\n                />\n                {\n                  sampleMethod !== SampleKey.none && <Slider\n                    label=\"sample size(percent)\"\n                    min={0}\n                    max={1}\n                    step={0.001}\n                    value={sampleSize}\n                    showValue={true}\n                    valueFormat={(value: number) => `${(value * 100).toFixed(1)}%`}\n                    onChange={(val: number) => { setSampleSize(val) }}\n                  />\n                }\n                </div>\n                <div className=\"vi-callout-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileEle}\n                    multiple\n                    accept=\"*\"\n                    style={{ display: \"none\" }}\n                    onChange={fileUploadHanlder}\n                  />\n                  <CommandBar\n                    overflowButtonProps={{ name: \"More\" }}\n                    items={commandBarList}\n                  />\n                </div>\n              </div>\n            </Callout>\n          </div>\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Field Setting\"\n            ariaLabel=\"field setting\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.fieldConfig = true;\n              });\n            }}\n          />\n        </Stack>\n        <div style={{ margin: \"20px 0px\" }}>\n          <ComboBox\n            styles={{ root: { maxWidth: \"180px\" } }}\n            selectedKey={cleanMethod}\n            label=\"Clean Method\"\n            allowFreeform={true}\n            autoComplete=\"on\"\n            options={cleanMethodList}\n            onChange={(e, option) => {\n              option && setCleanMethod(option.key as CleanMethod);\n            }}\n          />\n        </div>\n        <p style={{ fontSize: 12, fontWeight: 400, color: \"#595959\" }}>\n          Remember to adjust the fields' types and cleaning strategy before\n          extracting insights.\n        </p>\n        <i style={{ fontSize: 12, fontWeight: 300, color: \"#595959\" }}>\n          Number of records {preparedData.length}\n        </i>\n        <DataTable fields={state.fields} dataSource={preparedData} />\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceBoard;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { DataSource } from \"../../global\";\nimport datalib from \"datalib\";\n\nfunction numberWithCommas(x: number): string {\n  let parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\nconst Card = styled.div`\n  float: left;\n  padding: 1rem;\n  border: 1px solid #f5f5f5;\n  margin: 1rem;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB',\n  'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n  'Segoe UI Emoji', 'Segoe UI Symbol';\n  .indicator-card.header {\n    color: #8c8c8c;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    font-size: 20px;\n    line-height: 28px;\n    font-weight: 400;\n  }\n  .indicator-card.content {\n    color: #0078d4;\n    font-size: 56px;\n    line-height: 64px;\n    font-weight: 400;\n    margin: 0px;\n  }\n`;\ninterface IndicatorProps {\n  dataSource: DataSource;\n  measures: string[];\n  operator?: 'sum' | 'mean' | 'max' | 'min';\n}\nconst IndicatorCard: React.FC<IndicatorProps> = props => {\n  const { dataSource = [], measures = [], operator = 'sum' } = props;\n  const value = useMemo(() => {\n    if (measures.length === 0 || dataSource.length === 0) {\n      return '-'\n    }\n    let ans = 0;\n    try {\n      ans = datalib[operator](dataSource.map(d => d[measures[0]]));\n    } catch (error) {\n      console.log('operator does not exist or not in vega/datalib.')\n    }\n    if (Math.abs(ans - Math.round(ans)) > 0.00001) {\n      ans = Number(ans.toFixed(2));\n    }\n    return numberWithCommas(ans);\n  }, [dataSource, measures]);\n\n  return (\n    <Card>\n      <h4 className=\"indicator-card header\">{measures[0]} {operator && `(${operator})`}</h4>\n      <h1 className=\"indicator-card content\">{ value }</h1>\n    </Card>\n  );\n};\n\nexport default IndicatorCard;\n","import React, { useMemo, useEffect, useState } from \"react\";\nimport { DashBoard } from \"../../service\";\nimport { DataSource, Field, FieldType } from \"../../global\";\nimport { specification } from \"visual-insights\";\nimport embed, { VisualizationSpec } from \"vega-embed\";\nimport { VegaLite } from \"react-vega\";\nimport { geomTypeMap } from \"../../demo/vegaBase\";\nimport produce from \"immer\";\nimport { useComposeState } from \"../../utils/index\";\nimport { IconButton } from \"office-ui-fabric-react\";\nimport IndicatorCard from \"./indicatorCard\";\n\nconst IndicatorCardType = \"indicator\" as const;\n\ninterface CombinedChartProps {\n  dashBoard: DashBoard;\n  dataSource: DataSource;\n  dimScores: [string, number, number, Field][];\n}\n\ninterface GlobalFilters {\n  [key: string]: any[];\n}\n\nfunction getFieldScale (dataSource: DataSource, field: XMLDocument, type: 'quantitative' | 'norminal') {\n  return \n}\n\nconst CombinedChart: React.FC<CombinedChartProps> = props => {\n  const { dashBoard, dataSource, dimScores } = props;\n  const [globalFilters, setGlobalFilters] = useComposeState<GlobalFilters>({});\n  const [chartStateList, setChartStateList] = useState<boolean[]>([]);\n\n  useEffect(() => {\n    setChartStateList(dashBoard.map(() => false));\n  }, [dashBoard]);\n  const filedDomains = useMemo(() => {\n    const fieldList = dimScores.map(f => f[0]);\n    let domainDict: {[key: string]: any[]} = {};\n    let dsLen = dataSource.length;\n    let fLen = fieldList.length;\n    for (let i = 0; i < fLen; i++) {\n      if (dimScores[i][3].type !== 'quantitative') {\n        continue;\n        // tmp\n      }\n      let fieldName = fieldList[i];\n      domainDict[fieldName] = [0, 100];\n      let min = Infinity;\n      let max = -Infinity;\n      for (let j = 0; j < dsLen; j++) {\n        min = Math.min(dataSource[j][fieldName], min)\n        max = Math.max(dataSource[j][fieldName], max)\n      }\n      domainDict[fieldName] = [min, max];\n    }\n    return domainDict;\n  }, [dataSource, dimScores])\n  const chartSpecList = useMemo(() => {\n    if (!dashBoard || !dataSource || !dimScores) {\n      return [];\n    }\n    return dashBoard.map(board => {\n      const { dimensions, measures, type } = board;\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measures.includes(field[0]);\n      });\n      let { schema } = specification(\n        fieldScores,\n        dataSource,\n        dimensions,\n        measures\n      );\n      schema.position = schema.position || [];\n      schema.color = schema.color || [];\n      schema.opacity = schema.opacity || [];\n      schema.size = schema.size || [];\n      schema.shape = schema.shape || [];\n      schema.geomType = schema.geomType || [];\n      return {\n        dimensions,\n        measures,\n        type,\n        schema\n      };\n    });\n  }, [dashBoard, dataSource, dimScores]);\n\n  const fieldFeatures = dimScores.map(dim => dim[3]);\n\n  function getFieldType(field: string): FieldType {\n    let targetField = fieldFeatures.find(f => f.name === field);\n    return targetField ? targetField.type : \"nominal\";\n  }\n\n  function shouldFieldAggregate(\n    field: string,\n    dimensions: string[],\n    measures: string[],\n    geomType: string\n  ): boolean {\n    if (geomType === \"point\") {\n      return false;\n    }\n    const fieldType = getFieldType(field);\n    if (fieldType === \"quantitative\" && measures.includes(field)) {\n      return true;\n    }\n    return false;\n  }\n\n  const specList = useMemo<any[]>(() => {\n    return chartSpecList.map((spec, index) => {\n      const { dimensions, measures, schema, type } = spec;\n      if (type === \"target\" && measures.length === 1) {\n        return {\n          type: IndicatorCardType,\n          measures: measures,\n          operator: \"sum\"\n        };\n      }\n\n      const markType =\n        schema.geomType![0] && geomTypeMap[schema.geomType![0]]\n          ? geomTypeMap[schema.geomType![0]]\n          : schema.geomType![0];\n      const xType = getFieldType(schema.position![0]);\n      const yType = getFieldType(schema.position![1]);\n      const xAgg = shouldFieldAggregate(schema.position![0], dimensions, measures, markType);\n      const yAgg = shouldFieldAggregate(schema.position![1], dimensions, measures, markType);\n      const mustDefineScale = xType === 'quantitative' && yType === 'quantitative';\n      return {\n        // transform: filters.length > 0 && [...filters],\n        // width: 300,\n        data: { name: \"dataSource\" },\n        // padding: 26,\n        autosize: {\n          type: \"pad\"\n        },\n        mark: markType,\n        selection: {\n          sl: {\n            type: markType === \"bar\" ? \"single\" : \"interval\",\n            encodings: markType === \"bar\" ? [\"x\"] : undefined\n          }\n        },\n        encoding: {\n          x: schema.position![0] && {\n            field: schema.position![0],\n            type: getFieldType(schema.position![0]),\n            aggregate: xAgg && 'sum',\n            scale: mustDefineScale && !xAgg ? { domain: filedDomains[schema.position![0]] } : undefined\n          },\n          y: schema.position![1] && {\n            field: schema.position![1],\n            type: getFieldType(schema.position![1]),\n            aggregate: yAgg && 'sum',\n            scale: mustDefineScale && !yAgg ? { domain: filedDomains[schema.position![1]] } : undefined\n          },\n          size: schema.size![0] && {\n            field: schema.size![0],\n            type: getFieldType(schema.size![0])\n          },\n          opacity: schema.opacity![0] && {\n            field: schema.opacity![0],\n            type: getFieldType(schema.opacity![0])\n          },\n          shape: schema.shape![0] && {\n            field: schema.shape![0],\n            type: getFieldType(schema.shape![0])\n          },\n          color: schema.color![0] && {\n            field: schema.color![0],\n            type: schema.color![0] && getFieldType(schema.color![0])\n          }\n        }\n      };\n    }) as any;\n  }, [chartSpecList, filedDomains]);\n  const dataSourceContainer = useMemo(() => {\n    return { dataSource };\n  }, [dataSource, specList, dimScores]);\n\n  const signalHandler = useMemo(() => {\n    return dashBoard.map((d, index) => {\n      return {\n        sl: (name: any, values: any) => {\n          if (chartStateList[index]) {\n            setGlobalFilters(draft => {\n              if (Object.keys(values).length === 0) {\n                for (let key in draft) {\n                  // delete draft[key]\n                  draft[key] = [];\n                }\n              } else {\n                for (let key in values) {\n                  draft[key] = values[key];\n                }\n              }\n            });\n          }\n        }\n      };\n    });\n  }, [dashBoard, chartStateList, dimScores, specList]);\n  const vsourceList = useMemo<Array<{ dataSource: DataSource }>>(() => {\n    let ans = [];\n    const filters = Object.keys(globalFilters).map(fieldName => {\n      return {\n        fieldName: fieldName,\n        filter: globalFilters[fieldName],\n        // protentional risk\n        isRange:\n          globalFilters[fieldName].length === 2 &&\n          typeof globalFilters[fieldName][0] === \"number\" &&\n          typeof globalFilters[fieldName][1] === \"number\" &&\n          globalFilters[fieldName][0] < globalFilters[fieldName][1]\n      };\n    });\n    for (let i = 0; i < dashBoard.length; i++) {\n      if (chartStateList[i]) {\n        ans.push(dataSourceContainer);\n        continue;\n      }\n      const ds = dataSource.filter(record => {\n        return filters.every(f => {\n          if (f.filter.length === 0) {\n            return true;\n          }\n          if (f.isRange) {\n            return (\n              record[f.fieldName] >= f.filter[0] &&\n              record[f.fieldName] <= f.filter[1]\n            );\n          } else {\n            return f.filter.includes(record[f.fieldName]);\n          }\n        });\n      });\n      ans.push({ dataSource: ds });\n    }\n    return ans;\n  }, [\n    dashBoard,\n    globalFilters,\n    dataSource,\n    chartStateList,\n    specList,\n    dataSourceContainer\n  ]);\n  return (\n    <div>\n      {specList.map((spec, index) =>\n        spec.type === IndicatorCardType ? (\n          <IndicatorCard\n            key={`ds-chart-${index}`}\n            dataSource={vsourceList[index].dataSource}\n            measures={spec.measures}\n          />\n        ) : (\n          <div\n            key={`ds-chart-${index}`}\n            style={{\n              float: \"left\",\n              padding: \"4px\",\n              margin: \"2px\",\n              height: \"380px\",\n              overflowY: \"auto\"\n            }}\n          >\n            <div\n              style={{ float: \"left\", minWidth: \"300px\", minHeight: \"300px\" }}\n            >\n              <VegaLite\n                data={vsourceList[index]}\n                spec={spec}\n                actions={true}\n                signalListeners={\n                  chartStateList[index] && (signalHandler[index] as any)\n                }\n              />\n            </div>\n            <div style={{ float: \"left\" }}>\n              <IconButton\n                iconProps={{\n                  iconName: chartStateList[index] ? \"FilterSolid\" : \"Filter\"\n                }}\n                onClick={() => {\n                  setChartStateList(list => {\n                    let nextList = [...list];\n                    nextList[index] = !nextList[index];\n                    return nextList;\n                  });\n                }}\n              />\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default CombinedChart;\n","import React, { useState } from \"react\";\nimport { PrimaryButton, DefaultButton, Stack, Separator, ProgressIndicator } from \"office-ui-fabric-react\";\nimport { useGlobalState } from \"../../state\";\nimport CombinedChart from \"./combinedChart\";\n\nconst DashBoardPage: React.FC = props => {\n  const [state, updateState, dispatch, getters] = useGlobalState();\n  const [dashBoardIndex, setDashBoardIndex] = useState(0);\n  const {\n    subspaceList,\n    cookedDataSource,\n    cookedDimensions,\n    cookedMeasures,\n    dashBoardList\n  } = state;\n  const { dimScores } = getters;\n  return (\n    <div className=\"content-container\">\n      <div className=\"card\">\n        <PrimaryButton\n          text=\"Generate Dashboard\"\n          disabled={subspaceList.length === 0}\n          iconProps={{ iconName: \"AreaChart\" }}\n          onClick={() => {\n            dispatch(\"getDashBoard\", {\n              dataSource: cookedDataSource,\n              dimensions: cookedDimensions,\n              measures: cookedMeasures\n            });\n          }}\n        />\n        { state.loading.dashBoard && <ProgressIndicator description=\"generating dashboard\" /> }\n        <Separator>current page no: {dashBoardIndex + 1} of {dashBoardList.length}</Separator>\n        <Stack horizontal tokens={{ childrenGap: 20 }}>\n          <DefaultButton\n            text=\"Last\"\n            onClick={() => {\n              setDashBoardIndex(index => (index + dashBoardList.length - 1) % dashBoardList.length)\n            }}\n            allowDisabledFocus\n          />\n          <DefaultButton\n            text=\"Next\"\n            onClick={() => {\n              setDashBoardIndex(index => (index + 1) % dashBoardList.length)\n            }}\n            allowDisabledFocus\n          />\n        </Stack>\n        <p className=\"state-description\">\n          Double click the chart with selection to clear selection(filter).\n        </p>\n        <div\n          style={{\n            overflowX: \"auto\",\n            margin: \"1rem\",\n            border: \"1px solid #e8e8e8\"\n          }}\n        >\n          {dashBoardList[dashBoardIndex] && dashBoardList[dashBoardIndex].length > 0 && (\n            <CombinedChart\n              dataSource={cookedDataSource}\n              dashBoard={dashBoardList[dashBoardIndex]}\n              dimScores={dimScores}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoardPage;\n","import React, { useRef, useState } from \"react\";\nimport { Callout, ActionButton, Toggle, DirectionalHint } from \"office-ui-fabric-react\";\nimport { useGlobalState } from \"../state\";\n\nconst UserSettings: React.FC = props => {\n  const target = useRef<HTMLDivElement>(null);\n  const [show, setShow] = useState<boolean>(false);\n  const [state, updateState] = useGlobalState();\n  return (\n    <div>\n      <div ref={target}>\n        <ActionButton text=\"Preference\" iconProps={{ iconName: 'PlayerSettings' }} onClick={() => {setShow(true)}}></ActionButton>\n      </div>\n\n      {show && (\n        <Callout\n          target={target.current}\n          directionalHint={DirectionalHint.bottomLeftEdge}\n          onDismiss={() => {\n            setShow(false);\n          }}\n        >\n          <div style={{ padding: '1rem' }}>\n            <Toggle\n              label=\"use server\"\n              checked={state.useServer}\n              onText=\"On\"\n              offText=\"Off\"\n              onChange={(\n                ev: React.MouseEvent<HTMLElement>,\n                checked?: boolean\n              ) => {\n                updateState(draft => {\n                  draft.useServer = checked || false;\n                });\n              }}\n            />\n          </div>\n        </Callout>\n      )}\n    </div>\n  );\n};\n\nexport default UserSettings;\n\n","import React from \"react\";\nimport { useGlobalState, GlobalStateProvider } from \"./state\";\nimport { Pivot, PivotItem, Toggle } from \"office-ui-fabric-react\";\nimport { useComposeState } from \"./utils/index\";\nimport \"./App.css\";\n\nimport Gallery from \"./pages/gallery/index\";\nimport NoteBook from \"./pages/notebook/index\";\nimport DataSourceBoard from \"./pages/dataSource/index\";\nimport DashBoardPage from './pages/dashBoard/index';\nimport UserSettings from './components/userSettings';\n\nconst pivotList = [\n  {\n    title: \"DataSource\",\n    itemKey: \"pivot-\" + 1\n  },\n  {\n    title: \"NoteBook\",\n    itemKey: \"pivot-\" + 2\n  },\n  {\n    title: \"Explore\",\n    itemKey: \"pivot-\" + 3\n  },\n  {\n    title: \"DashBaord\",\n    itemKey: \"pivot-\" + 4   \n  }\n];\nconst getLogoSrc = (withGlasses: boolean) => {\n  return withGlasses\n    ? \"https://ch-rath.oss-ap-northeast-1.aliyuncs.com/assets/rath-glasses.png\"\n    : \"https://ch-rath.oss-ap-northeast-1.aliyuncs.com/assets/rath.png\";\n};\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n  current: {\n    pivotKey: string;\n  };\n}\n\nfunction App() {\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    },\n    current: {\n      pivotKey: pivotList[0].itemKey\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"header-bar\">\n        <div className=\"ms-Grid-row\">\n          <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg1\">\n            <a\n              href=\"https://github.com/ObservedObserver/visual-insights\"\n              className=\"logo\"\n            >\n              <img src={ getLogoSrc(state.useServer) } />\n            </a>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg8\">\n            <Pivot\n              selectedKey={pageStatus.current.pivotKey}\n              onLinkClick={item => {\n                item &&\n                  item.props.itemKey &&\n                  setPageStatus(draft => {\n                    draft.current.pivotKey = item.props.itemKey!;\n                  });\n              }}\n              headersOnly={true}\n            >\n              {pivotList.map(pivot => (\n                <PivotItem\n                  key={pivot.itemKey}\n                  headerText={pivot.title}\n                  itemKey={pivot.itemKey}\n                />\n              ))}\n            </Pivot>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\">\n          <div className=\"header-toolbar\">\n              <UserSettings />\n            </div>\n          </div>\n        </div>\n      </div>\n      {pageStatus.current.pivotKey === \"pivot-3\" && (\n        <Gallery\n          subspaceList={state.subspaceList}\n          dataSource={state.cookedDataSource}\n          summary={state.summary}\n        />\n      )}\n      {pageStatus.current.pivotKey === \"pivot-1\" && <DataSourceBoard onExtractInsights={() => {\n        setPageStatus(draft => {\n          draft.current.pivotKey = \"pivot-3\";\n          draft.show.insightBoard = true;\n        });\n      }\n      } />}\n      {pageStatus.current.pivotKey === \"pivot-2\" && (\n        <div className=\"content-container\">\n          <div className=\"card\">\n            <NoteBook\n              summary={state.summary}\n              subspaceList={state.subspaceList}\n              dataSource={state.cookedDataSource}\n            />\n          </div>\n        </div>\n      )}\n      {\n        pageStatus.current.pivotKey === 'pivot-4' && <DashBoardPage />\n      }\n    </div>\n  );\n}\n\nexport default function() {\n  return (\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { initializeIcons } from '@uifabric/icons';\nimport * as serviceWorker from './serviceWorker';\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}