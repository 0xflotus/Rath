{"version":3,"sources":["workers/dashboard.worker.js","workers/cluster.worker.js","workers/combineFields.worker.js","workers/fieldsSummary.worker.js","workers/groupFields.worker.js","service.ts","actions.ts","state.tsx","utils/fileParser.ts","utils/transform.ts","utils/useComposeState.tsx","components/preference.tsx","queries/featureVis.ts","queries/targetVis.ts","queries/baseVis.ts","queries/index.ts","visBuilder/vegaBase.tsx","../../visual-insights/build/esm/utils.js","../../visual-insights/build/esm/specification.js","../../visual-insights/build/esm/insights/cluster.js","../../visual-insights/build/esm/cleaner/index.js","../../visual-insights/build/esm/sampling/index.js","plugins/visSummary/index.tsx","plugins/visSummary/description.tsx","pages/gallery/association/digDimension.tsx","pages/gallery/association/index.tsx","pages/gallery/index.tsx","pages/notebook/distributionChart.tsx","pages/notebook/fieldAnalysis.tsx","pages/notebook/subspaces.tsx","pages/notebook/cluster.tsx","pages/notebook/index.tsx","components/table.tsx","components/fieldConfig.tsx","pages/dataSource/clean.ts","pages/dataSource/useDataSource.tsx","utils/deepcopy.ts","pages/dataSource/index.tsx","pages/dashBoard/indicatorCard.tsx","components/react-vega.tsx","pages/dashBoard/combinedChart.tsx","pages/dashBoard/index.tsx","pages/search/index.tsx","components/userSettings.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","server","workerService","worker","data","Promise","resolve","reject","postMessage","onmessage","e","onerror","success","message","error","getFieldsSummaryService","dataSource","fields","useServer","a","fieldSummaryList","fetch","method","headers","body","JSON","stringify","res","json","result","Error","console","fieldsSummaryWorker","terminate","getGroupFieldsService","ans","groupedData","newFields","groupFieldsWorker","combineFieldsService","dimensions","measures","operator","subspaceList","combineFieldsWorker","clusterMeasures","maxGroupNumber","combinedSpaces","viewSpaces","spaces","map","v","i","index","clusterWorker","generateDashBoard","subspaces","dashBoardList","dashBoardGeneratorWorker","univariateSummary","state","updateState","params","filter","field","type","name","f","originSummary","fieldWithTypeList","includes","fieldName","groupedResult","newBIFields","groupedField","find","newDimensions","groupedSummary","draft","cookedDataSource","summary","origin","grouped","loading","concat","subspaceSearch","subspaceSearching","orderedDimensions","d","target","g","entropy","Infinity","sort","b","cookedDimensions","cookedMeasures","selectedDimensions","slice","Math","round","length","topK","dimensionSize","getViewSpaces","space","matrix","correlationMatrix","log","extractInsights","gallery","univariateResult","actions","getDashBoard","dashBoard","setAutoFreeze","initState","currentPage","rawData","subspacePercentSize","GloalStateContext","createContext","GlobalStateProvider","children","useState","setState","getters","dimScores","useMemo","maxEntropy","useGetters","stateUpdater","produce","draftState","Provider","value","actionName","useGlobalState","useContext","csvLoader","file","Papa","parse","complete","results","row","record","forEach","jsonLoader","reader","FileReader","readAsText","onload","ev","transNumber","num","isNaN","Number","useComposeState","nextState","checkboxStyles","root","marginTop","aggregationList","key","text","PreferencePanel","props","show","onUpdateConfig","onClose","config","aggregator","setAggregator","defaultAggregated","setDefaultAggregated","defaultStack","setDefaultStack","useEffect","Panel","isOpen","PanelType","smallFixedFar","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","Label","Stack","verticalFill","tokens","childrenGap","padding","ComboBox","selectedKey","label","allowFreeform","autoComplete","options","onChange","option","Checkbox","styles","checked","isChecked","featureVis","query","fieldTypeDict","getFieldSemanticType","semanticType","shouldFieldAggregate","geomType","fieldType","getFieldType","markType","geomTypeMap","xType","position","yType","colorType","color","xAgg","yAgg","adjustColorField","opacity","size","autosize","mark","selection","sl","encodings","undefined","encoding","x","bin","maxbins","aggregate","y","column","facets","shape","targetVis","repeat","highFacets","columns","spec","interval","line","point","density","baseVis","aggregatedMeasures","fieldFeatures","page","adjustField","aggField","mea","as","targetField","fieldMap","width","values","basicSpec","tooltip","channel","stack","transform","groupby","dim","Boolean","sliderSpec","brush","vconcat","BaseChart","schema","container","useRef","op","table","asFields","current","embed","ref","memberCount","counter","Map","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Symbol","iterator","next","done","member","has","set","get","err","return","entries","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","geomTypes","area","path","findBestField","fieldRankList","choosen","aestheticMapping","dimFields","visualElements","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","priority","fieldLeft","typeIndex","channelList","aggData","dimIndex","dimMembers","geom","turnAdjMatrix2List","edges","j","abs","parents","n","union","n1","n2","p1","p2","dropNullColumn","keepFields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","finalFields","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dropNull","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","keep","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_loop","every","isFieldNumeric","toString","isNullValue","useMode","fieldNames","countMap","modeMap","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_fieldName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_counter","members","max","maxPos","newDataSource","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_record","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_fieldName2","simpleClean","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","reservoirSampling","sampleSpace","len","pos","random","StoryTeller","spaceList","isTeachingBubbleVisible","setIsTeachingBubbleVisible","sortedFieldsScores","mostInfluencedDimension","sp","some","bestMeasure","measuresInView","min","minPos","countDiffField","join","DefaultButton","id","TeachingBubble","calloutProps","directionalHint","DirectionalHint","bottomCenter","isWide","hasCloseIcon","headline","VisDescription","similarityThrehold","topKRelatedSpace","measuresRelatedScore","measures1","measures2","meaSet","Set","meaSet1","meaSet2","meaVec1","meaVec2","score","sqrt","useDigDimension","interestedViewSpace","fieldScores","relatedSpaces","visualConfig","subDim","rankedRelatedSpaces","measureSimilarity","relatedScore","spaceFieldScores","specification","Association","digDimensionProps","onSelectView","relatedCharts","className","view","currentSpace","dimensions1","dimensions2","dim1","style","border","margin","overflow","fontSize","horizontal","IconButton","iconProps","iconName","title","Gallery","setCurrentPage","insightBoard","fieldConfig","configPanel","dataConfig","pageStatus","setPageStatus","showAssociation","setShowAssociation","setVisualConfig","setViewSpaces","dataView","setDataView","gotoPage","pageNo","then","viewState","subspace","ProgressIndicator","description","marginBottom","ariaLabel","dir","SpinButton","step","labelPosition","Position","end","onValidate","onIncrement","onDecrement","incrementButtonAriaLabel","decrementButtonAriaLabel","allowDisabledFocus","findIndex","DistributionChart","chart","hasIndex","test","memberName","exec","groups","left","sortBy","background","height","axis","minWidth","maxWidth","getIconNameByFieldType","contrastColor","FieldAnalsis","entropyRange","originEntropy","s","onRenderCompactCard","item","toFixed","distribution","onRenderExpandedCard","DetailsList","compact","items","selectionMode","SelectionMode","none","onRenderItemColumn","expandingCardProps","renderData","compactCardHeight","expandedCardHeight","fieldContent","bgColor","Icon","range","chroma","scale","domain","rgb","bgColorStr","fontColorStr","HoverCard","expandedCardOpenDelay","instantOpenOnClick","boxShadow","backgroundColor","encodeArr","arr","Subspaces","onSpaceChange","curIndex","setCurIndex","spaceChart","relationChart","targetSpace","m","measureName","measureValue","on","reverse","condition","addEventListener","datum","correlation","scheme","ClusterBoard","adjMatrix","onFocusGroup","clusterResult","groupNumber","edgesInMST","inCutEdge","edge","kruskalMST","treeData","nodes","group","NoteBook","isAggregated","setIsAggregated","clusterState","setClusterState","setMeasuresInView","usedSubspaceList","Slider","disabled","valueFormat","showValue","measInView","Toggle","defaultChecked","onText","offText","DataTable","maxHeight","FieldPanel","setFields","updateFieldType","cleanMethodList","useDataSource","cleanMethod","Transform","preparedData","Cleaner","cleanData","deepcopy","SampleKey","SampleOptions","reservoir","DataSourceBoard","dispatch","setCleanMethod","fixUnicodeField","setFixUnicodeField","sampleMethod","setSampleMethod","sampleSize","setSampleSize","dataSetting","fileEle","labelId","useId","files","tmpFields","FileLoader","Sampling","fixedRecord","commandBarList","click","onExtractInsights","Callout","role","gapSpace","setInitialFocus","hidden","required","ChoiceGroup","defaultSelectedKey","ariaLabelledBy","val","multiple","accept","display","CommandBar","overflowButtonProps","fontWeight","Card","styled","div","IndicatorCard","datalib","parts","split","replace","numberWithCommas","ReactVega","signalHandler","setView","addSignalListener","removeSignalListener","change","vega","changeset","remove","insert","resize","runAsync","CombinedChart","globalFilters","setGlobalFilters","chartStateList","setChartStateList","filedDomains","fieldList","domainDict","dsLen","fLen","chartSpecList","board","specList","dataFields","specIndex","vegaSpec","vsourceList","filters","isRange","ds","overflowY","float","minHeight","list","nextList","DashBoardPage","dashBoardIndex","setDashBoardIndex","Separator","overflowX","VisCard","PageLinkButton","PAGE_SIZE","PAGE_OFFSET","SearchPage","targetViewSpaces","setTargetViewSpaces","fuse","Fuse","maxPageNumber","ceil","minVisPage","maxVisPage","itemRange","visPageRange","Array","lastPage","p","nextPage","usePageController","SearchBox","placeholder","onSearch","newValue","search","underlined","UserSettings","setShow","ActionButton","bottomLeftEdge","pivotList","itemKey","getLogoSrc","withGlasses","App","pivotKey","href","src","alt","Pivot","onLinkClick","headersOnly","pivot","PivotItem","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1589901.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"86831ec2ff166372dede.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"a2625019b65995cfb653.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"efbd0116efaf8d4a91ac.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"845d5cd276896d51348d.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"49a1d7cd98e18b0fb020.worker.js\");\n};","import { DataSource,  Field, FieldType, OperatorType } from './global';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport dashBoardGeneratorWorker from './workers/dashboard.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport clusterWorker from './workers/cluster.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport combineFieldsWorker from './workers/combineFields.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport fieldsSummaryWorker from './workers/fieldsSummary.worker';\n/* eslint import/no-webpack-loader-syntax:0 */\n// @ts-ignore\n// eslint-disable-next-line\nimport groupFieldsWorker from './workers/groupFields.worker';\n\nlet server = '//lobay.moe:8443';\n\nif (process.env.NODE_ENV !== 'production') {\n  console.log('using dev server');\n  server = '//localhost:8000';\n}\n\ninterface SuccessResult<T> {\n  success: true;\n  data: T;\n}\ninterface FailResult<T> {\n  success: false;\n  message: string;\n}\n\ntype Result<T> = SuccessResult<T> | FailResult<T>;\n\nfunction workerService<T, R> (worker: Worker, data: R): Promise<Result<T>> {\n  return new Promise<Result<T>>((resolve, reject) => {\n    worker.postMessage(data);\n    worker.onmessage = (e: MessageEvent) => {\n      resolve(e.data)\n    }\n    worker.onerror = (e: ErrorEvent) => {\n      reject({\n        success: false,\n        message: e.error\n      })\n    }\n  })\n}\n\nexport interface View {\n  groups: string[][];\n  detail: [string[], any, number[][]];\n  score: number;\n}\n\n/**\n * statistic description for a field\n */\nexport interface FieldSummary {\n  fieldName: string;\n  entropy: number;\n  maxEntropy: number;\n  distribution: Array<{ memberName: string; count: number }>\n  type: FieldType\n}\nexport async function getFieldsSummaryService (dataSource: DataSource, fields: string[] | Field[], useServer?: boolean): Promise<FieldSummary[]> {\n  let fieldSummaryList: FieldSummary[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/fieldsSummary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          fields\n        })\n      })\n      const result: Result<FieldSummary[]> = await res.json();\n      if (result.success === true) {\n        fieldSummaryList = result.data;\n      } else {\n        throw new Error('[fields summary failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new fieldsSummaryWorker();\n    const result = await workerService<FieldSummary[], any>(worker, { dataSource, fields });\n    if (result.success === true) {\n      fieldSummaryList = result.data;\n    } else {\n      throw new Error('[fields summary failed]' + result.message)\n    }\n    worker.terminate()\n  }\n  return fieldSummaryList\n}\n\ninterface GroupFieldsResponse {\n  groupedData: DataSource;\n  newFields: Field[];\n  fields: Field[];\n}\nexport async function getGroupFieldsService (dataSource: DataSource, fields: Field[], useServer?: boolean): Promise<GroupFieldsResponse> {\n  let ans: GroupFieldsResponse = {\n    groupedData: [],\n    newFields: [],\n    fields: []\n  };\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/groupFields', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          fields\n        })\n      })\n      const result: Result<GroupFieldsResponse> = await res.json();\n      if (result.success === true) {\n        ans = result.data;\n      } else {\n        throw new Error('[group fields failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new groupFieldsWorker();\n    const result = await workerService<GroupFieldsResponse, any>(worker, { dataSource, fields });\n    if (result.success === true) {\n      ans = result.data;\n    } else {\n      throw new Error('[group fields failed]' + result.message)\n    }\n    worker.terminate();\n  }\n  return ans;\n}\n\nexport interface Subspace {\n  score: number;\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  correlationMatrix: number[][];\n}\nexport async function combineFieldsService (dataSource: DataSource, dimensions: string[], measures: string[], operator: OperatorType, useServer?: boolean): Promise<Subspace[]> {\n  let subspaceList: Subspace[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/combineFields', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          dimensions,\n          measures,\n          operator\n        })\n      })\n      const result: Result<Subspace[]> = await res.json();\n      if (result.success === true) {\n        subspaceList = result.data;\n      } else {\n        throw new Error('[combine fields failed]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new combineFieldsWorker();\n    const result = await workerService<Subspace[], any>(worker, { dataSource, dimensions, measures, operator });\n    if (result.success === true) {\n      subspaceList = result.data;\n    } else {\n      throw new Error('[combine fields failed]' + result.message)\n    }\n    worker.terminate()\n  }\n  return subspaceList\n}\n\nexport interface ViewCombinedSpace {\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  matrix: number[][];\n}\n\nexport interface ViewSpace {\n  index: number;\n  dimensions: string[];\n  measures: string[];\n  score: number;\n}\n\nexport async function clusterMeasures (maxGroupNumber: number, combinedSpaces: ViewCombinedSpace[], useServer?: boolean): Promise<ViewSpace[]> {\n  let viewSpaces: ViewSpace[] = [];\n  if (useServer) {\n    try {\n      const res = await fetch(server + '/api/service/clusterMeasures', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          maxGroupNumber,\n          spaces: combinedSpaces\n        })\n      });\n      const result: Result<ViewSpace[]> = await res.json();\n      if (result.success === true) {\n        viewSpaces = result.data.map((v, i) => {\n          return {\n            ...v,\n            index: i\n          }\n        });\n      } else {\n        throw new Error('[cluster measures]' + result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new clusterWorker();\n    const result = await workerService<ViewSpace[], any>(worker, { maxGroupNumber, spaces: combinedSpaces });\n    if (result.success === true) {\n      viewSpaces = result.data.map((v, i) => {\n        return {\n          ...v,\n          index: i\n        }\n      });\n    } else {\n      throw new Error('[cluster measures]' + result.message)\n    }\n    worker.terminate();\n  }\n  return viewSpaces;\n}\n\ninterface ViewInDashBoard {\n  type: string;\n  dimensions: string[];\n  measures: string[];\n}\n\nexport type DashBoard = ViewInDashBoard[];\n\nexport async function generateDashBoard (dataSource: DataSource, dimensions: string[], measures: string[], subspaces: Subspace[], useServer?: boolean): Promise<DashBoard[]> {\n  let dashBoardList: DashBoard[] = [];\n  if (useServer) {\n    try {\n      const res =  await fetch(server + '/api/service/generateDashBoard', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dataSource,\n          dimensions,\n          measures,\n          subspaces\n        })\n      });\n      const result = await res.json();\n      if (result.success) {\n        dashBoardList = result.data;\n      } else {\n        throw new Error('[generateDashBoard]' + result.message);\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  } else {\n    const worker = new dashBoardGeneratorWorker();\n    const result = await workerService<DashBoard[], any>(worker, {\n        dataSource,\n        dimensions,\n        measures,\n        subspaces\n      });\n    if (result.success) {\n      dashBoardList = result.data;\n    } else {\n      throw new Error('[generateDashBoard]' + result.message);\n    }\n    worker.terminate()\n  }\n  \n  return dashBoardList;\n} ","import { DataSource, BIField, Field, OperatorType } from \"./global\";\nimport {\n  getFieldsSummaryService,\n  FieldSummary,\n  getGroupFieldsService,\n  combineFieldsService,\n  generateDashBoard,\n  ViewSpace,\n  clusterMeasures\n} from \"./service\";\nimport { GlobalState, StateUpdater } from './state';\n\n\n\ntype Action<T> = (state: GlobalState, updateState: (updater:StateUpdater<GlobalState>) => void, params: T) => any;\n\n\nconst univariateSummary: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  const dimensions = fields\n    .filter(field => field.type === \"dimension\")\n    .map(field => field.name);\n  const measures = fields\n    .filter(field => field.type === \"measure\")\n    .map(field => field.name);\n  // updateState(draft => { draft.loading.univariateSummary = true })\n  try {\n    /**\n     * get summary of the orignal dataset(fields without grouped)\n     */\n    const originSummary = await getFieldsSummaryService(\n      dataSource,\n      fields.map(f => f.name),\n      state.useServer\n    );\n    // todo only group dimension.\n    let fieldWithTypeList: Field[] = originSummary\n      ? originSummary\n          .filter(f => dimensions.includes(f.fieldName))\n          .map(f => {\n            return {\n              name: f.fieldName,\n              type: f.type\n            };\n          })\n      : [];\n    /**\n     * bug:\n     * should not group measures!!!\n     */\n    const groupedResult = await getGroupFieldsService(\n      dataSource,\n      fieldWithTypeList,\n      state.useServer\n    );\n    const { groupedData, newFields } = groupedResult\n      ? groupedResult\n      : { groupedData: dataSource, newFields: fieldWithTypeList };\n    /**\n     * `newBIFields` shares the same length (size) with fields.\n     * It repalces some of the fields with high entropy with a grouped new field.\n     * newBIFields does not contain field before grouped.\n     */\n    const newBIFields: BIField[] = fields.map(field => {\n      let groupedField = newFields.find(\n        f => f.name === field.name + \"(group)\"\n      );\n      return {\n        name: groupedField ? groupedField.name : field.name,\n        type: field.type\n      };\n    });\n    const newDimensions: string[] = newBIFields\n      .filter(f => f.type === \"dimension\")\n      .map(f => f.name);\n\n    /**\n     * groupedSummary only contains newFields generated during `groupFieldsService`.\n     */\n    const groupedSummary = await getFieldsSummaryService(\n      groupedData,\n      newFields,\n      state.useServer\n    );\n    \n    updateState(draft => {\n      draft.cookedDataSource = groupedData;\n      draft.summary = {\n        origin: originSummary || [],\n        grouped: groupedSummary || []\n      }\n      draft.loading.univariateSummary = false;\n    });\n    // setFields(newBIFields);\n    // tmp solutions\n    let summary = (groupedSummary || []).concat(originSummary || []);\n    return {\n      groupedData,\n      summary,\n      newDimensions,\n      measures\n    }\n    // await SubspaceSeach(groupedData, summary, newDimensions, measures, \"sum\");\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.univariateSummary = false;\n    });\n  }\n}\n\n\n\ninterface SubspaceSeachParams {\n  groupedData: DataSource;\n  summary: FieldSummary[];\n  dimensions: string[];\n  measures: string[];\n  operator: OperatorType\n}\nconst subspaceSearch: Action<SubspaceSeachParams> = async (state, updateState, params) => {\n  const { groupedData: dataSource, summary, dimensions, measures, operator } = params;\n  updateState(draft => {\n    draft.loading.subspaceSearching = true;\n  });\n  let orderedDimensions: Array<{ name: string; entropy: number }> = [];\n  orderedDimensions = dimensions.map(d => {\n    let target = summary.find(g => g.fieldName === d);\n    return {\n      name: d,\n      entropy: target ? target.entropy : Infinity\n    };\n  });\n\n  orderedDimensions.sort((a, b) => a.entropy - b.entropy);\n  updateState(draft => {\n    draft.cookedDimensions = orderedDimensions.map(d => d.name);\n    draft.cookedMeasures = measures;\n  });\n  const selectedDimensions = orderedDimensions\n    .map(d => d.name)\n    .slice(\n      0,\n      Math.round(orderedDimensions.length * state.topK.dimensionSize)\n    );\n  try {\n    const subspaceList = await combineFieldsService(\n      dataSource,\n      selectedDimensions,\n      measures,\n      operator,\n      state.useServer\n    );\n    if (subspaceList) {\n      updateState(draft => {\n        draft.subspaceList = subspaceList;\n      });\n    }\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  }\n}\n\nconst getViewSpaces: Action<any> = async (state, updateState, params) => {\n  const { cookedDataSource: dataSorce, subspaceList, maxGroupNumber, useServer } = state\n  let viewSpaces: ViewSpace[] = [];\n  try {\n    viewSpaces = await clusterMeasures(\n      maxGroupNumber,\n      subspaceList.map(space => {\n        return {\n          dimensions: space.dimensions,\n          measures: space.measures,\n          matrix: space.correlationMatrix\n        };\n      }),\n      useServer\n    )\n    updateState(draft => {\n      draft.viewSpaces = viewSpaces\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst extractInsights: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  updateState(draft => {\n    draft.loading.gallery = true\n  })\n  try {\n    const univariateResult = await univariateSummary(state, updateState, {\n      dataSource, fields\n    });\n      if (univariateResult) {\n        const {\n          groupedData,\n          summary,\n          newDimensions,\n          measures\n        } = univariateResult;\n        await subspaceSearch(state, updateState, {\n          groupedData, summary, dimensions: newDimensions, measures, operator: \"sum\"\n        });\n      }\n  } catch (error) {\n  } finally {\n    updateState(draft => {\n      draft.loading.gallery = false\n      draft.loading.gallery = false\n    })\n  }\n}\n\nconst getDashBoard: Action<{dataSource: DataSource, dimensions: string[], measures: string[]}> = async (state, updateState, params) => {\n  const { dataSource, dimensions, measures } = params;\n  updateState(draft => {\n    draft.loading.dashBoard = true\n  })\n  try {\n    const dashBoardList = await generateDashBoard(dataSource, dimensions, measures, state.subspaceList, state.useServer)\n    updateState(draft => {\n      draft.dashBoardList = dashBoardList;\n    })\n  } catch (error) {\n    console.error(error)\n  } finally {\n    updateState(draft => {\n      draft.loading.dashBoard = false\n    })\n  }\n}\nconst actions = {\n  univariateSummary,\n  subspaceSearch,\n  extractInsights,\n  getDashBoard,\n  getViewSpaces\n}\nexport type Actions =  typeof actions\n\ntype valueof<T> = T[keyof T]\n\ntype Foo = Parameters<typeof subspaceSearch> // ReturnType\nexport type Test = valueof<{  [key in keyof Actions]: {\n  name: key,\n  params: Parameters<Actions[key]>[2]\n}}>\n\nexport default actions;\n","import produce, { Draft, setAutoFreeze } from 'immer';\nimport React, { useState, useMemo, createContext, useContext } from 'react';\nimport { DataSource, BIField, Field } from './global';\nimport { Subspace, FieldSummary, ViewSpace, DashBoard } from './service';\nimport actions, { Test, Actions } from './actions';\n\nsetAutoFreeze(false)\n\nexport interface GlobalState {\n  /**\n   * `currentPage` is the current page number of visualization in explore board.\n   */\n  currentPage: number;\n  /**\n   * use server to complete computing task, if not, use web worker.\n   */\n  useServer: boolean;\n  /**\n   * raw data is fetched and parsed data or uploaded data without any other changes.\n   * computed value `dataSource` will be calculated \n   */\n  rawData: DataSource;\n  /**\n   * fields contains fields with `dimension` or `measure` type.\n   * currently, this kind of type is not computed property unlike 'quantitative', 'nominal'...\n   * This is defined by user's purpose or domain knowledge.\n   */\n  fields: BIField[];\n  /**\n   * dataSource been cleaned and grouped which is readly for exploration.\n   */\n  cookedDataSource: DataSource;\n  cookedDimensions: string[];\n  cookedMeasures: string[];\n  /**\n   * subspaceList is ordered list by it score.\n   */\n  // subspaceList: Subspace[]\n  /**\n   * loading status for some service\n   * todo: \n   * manage the loading status in pages intead of globally.\n   */\n  loading: {\n    univariateSummary: boolean;\n    subspaceSearching: boolean;\n    gallery: boolean;\n    dashBoard: boolean;\n  };\n  \n  topK: {\n    /**\n     * top k percent subspace it will fetch.\n     */\n    subspacePercentSize: number;\n    dimensionSize: number;\n  }\n  maxGroupNumber: number;\n  subspaceList: Subspace[];\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n  viewSpaces: ViewSpace[];\n  dashBoardList: DashBoard[];\n}\n\ninterface Getters {\n  /**\n   * `dataSource` is computed data based on fields' property(dimension or measure).\n   * sometimes, uploaded data contains contains some measure field but they are parsed into string value, which is raw data.\n   * dataSource transform these fields into what they should be for future computation.\n   * This is usually happened when a csv file is uploaded.\n   */\n  dimScores: [string, number, number, Field][]\n}\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n\n// function createStore<S>(initState: S) {\n//   const [state, setState] = useState<S>(initState)\n\n//   return function useGlobalState(): [S, (stateUpdater: StateUpdater<S>) => void] {\n//     const updateState = (stateUpdater: StateUpdater<S>) => {\n//       const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n//       setState(nextState)\n//     }\n//     return [state, updateState]\n//   }\n// }\n\nconst initState: GlobalState = {\n  currentPage: 0,\n  useServer: false,\n  fields: [],\n  rawData: [],\n  cookedDataSource: [],\n  cookedDimensions: [],\n  cookedMeasures: [],\n  loading: {\n    univariateSummary: false,\n    subspaceSearching: false,\n    gallery: false,\n    dashBoard: false,\n  },\n  topK: {\n    subspacePercentSize: 0.3,\n    dimensionSize: 0.72\n  },\n  maxGroupNumber: 4,\n  subspaceList: [],\n  summary: {\n    origin: [],\n    grouped: []\n  },\n  viewSpaces: [],\n  dashBoardList: []\n};\ntype Dispatch<T> = (actionName: string, params: T) => void;\ntype valueof<T> = T[keyof T]\nconst GloalStateContext = createContext<[GlobalState, (updater:StateUpdater<GlobalState>) => void, <P extends Test>(actionName: P['name'], params: P['params']) => void, Getters]>(null!)\nfunction useGetters(state: GlobalState) {\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...state.summary.origin, ...state.summary.grouped].map(field => {\n      return [\n        field.fieldName,\n        field.entropy,\n        field.maxEntropy,\n        { name: field.fieldName, type: field.type }\n      ];\n    });\n  }, [state.summary])\n\n  const getters: Getters = {\n    dimScores\n  }\n\n  return getters;\n}\nexport function GlobalStateProvider({ children }: { children: React.ReactNode }) {\n  const [state, setState] = useState<GlobalState>(initState)\n\n  const getters = useGetters(state);\n  const updateState = (stateUpdater: StateUpdater<GlobalState>) => {\n    setState(state => {\n      const nextState = produce<GlobalState>(state, draftState => stateUpdater(draftState))\n      return nextState;\n    })\n  }\n\n  const dispatch: <P extends Test>(actionName: P['name'], params: P['params']) => void = (actionName, params) => {\n    if (typeof actions[actionName] === 'function') {\n\n      // todo: fix the any type\n      \n      actions[actionName](state, updateState, params as any);\n      // actions['subspaceSearch'](state, updateState, params)\n    }\n  }\n\n\n\n  return (\n    <GloalStateContext.Provider value={[state, updateState, dispatch, getters]}>\n      {children}\n    </GloalStateContext.Provider>\n  )\n}\nexport function useGlobalState() {\n  return useContext(GloalStateContext)\n}","import { Record, DataSource } from '../global';\nimport Papa from 'papaparse';\n\nexport function csvLoader (file: File) {\n  return new Promise<DataSource>((resolve, reject) => {\n    Papa.parse(file, {\n      complete (results, file) {\n        let data: string[][] = results.data;\n        let fields: string[] = data[0];\n        let rawData = data.slice(1).map(row => {\n          let record: Record = {};\n          fields.forEach((field, index) => {\n            record[field] = row[index]\n          })\n          return record\n        })\n        resolve(rawData)\n      },\n      error (error, file) {\n        reject(error)\n      }\n    })\n  })\n}\n\nexport function jsonLoader (file: File): Promise<DataSource> {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = (ev) => {\n      if (ev.target) {\n        try {\n          const rawData: DataSource = JSON.parse(ev.target.result as string);\n          resolve(rawData);\n        } catch (error) {\n          reject(error)\n        }\n      } else {\n        reject(ev)\n      }\n    }\n    reader.onerror = reject\n  })\n}","export function transNumber(num: any): number | null {\n  if (isNaN(num)) {\n    return null\n  }\n  return Number(num)\n}","import React, { useState } from 'react';\nimport produce, { Draft } from 'immer';\n/**\n * @param S type of the composed state\n */\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n/**\n * \n * @param initState\n * useComposeState helps you manage several state together, provided with immutable state change api\n * \n * example:\n * ```js\n * const [state, setState] = useComposeState({foo: 12, bar: { foo: 20}})\n * setState(draft => {\n *  draft.bar.foo = 100;\n * })\n * ```\n */\nexport default function useComposeState<S>(initState: S): [S, (stateUpdater: StateUpdater<S>) => void] {\n  const [state, setState] = useState<S>(initState)\n  const updateState = (stateUpdater: StateUpdater<S>) => {\n    const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n    setState(nextState)\n  }\n  return [state, updateState]\n}","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Stack, Checkbox, Panel, PanelType, ComboBox, Label } from 'office-ui-fabric-react';\nimport { Aggregator } from '../global';\nconst checkboxStyles = () => {\n  return {\n    root: {\n      marginTop: '10px'\n    }\n  };\n}\n\n// todo: import aggregators list from cube-core\nconst aggregationList: Array<{ key: Aggregator; text: string }> = [\n  { key: 'sum', text: 'Sum' },\n  { key: 'count', text: 'Count' },\n  { key: 'mean', text: 'Mean' }\n]\nexport interface PreferencePanelConfig {\n  aggregator: Aggregator;\n  defaultAggregated: boolean;\n  defaultStack: boolean\n}\nexport interface PreferencePanelProps {\n  show: boolean;\n  onUpdateConfig: (props: PreferencePanelConfig) => void;\n  onClose: () => void;\n  config: PreferencePanelConfig\n}\n\nconst PreferencePanel: React.FC<PreferencePanelProps> = (props) => {\n  const {\n    show = false,\n    onUpdateConfig,\n    onClose,\n    config\n  } = props;\n  \n  const [aggregator, setAggregator] = useState<Aggregator>('sum');\n  const [defaultAggregated, setDefaultAggregated] = useState(true);\n  const [defaultStack, setDefaultStack] = useState(true);\n  \n  useEffect(() => {\n    const { aggregator, defaultAggregated, defaultStack } = config;\n    setAggregator(aggregator);\n    setDefaultAggregated(defaultAggregated);\n    setDefaultStack(defaultStack);\n  }, [config, show])\n  \n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig({ aggregator, defaultAggregated, defaultStack }) }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Preference\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <Label>Preference</Label>\n    <Stack verticalFill tokens={{ childrenGap: 50, padding: 6}}>\n      <ComboBox\n        selectedKey={aggregator}\n        label=\"Aggregator\"\n        allowFreeform={true}\n        autoComplete=\"on\"\n        options={aggregationList}\n        onChange={(e, option) => {option && setAggregator(option.key as Aggregator)}}\n      />\n      <Checkbox styles={checkboxStyles} label=\"measurement aggregation\" checked={defaultAggregated} onChange={(e, isChecked) => {setDefaultAggregated(isChecked || false)}} />\n      <Checkbox styles={checkboxStyles} label=\"measurement stack\" checked={defaultStack} onChange={(e, isChecked) => {setDefaultStack(isChecked || false)}} />\n    </Stack>\n  </Panel>\n}\n\nexport default PreferencePanel;","import { Specification, FieldType } from \"visual-insights/src/commonTypes\";\nimport { geomTypeMap, DataField } from './index';\n\nexport function featureVis(query: Specification, fields: DataField[]) {\n  console.log({ query, fields })\n  // bug: sometimes there are fields in query but not in fields\n  let fieldTypeDict: {[key: string]: DataField} = {};\n  for (let field of fields) {\n    fieldTypeDict[field.name] = field\n  }\n\n  function getFieldSemanticType(field: string): FieldType {\n    return fieldTypeDict[field] ? fieldTypeDict[field].semanticType : \"nominal\";\n  }\n  function getFieldType(field: string): DataField['type'] {\n    return fieldTypeDict[field] ? fieldTypeDict[field].type : 'dimension'\n  }\n  \n  function shouldFieldAggregate(\n    field: string,\n    geomType: string\n  ): boolean {\n    if (geomType === \"point\") {\n      return false;\n    }\n    const fieldType = getFieldSemanticType(field);\n    if (geomType === 'rect') {\n      return fieldType !== 'quantitative'\n    }\n    if (fieldType === \"quantitative\" && getFieldType(field) === 'measure') {\n      return true;\n    }\n    return false;\n  }\n\n  let markType =\n        query.geomType![0] && geomTypeMap[query.geomType![0]]\n          ? geomTypeMap[query.geomType![0]]\n          : query.geomType![0];\n      const xType = getFieldSemanticType(query.position![0]);\n      const yType = getFieldSemanticType(query.position![1]);\n      const colorType = getFieldSemanticType(query.color![0]);\n      const xAgg = shouldFieldAggregate(query.position![0], markType);\n      const yAgg = shouldFieldAggregate(query.position![1], markType);\n\n      let adjustColorField = query.color![0];\n      if (markType === 'rect') {\n        if (query.color![0] && colorType !== 'quantitative') {\n          markType = 'point';\n        } else if (query.opacity![0] && query.size![0]) {\n          adjustColorField = query.size![0] || query.opacity![0];\n        }\n      }\n      return {\n        data: { name: \"dataSource\" },\n        autosize: {\n          type: \"pad\"\n        },\n        mark: markType,\n        selection: {\n          sl: {\n            type: markType === \"bar\" ? \"single\" : \"interval\",\n            encodings: markType === \"bar\" ? [\"x\"] : undefined\n          }\n        },\n        encoding: {\n          x: query.position![0] && {\n            field: query.position![0],\n            type: getFieldSemanticType(query.position![0]),\n            bin: markType === 'rect' && xType === 'quantitative' && { maxbins: 20 },\n            aggregate: markType !== 'rect' && xAgg && 'sum'\n          },\n          y: query.position![1] && {\n            field: query.position![1],\n            type: getFieldSemanticType(query.position![1]),\n            bin: markType === 'rect' && yType === 'quantitative' && { maxbins: 20 },\n            aggregate: markType !== 'rect' && yAgg && 'sum',\n          },\n          size: query.size![0] && {\n            field: query.size![0],\n            type: getFieldSemanticType(query.size![0])\n          },\n          column: query.facets![0] && {\n            field: query.facets![0],\n            type: getFieldSemanticType(query.facets![0])\n          },\n          row: query.facets![1] && {\n            field: query.facets![1],\n            type: getFieldSemanticType(query.facets![1])\n          },\n          opacity: query.opacity![0] && {\n            field: query.opacity![0],\n            type: getFieldSemanticType(query.opacity![0])\n          },\n          shape: query.shape![0] && {\n            field: query.shape![0],\n            type: getFieldSemanticType(query.shape![0])\n          },\n          color: (adjustColorField || markType === 'rect') && {\n            field: adjustColorField,\n            aggregate: markType === 'rect' && getFieldSemanticType(adjustColorField) === 'quantitative' && (adjustColorField ? 'sum' : 'count'),\n            type: adjustColorField && getFieldSemanticType(adjustColorField)\n          }\n        }\n      };\n\n}","import { Specification, FieldType } from \"visual-insights/src/commonTypes\";\nimport { geomTypeMap, DataField } from './index';\n\nexport function targetVis(query: Specification, fields: DataField[]) {\n  let fieldTypeDict: {[key: string]: DataField} = {};\n  for (let field of fields) {\n    fieldTypeDict[field.name] = field\n  }\n\n  function getFieldSemanticType(field: string): FieldType {\n    return fieldTypeDict[field].semanticType || \"nominal\";\n  }\n  function getFieldType(field: string): DataField['type'] {\n    return fieldTypeDict[field].type || 'dimension'\n  }\n  \n  function shouldFieldAggregate(\n    field: string,\n    geomType: string\n  ): boolean {\n    if (geomType === \"point\") {\n      return false;\n    }\n    const fieldType = getFieldSemanticType(field);\n    if (geomType === 'rect') {\n      return fieldType !== 'quantitative'\n    }\n    if (fieldType === \"quantitative\" && getFieldType(field) === 'measure') {\n      return true;\n    }\n    return false;\n  }\n\n  let markType =\n        query.geomType![0] && geomTypeMap[query.geomType![0]]\n          ? geomTypeMap[query.geomType![0]]\n          : query.geomType![0];\n      const xType = getFieldSemanticType(query.position![0]);\n      const yType = getFieldSemanticType(query.position![1]);\n      const colorType = getFieldSemanticType(query.color![0]);\n      const xAgg = shouldFieldAggregate(query.position![0], markType);\n      const yAgg = shouldFieldAggregate(query.position![1], markType);\n      let repeat: string[] = [query.position![1]];\n      if (query.highFacets) {\n        repeat = repeat.concat(query.highFacets!.filter(f => getFieldSemanticType(f) === 'quantitative'))\n      }\n      let adjustColorField = query.color![0];\n      if (markType === 'rect') {\n        if (query.color![0] && colorType !== 'quantitative') {\n          markType = 'point';\n        } else if (query.opacity![0] && query.size![0]) {\n          adjustColorField = query.size![0] || query.opacity![0];\n        }\n      }\n      return {\n        config: {\n          repeat: { columns: 5 }\n        },\n        data: { name: \"dataSource\" },\n        autosize: {\n          type: \"pad\"\n        },\n        repeat,\n        spec: {\n          mark: markType,\n          selection: {\n            sl: {\n              type: markType === \"bar\" ? \"single\" : \"interval\",\n              encodings: markType === \"bar\" ? [\"x\"] : undefined\n            }\n          },\n          encoding: {\n            x: query.position![0] && {\n              field: query.position![0],\n              type: getFieldSemanticType(query.position![0]),\n              bin: markType === 'rect' && xType === 'quantitative' && { maxbins: 20 },\n              aggregate: markType !== 'rect' && xAgg && 'sum'\n            },\n            y: repeat[0] && {\n              field: { repeat: 'repeat' },\n              type: getFieldSemanticType(repeat[0]),\n              bin: markType === 'rect' && yType === 'quantitative' && { maxbins: 20 },\n              aggregate: markType !== 'rect' && yAgg && 'sum',\n              // scale: mustDefineScale && !yAgg ? { domain: filedDomains[repeat[0]] } : undefined\n            },\n            size: query.size![0] && {\n              field: query.size![0],\n              type: getFieldSemanticType(query.size![0])\n            },\n            opacity: query.opacity![0] && {\n              field: query.opacity![0],\n              type: getFieldSemanticType(query.opacity![0])\n            },\n            shape: query.shape![0] && {\n              field: query.shape![0],\n              type: getFieldSemanticType(query.shape![0])\n            },\n            color: (adjustColorField || markType === 'rect') && {\n              field: adjustColorField,\n              aggregate: markType === 'rect' && getFieldSemanticType(adjustColorField) === 'quantitative' && (adjustColorField ? 'sum' : 'count'),\n              type: adjustColorField && getFieldSemanticType(adjustColorField)\n            }\n          }\n        }\n      };\n\n}","import { Specification } from \"visual-insights/build/esm/commonTypes\";\nimport { DataSource, Field, FieldType } from \"../global\";\nexport const geomTypeMap: { [key: string]: any } = {\n  interval: \"bar\",\n  line: \"line\",\n  point: \"point\",\n  // density: 'rect'\n  density: \"point\"\n};\n\nexport function baseVis(\n  query: Specification,\n  dataSource: DataSource,\n  dimensions: string[],\n  measures: string[],\n  aggregatedMeasures: Array<{op: string; field: string; as: string}>,\n  fieldFeatures: Field[],\n  defaultAggregated?: boolean,\n  defaultStack?: boolean,\n  \n) {\n  const {\n    position = [],\n    color = [],\n    size = [],\n    facets = [],\n    opacity = [],\n    geomType = [],\n    page = []\n  } = query;\n\n  function adjustField(fieldName: string): string {\n    if (defaultAggregated && measures.includes(fieldName)) {\n      let aggField = aggregatedMeasures.find(mea => {\n        return mea.field === fieldName;\n      });\n      return aggField ? aggField.as : fieldName;\n    }\n    return fieldName;\n  }\n  \n  function getFieldType(field: string): FieldType {\n    let targetField = fieldFeatures.find(f => f.name === field);\n    return targetField ? targetField.type : \"nominal\";\n  }\n\n  let chartWidth = 600; //container.current ? container.current.offsetWidth * 0.8 : 600;\n  const fieldMap: any = {\n    x: position[0],\n    y: position[1],\n    color: color[0],\n    size: size[0],\n    opacity: opacity[0],\n    row: facets[0],\n    column: facets[1]\n  };\n  let spec: any = {\n    width: chartWidth,\n    data: {\n      values: dataSource\n    }\n  };\n  let basicSpec: any = {\n    width: chartWidth,\n    mark: {\n      type:\n        geomType[0] && geomTypeMap[geomType[0]]\n          ? geomTypeMap[geomType[0]]\n          : geomType[0],\n      tooltip: true\n    },\n    encoding: {}\n  };\n  for (let channel in fieldMap) {\n    if (fieldMap[channel]) {\n      basicSpec.encoding[channel] = {\n        field: adjustField(fieldMap[channel]),\n        type: getFieldType(fieldMap[channel])\n      };\n      if (\n        [\"x\", \"y\"].includes(channel) &&\n        getFieldType(fieldMap[channel]) === \"quantitative\" &&\n        !defaultStack\n      ) {\n        basicSpec.encoding[channel].stack = null;\n      }\n    }\n  }\n  if (!defaultStack && opacity.length === 0) {\n    basicSpec.encoding.opacity = { value: 0.7 };\n  }\n  if (page.length === 0) {\n    spec = {\n      ...spec,\n      ...basicSpec\n    };\n  } else if (page.length > 0) {\n    basicSpec.transform = [\n      { filter: { selection: \"brush\" } },\n      defaultAggregated\n        ? {\n            aggregate: aggregatedMeasures,\n            groupby: dimensions.filter(dim => dim !== page[0])\n          }\n        : null\n    ].filter(Boolean);\n    let sliderSpec = {\n      width: chartWidth,\n      mark: \"tick\",\n      selection: { brush: { encodings: [\"x\"], type: \"interval\" } },\n      encoding: {\n        x: { field: page[0], type: getFieldType(page[0]) }\n      }\n    };\n    spec.vconcat = [basicSpec, sliderSpec];\n  }\n  return spec;\n}\n","import { FieldType } from \"visual-insights/src/commonTypes\";\nimport { featureVis } from './featureVis'\nimport { targetVis } from './targetVis';\nimport { baseVis } from './baseVis';\n\nexport const geomTypeMap: {[key: string]: any} = {\n  interval: 'bar',\n  line: 'line',\n  point: 'point',\n  density: 'rect'\n}\n\nexport interface DataField {\n  name: string;\n  semanticType: FieldType;\n  type: 'dimension' | 'measure';\n}\n\nexport { featureVis, targetVis, baseVis }","import React, { useEffect, useRef, useMemo } from 'react';\nimport aggregate from 'cube-core';\nimport embed from 'vega-embed';\nimport { DataSource, Field, FieldType } from '../global'\nimport { baseVis } from '../queries/index';\nexport const geomTypeMap: {[key: string]: any} = {\n  interval: 'bar',\n  line: 'line',\n  point: 'point',\n  // density: 'rect'\n  density: 'point'\n}\nexport interface Specification {\n  position?: string[];\n  color?: string[];\n  opacity?: string[];\n  size?: string[];\n  shape?: string[];\n  geomType?: string[];\n  facets?: string[];\n  page?: string[];\n  filter?: string[]\n}\ninterface BaseChartProps {\n  defaultAggregated: boolean;\n  defaultStack: boolean;\n  aggregator: 'sum' | 'mean' | 'count';\n  dataSource: DataSource;\n  dimensions: string[];\n  measures: string[];\n  fieldFeatures: Field[];\n  schema: Specification;\n}\n\nconst BaseChart: React.FC<BaseChartProps> = (props) => {\n  const {\n    defaultAggregated,\n    defaultStack,\n    aggregator,\n    dataSource = [],\n    dimensions = [],\n    measures = [],\n    schema = {},\n    fieldFeatures = []\n  } = props;\n\n  const container = useRef<HTMLDivElement>(null);\n  const aggregatedMeasures = useMemo(() => {\n    return measures.map(mea => {\n      return {\n        op: aggregator,\n        field: mea,\n        as: `${mea}_${aggregator}`\n      }\n    })\n  }, [measures])\n\n  let table = useMemo(() => {\n    if (!defaultAggregated) {\n      return dataSource\n    }\n    return aggregate({ dataSource, dimensions, measures, operator: aggregator, asFields: aggregatedMeasures.map(mea => mea.as)})\n  }, [defaultAggregated, dataSource, dimensions, measures, aggregator, aggregatedMeasures])\n\n  useEffect(() => {\n    if (container.current !== null) {\n      if (schema.position && schema.position.length > 0 && schema.geomType && schema.geomType.length > 0) {\n        let spec = baseVis(schema, table, dimensions, measures, aggregatedMeasures, fieldFeatures, defaultAggregated, defaultStack);\n        embed(container.current, spec);\n      }\n    }\n  }, [schema, table, dimensions, measures, aggregatedMeasures, fieldFeatures, defaultAggregated, defaultStack])\n  return <div ref={container}></div>\n}\n\nexport default BaseChart;","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar JOIN_SYMBOL = '_';\nvar MAGIC_NUMBER = 5;\n\nfunction deepcopy(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nfunction isFieldCategory(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'string' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldContinous(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'number' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldNumeric(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldTime(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(Date.parse(record[fieldName])) && typeof record[fieldName] === 'string' && /^[0-9]{0,4}[-/][0-9]{0,2}([-/][0-9]{0,2}$)?/.test(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction aggregate(_ref) {\n  var dataSource = _ref.dataSource,\n      fields = _ref.fields,\n      bys = _ref.bys,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'sum' : _ref$method;\n  var tmp = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = bys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var by = _step.value;\n      var map = new Map();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var record = _step2.value;\n          var key = JSON.stringify(fields.map(function (field) {\n            return record[field];\n          }));\n\n          if (!map.has(key)) {\n            map.set(key, 0);\n          }\n\n          map.set(key, map.get(key) + record[by]);\n        };\n\n        for (var _iterator2 = dataSource[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref4 = _step3.value;\n\n          var _ref3 = _slicedToArray(_ref4, 2);\n\n          var key = _ref3[0];\n          var value = _ref3[1];\n\n          var row = _defineProperty({\n            index: key\n          }, by, value);\n\n          var dims = JSON.parse(key);\n\n          for (var i = 0; i < fields.length; i++) {\n            row[fields[i]] = dims[i];\n          }\n\n          tmp.push(row);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var ans = new Map();\n\n  for (var _i = 0, _tmp = tmp; _i < _tmp.length; _i++) {\n    var record = _tmp[_i];\n\n    if (!ans.has(record.index)) {\n      ans.set(record.index, {});\n    }\n\n    ans.set(record.index, _objectSpread({}, ans.get(record.index), {}, record));\n  }\n\n  return _toConsumableArray(ans.values());\n}\n\nfunction memberCount(dataSource, field) {\n  var counter = new Map();\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = dataSource[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var row = _step4.value;\n      var member = row[field];\n\n      if (!counter.has(member)) {\n        counter.set(member, 0);\n      }\n\n      counter.set(member, counter.get(member) + 1);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return _toConsumableArray(counter.entries());\n}\n\nfunction groupContinousField(_ref5) {\n  var dataSource = _ref5.dataSource,\n      field = _ref5.field,\n      _ref5$newField = _ref5.newField,\n      newField = _ref5$newField === void 0 ? \"\".concat(field, \"(con-group)\") : _ref5$newField,\n      groupNumber = _ref5.groupNumber;\n  // const members = memberCount(dataSource, field);\n  // todo: outlier detection\n  var values = dataSource.map(function (item) {\n    return item[field];\n  });\n  var max = Math.max.apply(Math, _toConsumableArray(values)); // Number.EPSILON * ;\n\n  var min = Math.min.apply(Math, _toConsumableArray(values));\n  var segWidth = (max - min) / groupNumber;\n  var ranges = [];\n\n  for (var i = 0; i < groupNumber; i++) {\n    var left = min + i * segWidth;\n    var right = min + (i + 1) * segWidth;\n    ranges.push([left, right]);\n  }\n\n  ranges[0][0] = -Infinity;\n  ranges[ranges.length - 1][1] = Infinity;\n  var precision = Math.max(1, Math.log10(Math.abs(min)) - Math.log10(segWidth)) + 1;\n\n  var _loop2 = function _loop2(_i2) {\n    var record = dataSource[_i2];\n    var rangeIndex = ranges.findIndex(function (r) {\n      return r[0] <= record[field] && record[field] < r[1];\n    });\n    var range = ranges[rangeIndex];\n\n    if (typeof range !== 'undefined') {\n      record[newField] = \"\".concat(rangeIndex + 1, \":[\").concat(Number(range[0].toPrecision(precision)), \", \").concat(Number(range[1].toPrecision(precision)), \")\");\n    } else {\n      record[newField] = 'null';\n    }\n  };\n\n  for (var _i2 = 0; _i2 < dataSource.length; _i2++) {\n    _loop2(_i2);\n  }\n\n  return dataSource;\n}\n\nfunction groupCategoryField(_ref6) {\n  var dataSource = _ref6.dataSource,\n      field = _ref6.field,\n      _ref6$newField = _ref6.newField,\n      newField = _ref6$newField === void 0 ? \"\".concat(field, \"(cat-group)\") : _ref6$newField,\n      groupNumber = _ref6.groupNumber;\n  // auto category should obey Power law distrubution.\n  var members = memberCount(dataSource, field);\n  members.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var sum = members.map(function (v) {\n    return v[1];\n  });\n  groupNumber = members.length;\n\n  for (var i = sum.length - 2; i >= 0; i--) {\n    sum[i] = sum[i + 1] + sum[i];\n  }\n\n  for (var _i3 = 0; _i3 < members.length - 2; _i3++) {\n    // strict mode\n    // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n    if (members[_i3][1] * MAGIC_NUMBER >= sum[_i3 + 1] && members[_i3 + 1][1] / MAGIC_NUMBER < sum[_i3 + 2]) {\n      groupNumber = _i3 + 2;\n      break;\n    }\n  } // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n\n\n  if (groupNumber === members.length) {\n    return dataSource.map(function (record) {\n      return _objectSpread({}, record, _defineProperty({}, newField, record[field]));\n    });\n  }\n\n  var set = new Set();\n\n  for (var _i4 = groupNumber - 1; _i4 < members.length; _i4++) {\n    set.add(members[_i4][0]);\n  }\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = dataSource[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var record = _step5.value;\n\n      if (set.has(record[field])) {\n        record[newField] = 'others';\n      } else {\n        record[newField] = record[field];\n      }\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return dataSource;\n}\n/**\n * Kullback–Leibler divergence\n * @param p1List\n * @param p2List\n *\n */\n\n\nfunction DKL(p1List, p2List) {\n  var sum = 0;\n  var len = Math.max(p1List.length, p2List.length);\n\n  for (var i = 0; i < len; i++) {\n    var p1 = p1List[i] || 0;\n    var p2 = p2List[i] || 0;\n    sum += p1 * Math.log2(p1 / p2);\n  }\n\n  return sum;\n}\n\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL, DKL };","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { // isFieldCategory,\n// isFieldContinous,\nmemberCount } from './utils';\n\nfunction getVisualElements() {\n  return {\n    position: 2,\n    color: 1,\n    size: 1,\n    shape: 1,\n    opacity: 1,\n    facets: 2,\n    page: 1,\n    filter: 1,\n    highFacets: 1000\n  };\n}\n\nvar geomTypes = {\n  interval: [0, 20],\n  line: [21, Infinity],\n  area: [21, Infinity],\n  point: [0, 1000],\n  path: [0, 100],\n  density: [1001, Infinity]\n};\n\nfunction findBestField(type, fieldRankList) {\n  for (var i = fieldRankList.length - 1; i >= 0; i--) {\n    if (fieldRankList[i].type === type && !fieldRankList[i].choosen) {\n      return fieldRankList[i];\n    }\n  }\n\n  return false;\n}\n/**\n *\n * @param dimFields ranked dimension by entropy. asc\n * todo: not clear enough implementation for using asc and desc\n */\n\n\nfunction aestheticMapping(dimFields) {\n  var spec = {};\n  var visualElements = getVisualElements();\n  var fieldRankList = dimFields.map(function (field) {\n    return _objectSpread({}, field, {\n      choosen: false\n    });\n  });\n  var priority = [['quantitative', ['position', 'size', 'color', 'highFacets', 'opacity', 'page', 'filter']], ['temporal', ['position', 'page', 'filter']], ['ordinal', ['position', 'color', 'opacity', 'facets', 'size', 'page', 'filter', 'highFacets']], ['nominal', ['position', 'color', 'facets', 'shape', 'page', 'filter', 'hightFacets']]];\n  var fieldLeft = fieldRankList.length;\n\n  for (var typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n    var type = priority[typeIndex][0];\n    var channelList = priority[typeIndex][1];\n\n    for (var i = 0; i < channelList.length && fieldLeft > 0; i++) {\n      var channel = channelList[i];\n      var field = void 0;\n\n      while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n        if (typeof spec[channel] === 'undefined') {\n          spec[channel] = [];\n        }\n\n        spec[channel].push(field.name);\n        visualElements[channel]--;\n        fieldLeft--;\n        field.choosen = true;\n      }\n    }\n  }\n\n  return spec;\n} // todo:\n// don't use dimScores: FieldImpurity.\n// it's a structure with redundency design.\n\n\nfunction specification(dimScores, aggData, dimensions, measures) {\n  var rankedFields = dimScores.sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (dim) {\n    return dim[3];\n  });\n  var spec = aestheticMapping(rankedFields); // todo: design a better rule for choosing geom type.\n\n  if (spec.position.length === 2) {\n    if (dimensions.includes(spec.position[0]) && measures.includes(spec.position[1]) || dimensions.includes(spec.position[1]) && measures.includes(spec.position[0])) {\n      var dimIndex = dimensions.includes(spec.position[0]) ? 0 : 1;\n      var dim = spec.position[dimIndex];\n      var mea = spec.position[(dimIndex + 1) % 2];\n      spec.position = [dim, mea];\n      var dimMembers = memberCount(aggData, dim);\n      spec.geomType = ['interval', 'line', 'area'].filter(function (geom) {\n        return dimMembers.length >= geomTypes[geom][0] && dimMembers.length <= geomTypes[geom][1];\n      });\n      var x = dimScores.find(function (dim) {\n        return dim[0] === spec.position[0];\n      })[3];\n      var y = dimScores.find(function (dim) {\n        return dim[0] === spec.position[1];\n      })[3];\n\n      if (x.type === 'nominal' || y.type === 'nominal') {\n        spec.geomType = ['interval'];\n      }\n    } else {\n      // ['point', 'path', 'heatmap']\n      spec.geomType = ['point', 'density'].filter(function (geom) {\n        return aggData.length >= geomTypes[geom][0] && aggData.length <= geomTypes[geom][1];\n      });\n    }\n  }\n\n  return {\n    schema: spec,\n    aggData: aggData\n  };\n}\n\nexport default specification;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n  // only for the special matrix here(corelational matrix)\n  var edges = [];\n\n  for (var i = 0; i < matrix.length; i++) {\n    for (var j = i + 1; j < matrix[i].length; j++) {\n      edges.push([[i, j], Math.abs(matrix[i][j])]);\n    }\n  }\n\n  return edges;\n}\n\nfunction find(parents, n) {\n  return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\n\nfunction union(parents, n1, n2) {\n  var p1 = find(parents, n1);\n  var p2 = find(parents, n2);\n  parents[p1] = p2; // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n  // may check and prove whether it's necessary.\n\n  find(parents, n1);\n  find(parents, n2);\n}\n\nfunction findWithEffect(parents, sizes, n) {\n  if (parents[n] === n) {\n    return n;\n  }\n\n  parents[n] = findWithEffect(parents, sizes, parents[n]);\n  sizes[n] = sizes[parents[n]];\n  return parents[n];\n}\n\nfunction unionWithEffect(parents, sizes, n1, n2) {\n  var p1 = findWithEffect(parents, sizes, n1);\n  var p2 = findWithEffect(parents, sizes, n2);\n  var size1 = sizes[p1];\n  var size2 = sizes[p2];\n  parents[p1] = p2;\n  sizes[p1] = sizes[p2] = size1 + size2;\n  findWithEffect(parents, sizes, n1);\n  findWithEffect(parents, sizes, n2);\n}\n/**\n * maxiumn spanning tree\n * @param matrix adjmatrix\n * @param groupNumber number of group generated by clustering\n */\n\n\nfunction kruskal(matrix, groupNumber) {\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = edges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var edge = _step.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i = 0; _i < parents.length; _i++) {\n        parents[_i] = find(parents, _i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size <= groupNumber) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n/**\n *\n * @param matrix\n * @param limitSize max size of each group\n */\n\n\nfunction kruskalWithLimitSize(matrix, limitSize) {\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var sizes = matrix.map(function () {\n    return 1;\n  });\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = edges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var edge = _step2.value;\n\n      if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n        if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n          continue;\n        }\n\n        unionWithEffect(parents, sizes, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i2 = 0; _i2 < parents.length; _i2++) {\n        parents[_i2] = findWithEffect(parents, sizes, _i2);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n\nexport function kruskalMSTWithLimitSize(matrix) {\n  var limitSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var cloneParents = matrix.map(function (m, i) {\n    return i;\n  });\n  var sizes = matrix.map(function () {\n    return 1;\n  });\n  var inCutEdge = false;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = edges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var edge = _step3.value;\n\n      if (findWithEffect(parents, sizes, edge[0][0]) !== findWithEffect(parents, sizes, edge[0][1])) {\n        if (sizes[edge[0][0]] + sizes[edge[0][1]] > limitSize) {\n          if (find(cloneParents, edge[0][0]) !== find(cloneParents, edge[0][1])) {\n            edgesInMST.push([edge[0], edge[1], true]);\n            union(cloneParents, edge[0][0], edge[0][1]);\n          }\n\n          continue;\n        }\n\n        unionWithEffect(parents, sizes, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], false]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = findWithEffect(parents, sizes, i);\n        cloneParents[i] = find(cloneParents, i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: parents\n  };\n}\n/**\n *\n * @param matrix\n * @param groupNumber number of group generated by clustering\n */\n\nexport function kruskalMST(matrix) {\n  var groupNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n\n  var groups = _toConsumableArray(parents);\n\n  var inCutEdge = false;\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = edges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var edge = _step4.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], inCutEdge]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = find(parents, i);\n      }\n\n      var set = new Set(parents); // TODO:\n      // + use kruskalMST instead of kruskal.\n\n      if (set.size <= groupNumber) {\n        inCutEdge = true;\n      } else {\n        groups = _toConsumableArray(parents);\n      }\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: groups\n  };\n}\n\nfunction cluster(_ref) {\n  var matrix = _ref.matrix,\n      measures = _ref.measures,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'kruskal' : _ref$method,\n      _ref$groupMaxSize = _ref.groupMaxSize,\n      groupMaxSize = _ref$groupMaxSize === void 0 ? 4 : _ref$groupMaxSize,\n      _ref$limitSize = _ref.limitSize,\n      limitSize = _ref$limitSize === void 0 ? false : _ref$limitSize;\n  // const groups = kruskal({ matrix, groupMaxSize });\n  var groups;\n\n  if (limitSize) {\n    groups = kruskalWithLimitSize(matrix, groupMaxSize);\n  } else {\n    groups = kruskal(matrix, groupMaxSize);\n  }\n\n  var ans = [];\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = groups.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var meas = _step5.value;\n      ans.push(meas.map(function (meaIndex) {\n        return measures[meaIndex];\n      }));\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return ans;\n}\n\nexport default cluster;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { deepcopy, isFieldNumeric, memberCount } from '../utils';\n\nfunction dropNullColumn(dataSource, fields) {\n  var keepFields = fields.map(function () {\n    return false;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = dataSource[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var record = _step.value;\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n\n        if (typeof record[field] !== 'undefined' && record[field] !== '' && record[field] !== null) {\n          keepFields[i] = true;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var finalFields = fields.filter(function (field, index) {\n    return keepFields[index];\n  });\n  return {\n    fields: finalFields,\n    dataSource: dataSource.map(function (record) {\n      var ans = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = finalFields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var field = _step2.value;\n          ans[field] = record[field];\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return ans;\n    })\n  };\n}\n\nfunction dropNull(dataSource, dimensions, measures) {\n  var data = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = dataSource[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var record = _step3.value;\n      var keep = true;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = dimensions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var dim = _step5.value;\n\n          if (typeof record[dim] === 'undefined' || record[dim] === '' || record[dim] === null) {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = measures[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var mea = _step6.value;\n\n          if (typeof record[mea] !== 'number') {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (keep) {\n        data.push(record);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var dim = _step4.value;\n\n      if (isFieldNumeric(data, dim)) {\n        var members = memberCount(data, dim);\n\n        if (members.length > 20) {\n          data.forEach(function (record) {\n            record[dim] = Number(record[dim]) || 0;\n          });\n        } else {\n          data.forEach(function (record) {\n            record[dim] = (Number(record[dim]) || 0).toString();\n          });\n        }\n      }\n    };\n\n    for (var _iterator4 = dimensions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isNullValue(value) {\n  return ['', null, undefined].includes(value);\n}\n/**\n * use mode of one field to replace its null value\n * @param dataSource\n * @param fieldNames name list of fields you want to clean with useMode function.\n * problem: some field may regard the null value as the most common value... sad : (.\n * I am dead.\n */\n\n\nfunction useMode(dataSource, fieldNames) {\n  /**\n   * map to count each member's times of apperance in fields.\n   */\n  var countMap = new Map();\n  /**\n   * map to get the mode member of each field.\n   */\n\n  var modeMap = new Map();\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = fieldNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var fieldName = _step7.value;\n      countMap.set(fieldName, new Map());\n      modeMap.set(fieldName, 0);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = dataSource[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var record = _step8.value;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = fieldNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _fieldName = _step11.value;\n          var counter = countMap.get(_fieldName);\n\n          if (!isNullValue(record[_fieldName])) {\n            if (!counter.has(record[_fieldName])) {\n              counter.set(record[_fieldName], 0);\n            }\n\n            counter.set(record[_fieldName], counter.get(record[_fieldName]) + 1);\n          }\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = countMap.keys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var key = _step9.value;\n\n      var _counter = countMap.get(key);\n\n      var members = _toConsumableArray(_counter.entries());\n\n      var max = 0;\n      var maxPos = 0;\n\n      for (var i = 0; i < members.length; i++) {\n        var member = members[i];\n\n        if (member[1] > max) {\n          max = member[1];\n          maxPos = i;\n        }\n      }\n\n      modeMap.set(key, members[maxPos][0]);\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = newDataSource[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _record = _step10.value;\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = fieldNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var _fieldName2 = _step12.value;\n\n          if (isNullValue(_record[_fieldName2])) {\n            _record[_fieldName2] = modeMap.get(_fieldName2);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nfunction simpleClean(dataSource, dimensions, measures) {\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = dataSource[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var record = _step13.value;\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = dimensions[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var dim = _step14.value;\n\n          if (isNullValue(record[dim])) {\n            record[dim] = 'null';\n          }\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = measures[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var mea = _step15.value;\n\n          if (isNullValue(record[mea])) {\n            record[mea] = 0;\n          }\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nexport { simpleClean, dropNull, useMode, dropNullColumn };","/**\n * todo reservoir sampling is better to support stream data\n * Algorithm R:\n * Vitter, Jeffrey S. (1 March 1985). \"Random sampling with a reservoir\" (PDF). ACM Transactions on Mathematical Software. 11 (1): 37–57. CiteSeerX 10.1.1.138.784. doi:10.1145/3147.3165.\n */\nexport function reservoirSampling(dataSource) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;\n  if (dataSource.length <= size) return dataSource;\n  var sampleSpace = dataSource.slice(0, size);\n  var len = dataSource.length;\n\n  for (var i = size + 1; i < len; i++) {\n    var pos = Math.round(Math.random() * i);\n\n    if (pos < size) {\n      sampleSpace[pos] = dataSource[i];\n    }\n  }\n\n  return sampleSpace;\n}","import React, { useMemo, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace } from '../../service';\nimport { DefaultButton, TeachingBubble, DirectionalHint } from 'office-ui-fabric-react';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../visBuilder/vegaBase';\n\ninterface StoryTellerProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst StoryTeller: React.FC<StoryTellerProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n  const [isTeachingBubbleVisible, setIsTeachingBubbleVisible] = useState(false);\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <div>\n      <DefaultButton id=\"vis-summary\" text=\"Summary\" onClick={() => { setIsTeachingBubbleVisible(true) }} />\n      {isTeachingBubbleVisible ? (\n          <div>\n            <TeachingBubble\n              calloutProps={{ directionalHint: DirectionalHint.bottomCenter }}\n              isWide={true}\n              hasCloseIcon={true}\n              closeButtonAriaLabel=\"Close\"\n              target={'#vis-summary'}\n              onDismiss={() => { setIsTeachingBubbleVisible(false) }}\n              headline=\"Chart Description\"\n            >\n              <ReactMarkdown source={result} />\n            </TeachingBubble>\n          </div>\n        ) : null}\n    </div>\n  )\n}\n\nexport default StoryTeller","import React, { useMemo } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace } from '../../service';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../visBuilder/vegaBase';\n\ninterface VisDescriptionProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst VisDescription: React.FC<VisDescriptionProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <ReactMarkdown source={result} />\n  )\n}\n\nexport default VisDescription","import React, { useMemo } from 'react';\nimport {\n  ViewSpace\n} from '../../../service';\nimport { Field, DataSource } from '../../../global';\nimport { specification } from 'visual-insights';\nimport { PreferencePanelConfig } from '../../../components/preference';\nconst similarityThrehold = 0.2;\nconst topKRelatedSpace = 5;\n\nfunction measuresRelatedScore (measures1: string[], measures2: string[]) {\n  let meaSet = new Set([...measures1, ...measures2])\n  let meaSet1 = new Set(measures1)\n  let meaSet2 = new Set(measures2)\n  let meaVec1: number[] = [];\n  let meaVec2: number[] = [];\n  for (let mea of meaSet) {\n    meaVec1.push(Number(meaSet1.has(mea)))\n    meaVec2.push(Number(meaSet2.has(mea)))\n  }\n  let score = 0;\n  for (let i = 0; i < meaVec1.length; i++) {\n    score += meaVec1[i] * meaVec2[i];\n  }\n  score /= (Math.sqrt(measures1.length) * Math.sqrt(measures2.length))\n  // console.log(measures1, measures2, score)\n  return score;\n}\ninterface RelatedViewSpace extends ViewSpace {\n  relatedScore: number;\n}\nexport interface DigDimensionProps {\n  /**\n   * we suppose that viewSpaces here is a ranked space list\n   */\n  viewSpaces: ViewSpace[];\n  interestedViewSpace: ViewSpace;\n  fieldScores: Array<[string, number, number, Field]>;\n  dataSource: DataSource;\n  visualConfig: PreferencePanelConfig\n}\n\nfunction useDigDimension(props: DigDimensionProps) {\n  const { viewSpaces, interestedViewSpace, fieldScores, dataSource, visualConfig } = props;\n  const relatedSpaces = useMemo<ViewSpace[]>(() => {\n    let ans: ViewSpace[] = []\n    for (let space of viewSpaces) {\n      if (space.dimensions.length > interestedViewSpace.dimensions.length && space.dimensions.length - interestedViewSpace.dimensions.length <= 2) {\n        let isSubset = interestedViewSpace.dimensions.every(subDim => {\n          return space.dimensions.find(dim => subDim === dim)\n        })\n        if (isSubset) {\n          ans.push(space)\n        }\n      }\n    }\n    return ans;\n  }, [interestedViewSpace, viewSpaces])\n  const rankedRelatedSpaces = useMemo(() => {\n    let ans: RelatedViewSpace[] = [];\n    for (let space of relatedSpaces) {\n      let measureSimilarity = measuresRelatedScore(interestedViewSpace.measures, space.measures);\n      if (measureSimilarity > similarityThrehold) {\n        // console.log({ measureSimilarity })\n        ans.push({\n          ...space,\n          relatedScore: space.score / Math.sqrt(measureSimilarity)\n        })\n      }\n    }\n    return ans.sort((a, b) => a.relatedScore - b.relatedScore);\n  }, [relatedSpaces]);\n\n  const viewList = useMemo(() => {\n    const ans = rankedRelatedSpaces.slice(0, topKRelatedSpace).map(space => {\n      let spaceFieldScores = fieldScores.filter(field => {\n        return space.dimensions.includes(field[0]) || space.measures.includes(field[0])\n      })\n      return {\n        ...space,\n        schema: specification(spaceFieldScores, dataSource, space.dimensions, space.measures).schema\n      };\n    })\n    return ans;\n  }, [rankedRelatedSpaces, fieldScores])\n\n  return viewList\n}\n\nexport default useDigDimension;\n","import React from \"react\";\nimport VisDescription from \"../../../plugins/visSummary/description\";\nimport useDigDimension, { DigDimensionProps } from \"./digDimension\";\nimport BaseChart from \"../../../visBuilder/vegaBase\";\nimport { Subspace } from \"../../../service\";\nimport { IconButton, Stack } from \"office-ui-fabric-react\";\n\nfunction isDimensionEqual(dimensions1: string[], dimensions2: string[]) {\n  if (dimensions1.length !== dimensions2.length) {\n    return false;\n  }\n  return dimensions1.every(dim1 => {\n    return dimensions2.includes(dim1);\n  });\n}\ninterface AssociationProps {\n  digDimensionProps: DigDimensionProps;\n  subspaceList: Subspace[];\n  onSelectView: (index: number) => void\n}\nconst Association: React.FC<AssociationProps> = props => {\n  const { digDimensionProps, subspaceList, onSelectView } = props;\n  const { dataSource, visualConfig, fieldScores } = digDimensionProps;\n  const relatedCharts = useDigDimension(digDimensionProps);\n  const fieldFeatures = fieldScores.map(f => f[3]);\n  return (\n    <div>\n      <div className=\"ms-Grid\">\n        {relatedCharts.map((view, i) => {\n          let currentSpace = subspaceList.find(space => {\n            return isDimensionEqual(space.dimensions, view.dimensions);\n          });\n          return (\n            <div key={`associate-row-${i}`}\n              className=\"ms-Grid-row\"\n              style={{\n                border: \"solid 1px #bfbfbf\",\n                margin: \"1em\",\n                padding: \"1em\"\n              }}\n            >\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg9\"\n                style={{ overflow: 'auto' }}\n              >\n                <BaseChart\n                  aggregator={visualConfig.aggregator}\n                  defaultAggregated={view.schema.geomType && view.schema.geomType.includes(\"point\") ? false : true}\n                  defaultStack={visualConfig.defaultStack}\n                  dimensions={view.dimensions}\n                  measures={view.measures}\n                  dataSource={dataSource}\n                  schema={view.schema}\n                  fieldFeatures={fieldFeatures}\n                />\n              </div>\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg3\"\n                style={{ fontSize: 14, color: \"#8a8886\", overflow: \"auto\" }}\n              >\n                <div>\n                  \n                  <Stack tokens={{ childrenGap: 8 }} horizontal>\n                    <IconButton iconProps={{ iconName: 'Lightbulb' }} title=\"Interested\" onClick={() => {\n                      onSelectView(view.index)\n                    }} />\n                  </Stack>\n                </div>\n                {currentSpace && (\n                  <VisDescription\n                    dimensions={view.dimensions}\n                    measures={view.measures}\n                    dimScores={fieldScores}\n                    space={currentSpace}\n                    spaceList={subspaceList}\n                    schema={view.schema}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Association;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  DefaultButton,\n  IconButton,\n  Stack,\n  ProgressIndicator,\n  SpinButton\n} from \"office-ui-fabric-react\";\nimport { Position } from 'office-ui-fabric-react/lib/utilities/positioning';\nimport PreferencePanel, {\n  PreferencePanelConfig\n} from \"../../components/preference\";\nimport { useComposeState } from \"../../utils/index\";\nimport BaseChart, { Specification } from \"../../visBuilder/vegaBase\";\nimport { DataSource, Field } from \"../../global\";\nimport { specification } from \"visual-insights\";\nimport VisSummary from \"../../plugins/visSummary/index\";\nimport { useGlobalState } from \"../../state\";\nimport Association from \"./association/index\";\nimport {\n  Subspace,\n  clusterMeasures,\n  ViewSpace,\n  FieldSummary\n} from \"../../service\";\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n}\ninterface DataView {\n  schema: Specification;\n  aggData: DataSource;\n  fieldFeatures: Field[];\n  dimensions: string[];\n  measures: string[];\n}\n\ninterface GalleryProps {\n  subspaceList: Subspace[];\n  /**\n   * dataSource here should be cookedData.\n   */\n  dataSource: DataSource;\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n}\n\nconst Gallery: React.FC<GalleryProps> = props => {\n  const { dataSource, summary, subspaceList } = props;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  });\n  const [showAssociation, setShowAssociation] = useState(false);\n  const [visualConfig, setVisualConfig] = useState<PreferencePanelConfig>({\n    aggregator: \"sum\",\n    defaultAggregated: true,\n    defaultStack: true\n  });\n  const [viewSpaces, setViewSpaces] = useState<ViewSpace[]>([]);\n\n  const [dataView, setDataView] = useState<DataView>({\n    schema: {\n      position: [],\n      color: [],\n      opacity: [],\n      geomType: []\n    },\n    fieldFeatures: [],\n    aggData: [],\n    dimensions: [],\n    measures: []\n  });\n\n  const gotoPage = (pageNo: number) => {\n    setCurrentPage(pageNo);\n  };\n\n  useEffect(() => {\n    updateState(draft => {\n      draft.loading.gallery = true;\n    });\n    // todo:\n    // should group number be the same for different subspaces?\n    clusterMeasures(\n      state.maxGroupNumber,\n      subspaceList.map(space => {\n        return {\n          dimensions: space.dimensions,\n          measures: space.measures,\n          matrix: space.correlationMatrix\n        };\n      }),\n      state.useServer\n    ).then(viewSpaces => {\n      setViewSpaces(viewSpaces);\n      updateState(draft => {\n        draft.loading.gallery = false;\n      });\n    });\n  }, [subspaceList, dataSource, state.maxGroupNumber]);\n\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [\n        field.fieldName,\n        field.entropy,\n        field.maxEntropy,\n        { name: field.fieldName, type: field.type }\n      ];\n    });\n  }, [summary.origin, summary.grouped]);\n\n  useEffect(() => {\n    const viewState = viewSpaces[currentPage];\n    if (viewState) {\n      const { dimensions, measures } = viewState;\n      try {\n        // todo: find the strict confition instead of using try catch\n        const fieldScores = dimScores.filter(field => {\n          return dimensions.includes(field[0]) || measures.includes(field[0]);\n        });\n        const { schema } = specification(\n          fieldScores,\n          dataSource,\n          dimensions,\n          measures\n        );\n        setDataView({\n          schema,\n          fieldFeatures: fieldScores.map(f => f[3]),\n          aggData: dataSource,\n          dimensions,\n          measures\n        });\n        // ugly code\n        // todo:\n        // implement this in specification\n        // + check geomType\n        // + check geom number and aggregated geom number\n        if (schema.geomType && (schema.geomType.includes(\"point\") || schema.geomType.includes(\"density\"))) {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: false\n            };\n          });\n        } else {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: true\n            };\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [viewSpaces, currentPage]);\n  const currentSpace = useMemo<Subspace>(() => {\n    return subspaceList.find(subspace => {\n      return subspace.dimensions.join(\",\") === dataView.dimensions.join(\",\");\n    })!;\n  }, [subspaceList, currentPage, dataView]);\n  useEffect(() => {\n    setShowAssociation(false);\n  }, [currentPage]);\n  return (\n    <div className=\"content-container\">\n      <PreferencePanel\n        show={pageStatus.show.configPanel}\n        config={visualConfig}\n        onUpdateConfig={config => {\n          setVisualConfig(config);\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n      />\n\n      <div className=\"card\">\n        {(state.loading.gallery ||\n          state.loading.subspaceSearching ||\n          state.loading.univariateSummary) && (\n          <ProgressIndicator description=\"calculating\" />\n        )}\n        <h2 style={{ marginBottom: 0 }}>\n          Visual Insights{\" \"}\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Preference\"\n            ariaLabel=\"preference\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.configPanel = true;\n              });\n            }}\n          />\n          <IconButton\n            iconProps={{ iconName: \"Lightbulb\" }}\n            title=\"Dig In\"\n            ariaLabel=\"digIn\"\n            onClick={() => {\n              setShowAssociation(true);\n            }}\n          />\n        </h2>\n        <p className=\"state-description\">\n          Details of the recommendation process can be seen in <b>NoteBook</b>{\" \"}\n          Board. You can adjust some of the parameters and operators and see how\n          it influence recommendation results.\n        </p>\n        <p className=\"state-description\">\n          Try to use the setting button beside the \"visual insight\" title to\n          adjust the visualization settings to get a view you prefer better.\n        </p>\n        <div className=\"ms-Grid\" dir=\"ltr\">\n          <div className=\"ms-Grid-row\">\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\"\n              style={{ overflow: \"auto\" }}\n            >\n              <div style={{ marginBottom: '1rem' }}>\n                <SpinButton\n                  label={'Current Page'}\n                  value={(currentPage + 1).toString()}\n                  min={0}\n                  max={viewSpaces.length}\n                  step={1}\n                  iconProps={{ iconName: 'Search' }}\n                  labelPosition={Position.end}\n                  // tslint:disable:jsx-no-lambda\n                  onValidate={(value: string) => { gotoPage((Number(value) - 1) % viewSpaces.length) }}\n                  onIncrement={() => { gotoPage((currentPage + 1) % viewSpaces.length); }}\n                  onDecrement={() => { gotoPage((currentPage - 1 + viewSpaces.length) % viewSpaces.length); }}\n                  incrementButtonAriaLabel={'Increase value by 1'}\n                  decrementButtonAriaLabel={'Decrease value by 1'}\n                />\n              </div>\n              <p className=\"state-description\">\n                Page No. {currentPage + 1} of {viewSpaces.length}\n              </p>\n              <Stack horizontal tokens={{ childrenGap: 20 }}>\n                <DefaultButton\n                  text=\"Last\"\n                  onClick={() => {\n                    gotoPage(\n                      (currentPage - 1 + viewSpaces.length) % viewSpaces.length\n                    );\n                  }}\n                  allowDisabledFocus\n                />\n                <DefaultButton\n                  text=\"Next\"\n                  onClick={() => {\n                    gotoPage((currentPage + 1) % viewSpaces.length);\n                  }}\n                  allowDisabledFocus\n                />\n              </Stack>\n              <h3>Specification</h3>\n              <pre>{JSON.stringify(dataView.schema, null, 2)}</pre>\n              <VisSummary\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dimScores={dimScores}\n                space={currentSpace}\n                spaceList={subspaceList}\n                schema={dataView.schema}\n              />\n            </div>\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg9\"\n              style={{ overflow: \"auto\" }}\n            >\n              <BaseChart\n                aggregator={visualConfig.aggregator}\n                defaultAggregated={visualConfig.defaultAggregated}\n                defaultStack={visualConfig.defaultStack}\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dataSource={dataView.aggData}\n                schema={dataView.schema}\n                fieldFeatures={dataView.fieldFeatures}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {showAssociation && (\n        <div className=\"card\">\n          <h2> Related Views </h2>\n          <Association\n            onSelectView={(index) => {\n              let pos = viewSpaces.findIndex(v => v.index === index)\n              if (pos > -1) {\n                gotoPage(pos);\n              }\n            }}\n            subspaceList={subspaceList}\n            digDimensionProps={{\n              visualConfig,\n              dataSource,\n              viewSpaces,\n              fieldScores: dimScores,\n              interestedViewSpace: viewSpaces[currentPage]\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useRef, useEffect } from 'react';\nimport embed from 'vega-embed';\nimport { FieldType, DataSource } from '../../global';\nexport interface DistributionChartProps {\n  fieldType: FieldType;\n  x: string;\n  y: string;\n  dataSource: DataSource\n}\n\nconst DistributionChart: React.FC<DistributionChartProps> = (props) => {\n  const chart = useRef<HTMLDivElement>(null);\n  const { x, y, dataSource, fieldType } = props;\n    useEffect(() => {\n      if (chart.current) {\n        let values: typeof dataSource = [];\n        let hasIndex = false;\n        if (fieldType === 'ordinal' && dataSource.some(member => {\n          return /(\\[|\\()-?([0-9.]+|Infinity),\\s*([0-9.]+|Infinity)(\\]|\\))/.test(member.memberName)\n        })) {\n          values = dataSource.map(member => {\n            hasIndex = true;\n            let result = /(\\[|\\()(?<left>-?([0-9.]+|Infinity)),\\s*([0-9.]+|Infinity)(\\]|\\))/.exec(member.memberName);\n            \n            return {\n              ...member,\n              index: result === null ? member.name : Number(result.groups!.left)\n            }\n          })\n        } else {\n          values = dataSource\n        }\n        let sortBy: string | undefined | any = undefined;\n        if (fieldType === 'nominal') {\n          sortBy = '-y'\n        } else if (fieldType === 'ordinal' && hasIndex) {\n          sortBy = { field: 'index' }\n        }\n        embed(chart.current, {\n          background: '#fff',\n          data: {\n            values\n          },\n          height: 120,\n          width: 200,\n          mark: ['quantitative', 'temporal'].includes(fieldType) ? 'line' : 'bar',\n          encoding: {\n            x: {\n              field: x,\n              axis: dataSource.length > 16 ? null : undefined,\n              type: fieldType, sort: sortBy\n            },\n            y: { field: y, type: 'quantitative', aggregate: 'sum' }\n          }\n        }, {\n          actions: false\n        })\n      }\n    }, [x, y, dataSource])\n  return <div ref={chart}></div>\n}\n\nexport default DistributionChart;","import React, { useMemo } from 'react';\nimport { DetailsList, SelectionMode, IColumn, Icon, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport chroma, { Color } from 'chroma-js';\nimport { FieldSummary } from '../../service';\nimport DistributionChart from './distributionChart';\nimport { FieldType, Record } from '../../global';\n\nimport './fieldAnalysis.css';\n\n// todo: distribution info\n\ninterface FieldAnalsisProps {\n  originSummary: FieldSummary[];\n  groupedSummary: FieldSummary[];\n}\nconst columns: IColumn[] = [\n  {\n    key: 'fieldName',\n    name: 'fieldName',\n    fieldName: 'fieldName',\n    minWidth: 70,\n    maxWidth: 150\n  },\n  {\n    key: 'type',\n    name: 'type',\n    fieldName: 'type',\n    minWidth: 50\n  },\n  {\n    key: 'entropy',\n    name: 'entropy',\n    fieldName: 'entropy',\n    minWidth: 120\n  },\n  {\n    key: 'maxEntropy',\n    name: 'maxEntropy',\n    fieldName: 'maxEntropy',\n    minWidth: 120\n  }\n];\nfunction getIconNameByFieldType (type: string): string {\n  switch (type) {\n    case 'nominal':\n      return 'TextField';\n    case 'quantitative':\n      return 'NumberField';\n    case 'ordinal':\n      return 'Breadcrumb';\n    case 'temporal':\n      return 'EventDate';\n    default:\n      return ''\n  }\n}\n\nfunction getValueColor (value: number, range: [number, number]): [number, number, number] {\n  return chroma.scale('YlGnBu').domain([range[1], range[0]])(value).rgb();\n}\n\n/**\n * \n * @param color rgb array\n * algorithm provided by https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color\n */\nfunction contrastColor(color: [number, number, number]): [number, number, number] {\n  let luminance = (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  return luminance > 0.5 ? [0, 0, 0] : [255, 255, 255]\n}\nconst FieldAnalsis: React.FC<FieldAnalsisProps> = (props) => {\n\n  const { originSummary, groupedSummary } = props;\n\n  const entropyRange = useMemo<[number, number]>(() => {\n    const originEntropy = originSummary.map(s => s.maxEntropy);\n    return [0, Math.max(...originEntropy)];\n  }, [originSummary])\n\n  const onRenderCompactCard = (item: Record) => {\n    return (\n      <div className=\"field-hover-card\">\n        <h2>{item.fieldName}</h2>\n        <div>Field entropy is { Number(item.entropy).toFixed(2) }</div>\n        <div className=\"chart-vertical-margin-container\" >\n          <DistributionChart x=\"memberName\" y=\"count\" fieldType={item.type as FieldType} dataSource={item.distribution} />\n        </div>\n        \n      </div>\n    )\n  }\n  const onRenderExpandedCard = (item: Record) => {\n    const name = item.fieldName;\n    const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n    return (\n      <div className=\"field-hover-card\">\n        {\n          target ? <div>\n            <h3>{target.fieldName}</h3>\n            <div>Field entropy is { Number(target.entropy).toFixed(2) }</div>\n            <div className=\"chart-vertical-margin-container\">\n              <DistributionChart x=\"memberName\" y=\"count\" fieldType={target.type as FieldType} dataSource={target.distribution} />\n            </div>\n          </div> : <div>This field is not grouped.</div>\n        }\n      </div>\n    )\n  }\n\n\n\n  const renderItemColumn = (item: Record, index?: number, column?: IColumn) => {\n    if (column !== undefined) {\n      const name = item.fieldName;\n      const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n      const expandingCardProps: IExpandingCardProps = {\n        onRenderCompactCard,\n        onRenderExpandedCard,\n        renderData: item,\n        compactCardHeight: 320,\n        expandedCardHeight: target ? 320 : 40\n      }\n      const fieldContent = item[column.fieldName!];\n      let bgColor: [number, number, number] = [255, 255, 255];\n      switch (column.key) {\n        case 'type':\n          return <div>\n            <Icon iconName={getIconNameByFieldType(fieldContent)} /> {fieldContent}\n          </div>\n        case 'entropy':\n        case 'maxEntropy':\n          bgColor = getValueColor(item[column.key], entropyRange);\n          let fontColor = contrastColor(bgColor)\n          let bgColorStr = `rgb(${bgColor.join(',')})`\n          let fontColorStr = `rgb(${contrastColor(bgColor).join(',')})`\n          return (\n            <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n              <div style={{ boxShadow: `${bgColorStr} 0px 0px 0px 10px`, backgroundColor: bgColorStr, color: fontColorStr }}>{fieldContent}</div>\n            </HoverCard>\n          )\n        default:\n          return <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n          <div>{fieldContent}</div>\n        </HoverCard>\n      }\n    }\n  }\n\n  // const onRenderRow: IRenderFunction<any> = (props) => {\n  //   const customStyles: Partial<IDetailsRowStyles> = {};\n  //   customStyles.root = { backgroundColor: getValueColor(props.item['entropy'], entropyRange), color: '#fff' }\n  //   return <DetailsRow {...props} styles={customStyles} />;\n  // };\n\n  return <DetailsList compact={true} columns={columns} items={originSummary} selectionMode={SelectionMode.none} onRenderItemColumn={renderItemColumn} />\n}\n\nexport default FieldAnalsis;","import React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Subspace } from '../../service';\nimport embed from 'vega-embed';\nimport { DataSource } from '../../global';\n\nfunction encodeArr (arr: any[]): string {\n  return arr.join(',')\n}\ninterface SubspacesProps {\n  subspaceList: Subspace[];\n  onSpaceChange: (dimensions: string[], measures: string[], matrix: number[][]) => void\n}\nconst Subspaces: React.FC<SubspacesProps> = (props) => {\n  const { subspaceList, onSpaceChange } = props;\n  const [curIndex, setCurIndex] = useState(0);\n  const spaceChart = useRef<HTMLDivElement>(null)\n  const relationChart = useRef<HTMLDivElement>(null)\n  // const subspaces = useMemo<IndexSubspace[]>(() => {\n  //   return subspaceList.map((space, index) => {\n  //     return {\n  //       ...space,\n  //       index\n  //     }\n  //   })\n  // }, [subspaceList]);\n  useEffect(() => {\n    let index = subspaceList.length - 1;\n    if (index > -1) {\n      let targetSpace = subspaceList[index];\n      onSpaceChange(targetSpace.dimensions, targetSpace.measures.map(m => m.name), targetSpace.correlationMatrix);\n      setCurIndex(index);\n    }\n  }, [subspaceList])\n  const range = useMemo<[number, number]>(() => {\n    let max = 0;\n    let min = Infinity;\n    for (let space of subspaceList) {\n      for (let { name, value } of space.measures) {\n        max = Math.max(max, value);\n        min = Math.min(min, value);\n      }\n    }\n    return [min, max]\n  }, [subspaceList])\n  const values = useMemo<DataSource>(() => {\n    let ans = [];\n    // todos:\n    // the fold operation here is a tmp solution. it is designed when I don't there is a api in vega to handle event listener.\n    // the fold operation here can caused a wasted of time and space.\n    // I suggested to divied it into two charts and connect the logic throgh a state manager outside the charts.\n    for (let i = 0; i < subspaceList.length; i++) {\n      let space = subspaceList[i];\n      let dimensions = encodeArr(space.dimensions)\n      for (let { name, value } of space.measures) {\n        let record: any = {\n          test: i,\n          score: space.score,\n          dimensions,\n          measureName: name,\n          measureValue: value,\n        };\n        ans.push(record)\n      }\n    }\n    return ans\n  }, [subspaceList, range])\n  useEffect(() => {\n    if (spaceChart.current && subspaceList.length > 0) {\n      embed(spaceChart.current, {\n        data: {\n          values\n        },\n        vconcat: [\n          {\n            mark: 'rect',\n            selection: {\n              dim: {\n                type: 'single',\n                on: 'click',\n                encodings: ['y']\n              }\n            },\n            encoding: {\n              x: { field: 'measureName', type: 'nominal' },\n              y: {\n                field: 'dimensions',\n                type: 'ordinal',\n                sort: { field: 'score' }\n              },\n              color: { field: 'measureValue', type: 'quantitative', aggregate: 'mean', scale: { reverse: true } },\n              opacity: {\n                condition: {selection: 'dim', value: 1},\n                value: 0.72\n              },\n            }\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            /**\n             * record is the data record(defiend in `values`) the event contains.\n             */\n            let record = item.datum;\n            let index = subspaceList.findIndex(space => encodeArr(space.dimensions) === record.dimensions)\n\n            if (index > -1) {\n              let targetSpace = subspaceList[index];\n              onSpaceChange(targetSpace.dimensions, targetSpace.measures.map(m => m.name), targetSpace.correlationMatrix);\n              setCurIndex(index);\n            }\n          }\n        })\n      })\n    }\n  }, [subspaceList, values])\n  useEffect(() => {\n    let space = subspaceList[curIndex];\n    if (relationChart.current && subspaceList.length > 0 && space) {\n      let matrix: DataSource = [];\n      \n      for (let i = 0; i < space.correlationMatrix.length; i++) {\n          for (let j = 0; j < space.correlationMatrix[i].length; j++) {\n            matrix.push({\n              x: space.measures[i].name,\n              y: space.measures[j].name,\n              correlation: space.correlationMatrix[i][j]\n            })\n          }\n        }\n      embed(relationChart.current, {\n        data: {\n          values: matrix\n        },\n        mark: 'rect',\n        encoding: {\n          x: { field: 'x', type: 'nominal' },\n          y: { field: 'y', type: 'nominal' },\n          color: { field: 'correlation', type: 'quantitative', aggregate: 'mean' , scale: { scheme: 'redyellowgreen', domain: [-1, 1] } }\n        }\n      })\n    }\n    \n  }, [subspaceList, curIndex])\n  return <div>\n    <div ref={spaceChart}></div>\n    <div ref={relationChart}></div>\n  </div>\n}\n\nexport default Subspaces;","import React, { useEffect, useMemo, useRef } from 'react';\nimport { kruskalMST } from 'visual-insights';\nimport { useGlobalState } from '../../state';\nimport embed from 'vega-embed';\n// cluster should be used for small graph because the number of measure is limited. \n// Browser may be more likely crashed by other algorithm or data structure or memory used in the whole analysis pipline.\n/**\n * adjMatrix and measures share a common index system;\n */\ninterface ClusterBoardProps {\n  adjMatrix: number[][];\n  measures: string[];\n  onFocusGroup: (measuresInView: string[]) => void;\n}\n\ninterface VegaEdge {\n  source: number | string;\n  target: number | string;\n  value: number;\n  inCutEdge: boolean;\n}\ninterface VegaNode {\n  name: string;\n  index: number;\n  value: number;\n  group: number;\n}\ninterface TreeData { \n  nodes: VegaNode[];\n  edges: VegaEdge[]\n}\nconst ClusterBoard: React.FC<ClusterBoardProps> = (props) => {\n  const { adjMatrix, measures, onFocusGroup } = props;\n  const [state, updateState] = useGlobalState();\n  const chart = useRef<HTMLDivElement>(null);\n  // const groups = useMemo<string[][]>(() => {\n  //   return clusterMeasures({\n  //     matrix: adjMatrix,\n  //     measures,\n  //   })\n  // }, [adjMatrix, measures]);\n  const clusterResult = useMemo(() => {\n    /**\n     * todo: \n     * maxGroupNumber = the measures length / max visual channel for measure.\n     */\n    let { edgesInMST, groups } = kruskalMST(adjMatrix, state.maxGroupNumber);\n    return { edgesInMST, groups }\n  }, [adjMatrix, state.maxGroupNumber])\n  const treeData = useMemo<TreeData>(() => {\n    let { edgesInMST, groups } = clusterResult;\n    const edges: VegaEdge[] = edgesInMST.map(edge => {\n      return {\n        source: edge[0][0],\n        target: edge[0][1],\n        value: 1 / edge[1],\n        inCutEdge: edge[2]\n      }\n    });\n    const nodes: VegaNode[] = [];\n    for (let i = 0; i < groups.length; i++) {\n      nodes.push({\n        name: measures[i],\n        index: i,\n        value: 1,\n        group: groups[i]\n      })\n    }\n    return {\n      nodes,\n      edges\n    }\n  }, [measures, clusterResult])\n  useEffect(() => {\n    if (chart.current && measures.length > 0) {\n      embed(chart.current, {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"width\": 700,\n        \"height\": 500,\n        \"padding\": 0,\n        \"autosize\": \"none\",\n      \n        \"signals\": [\n          { \"name\": \"cx\", \"update\": \"width / 2\" },\n          { \"name\": \"cy\", \"update\": \"height / 2\" },\n          {\n            \"description\": \"State variable for active node fix status.\",\n            \"name\": \"fix\", \"value\": false,\n            \"on\": [\n              {\n                \"events\": \"text:mouseout[!event.buttons], window:mouseup\",\n                \"update\": \"false\"\n              },\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix || true\"\n              },\n              {\n                \"events\": \"[text:mousedown, window:mouseup] > window:mousemove!\",\n                \"update\": \"xy()\",\n                \"force\": true\n              }\n            ]\n          },\n          {\n            \"description\": \"Graph node most recently interacted with.\",\n            \"name\": \"node\", \"value\": null,\n            \"on\": [\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix === true ? item() : node\"\n              }\n            ]\n          },\n          {\n            \"description\": \"Flag to restart Force simulation upon data changes.\",\n            \"name\": \"restart\", \"value\": false,\n            \"on\": [\n              {\"events\": {\"signal\": \"fix\"}, \"update\": \"fix && fix.length\"}\n            ]\n          }\n        ],\n      \n        \"data\": [\n          {\n            \"name\": \"node-data\",\n            values: treeData.nodes,\n          },\n          {\n            \"name\": \"link-data\",\n            values: treeData.edges\n          }\n        ],\n      \n        \"scales\": [\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"domain\": {\"data\": \"node-data\", \"field\": \"group\"},\n            \"range\": {\"scheme\": \"tableau20\"}\n          },\n          {\n            \"name\": \"colorEdge\",\n            \"type\": \"quantize\",\n            \"domain\": {\"data\": \"link-data\", \"field\": \"value\"},\n            \"range\": {\"scheme\": \"viridis\"}\n          }\n        ],\n      \n        \"marks\": [\n          {\n            \"name\": \"nodes\",\n            \"type\": \"text\",\n            \"zindex\": 1,\n      \n            \"from\": {\"data\": \"node-data\"},\n            \"on\": [\n              {\n                \"trigger\": \"fix\",\n                \"modify\": \"node\",\n                \"values\": \"fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}\"\n              },\n              {\n                \"trigger\": \"!fix\",\n                \"modify\": \"node\", \"values\": \"{fx: null, fy: null}\"\n              }\n            ],\n      \n            \"encode\": {\n              \"enter\": {\n                \"fill\": {\"scale\": \"color\", \"field\": \"group\"},\n                \"text\": {\"field\": \"name\"},\n                \"fontSize\": {\"value\": 14},\n                \"fontWeight\": {\"value\": 600}\n              },\n              \"update\": {\n                \"cursor\": {\"value\": \"pointer\"}\n              }\n            },\n      \n            \"transform\": [\n              {\n                \"type\": \"force\",\n                \"iterations\": 300,\n                \"restart\": {\"signal\": \"restart\"},\n                \"signal\": \"force\",\n                \"forces\": [\n                  {\"force\": \"center\", \"x\": {\"signal\": \"cx\"}, \"y\": {\"signal\": \"cy\"}},\n                  {\"force\": \"collide\" },\n                  {\"force\": \"nbody\" },\n                  {\"force\": \"link\", \"links\": \"link-data\" }\n                ]\n              }\n            ]\n          },\n          {\n            \"type\": \"path\",\n            \"from\": {\"data\": \"link-data\"},\n            \"interactive\": false,\n            \"encode\": {\n              \"update\": {\n                \"stroke\": {\n                  \"scale\": \"colorEdge\",\n                  \"field\": \"value\"\n                },\n                \"strokeWidth\": {\"value\": 0.8},\n                \"opacity\": {\"value\": 0.5}\n              },\n            },\n            \"transform\": [\n              {\n                \"type\": \"linkpath\",\n                \"require\": {\"signal\": \"force\"},\n                \"shape\": \"line\",\n                \"sourceX\": \"datum.source.x\", \"sourceY\": \"datum.source.y\",\n                \"targetX\": \"datum.target.x\", \"targetY\": \"datum.target.y\"\n              }\n            ]\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            let record = item.datum;\n            let group = record.group;\n            let measuresInView = measures.filter((mea, index) => {\n              return clusterResult.groups[index] === group\n            });\n            onFocusGroup(measuresInView);\n          }\n        })\n      })\n    }\n  }, [treeData, measures])\n  return <div ref={chart}>\n  </div>\n}\n\nexport default ClusterBoard;","import React, { useMemo, useState, useEffect } from 'react';\nimport { DataSource, Field } from '../../global';\nimport FieldAnalysisBoard from './fieldAnalysis';\nimport Subspaces from './subspaces';\nimport { FieldSummary, Subspace, combineFieldsService } from '../../service';\nimport ClusterBoard from './cluster';\nimport { specification } from 'visual-insights';\nimport { ProgressIndicator, Toggle, Slider } from 'office-ui-fabric-react';\nimport { useGlobalState } from '../../state';\nimport VegaBase from '../../visBuilder/vegaBase';\nimport './index.css';\nconst maxMeasureInView = 4;\ninterface NoteBookProps {\n  dataSource: DataSource;\n  // dimScores: [string, number, number, Field][],\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[]\n  };\n  subspaceList: Subspace[]\n}\nconst NoteBook: React.FC<NoteBookProps> = (props) => {\n  const { summary, subspaceList, dataSource } = props;\n  const [state, updateState] = useGlobalState();\n  const [isAggregated, setIsAggregated] = useState(true);\n  interface ClusterState {\n    measures: string[];\n    dimensions: string[];\n    matrix: number[][];\n  }\n  const [clusterState, setClusterState] = useState<ClusterState>({\n    measures: [],\n    dimensions: [],\n    matrix: []\n  })\n\n  const [measuresInView, setMeasuresInView] = useState<string[]>([]);\n\n\n  // todo:\n  // should be updated after designing new specification api\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [field.fieldName, field.entropy, field.maxEntropy, { name: field.fieldName, type: field.type }]\n    });\n  }, [summary.origin, summary.grouped])\n\n  const spec = useMemo(() => {\n    const { dimensions, measures } = clusterState;\n    // todo\n    // this condition is not strict enough. dimScores should share same elements with dimensions and measures.\n    // maybe use try catch in future\n    try {\n      /**\n       * fieldScores is the scores info for the dims and meas in current view.\n       * dimensions should get the grouped new field.\n       * measures shall never use the grouped field.\n       */\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measuresInView.includes(field[0])\n      })\n      const { schema } = specification(fieldScores, dataSource, dimensions, measuresInView)\n      return schema;\n    } catch (error) {\n      console.log(error)\n      return {\n        position: []\n      }\n    }\n\n  }, [dimScores, clusterState, dataSource, measuresInView])\n\n  const usedSubspaceList = useMemo<Subspace[]>(() => {\n    return subspaceList.slice(0, Math.round(subspaceList.length * state.topK.subspacePercentSize))\n  }, [subspaceList, state.topK.subspacePercentSize]);\n  useEffect(() => {\n    updateState(draft => {\n      draft.maxGroupNumber = Math.round(state.cookedMeasures.length / maxMeasureInView)\n    })\n  }, [state.cookedMeasures])\n  return <div>\n    <h3 className=\"notebook header\">Univariate Summary</h3>\n    <p className=\"state-description\">Hover your mouse over the fields and see the distails and entropy reducing strategy.</p>\n    {state.loading.univariateSummary && <ProgressIndicator description=\"analyzing\" />}\n    <div className=\"notebook content container\">\n      <FieldAnalysisBoard originSummary={summary.origin} groupedSummary={summary.grouped} />\n    </div>\n\n    <h3 className=\"notebook header\">Subspace Searching</h3>\n    <p className=\"state-description\">Try to choose one row(combination of dimensions) of the subspace and see the changes of the processes below.</p>\n    {state.loading.subspaceSearching && <ProgressIndicator description=\"analyzing\" />}\n    {!state.loading.univariateSummary && <Slider disabled={state.loading.subspaceSearching} value={state.topK.dimensionSize * 100} label=\"top k percent dimension used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n      onChange={(value: number) => {\n        updateState(draft => {\n          draft.topK.dimensionSize = value / 100;\n          draft.loading.subspaceSearching = true;\n        })\n        const selectedDimensions = state.cookedDimensions.slice(0, Math.round(state.cookedDimensions.length * value / 100));\n        combineFieldsService(dataSource, selectedDimensions, state.cookedMeasures, 'sum', state.useServer)\n          .then(subspaces => {\n            if (subspaces) {\n              updateState(draft => {\n                draft.subspaceList = subspaces;\n                draft.loading.subspaceSearching = false\n              })\n            }\n          })\n      }}/>}\n      {\n        !state.loading.univariateSummary && <Slider disabled={state.loading.subspaceSearching} value={state.topK.subspacePercentSize * 100} label=\"top k percent subspace used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n        onChange={(value: number) => {\n          updateState(draft => {\n            draft.topK.subspacePercentSize = value / 100;\n          })\n        }}/>\n      }\n    <div className=\"notebook content center container\">\n      <Subspaces subspaceList={usedSubspaceList} onSpaceChange={(dimensions, measures, matrix) => {\n        setClusterState({\n          dimensions,\n          measures,\n          matrix\n        })\n      }} />\n    </div>\n\n    <h3 className=\"notebook header\">Measurement Clustering</h3>\n    <p className=\"state-description\">Try to choose one group to visualize them.</p>\n    <Slider\n      label=\"Max Group Number\"\n      min={1}\n      max={state.cookedMeasures.length || 4}\n      step={1}\n      // defaultValue={clusterState.measures.length / 4}\n      value={state.maxGroupNumber}\n      showValue={true}\n      onChange={(value: number) => { updateState(draft => {\n        draft.maxGroupNumber = value\n      })}}\n    />\n    <div className=\"notebook content center container\">\n      <ClusterBoard adjMatrix={clusterState.matrix} measures={clusterState.measures} onFocusGroup={(measInView) => { setMeasuresInView(measInView); console.log('view in measures', measInView) }} />\n    </div>\n\n    <h3 className=\"notebook header\">Visualization</h3>\n    <p className=\"state-description\">\n      If there is no result here, try to click one group of measures in <b>Clustering</b> process above.\n    </p>\n    <Toggle checked={isAggregated} label=\"aggregate measures\" defaultChecked onText=\"On\" offText=\"Off\" onChange={(e, checked: boolean | undefined) => {setIsAggregated(!!checked)}} />\n    <div className=\"notebook content center container\">\n      <VegaBase defaultAggregated={isAggregated} defaultStack={true} aggregator={'sum'}\n        schema={spec}\n        fieldFeatures={dimScores.map(dim => dim[3])}\n        dataSource={dataSource}\n        dimensions={clusterState.dimensions} measures={measuresInView} />\n    </div>\n\n  </div>\n}\n\nexport default NoteBook;","import React from 'react';\nimport { DetailsList, SelectionMode } from 'office-ui-fabric-react';\nimport { DataSource, BIField, BIFieldType } from '../global';\nexport interface DataTableProps {\n  dataSource: DataSource,\n  fields: BIField[]\n}\nconst DataTable: React.FC<DataTableProps> = (props) => {\n  const { dataSource = [], fields = [] } = props;\n  let columns = fields.map(field => {\n    return {\n      key: field.name,\n      name: field.name,\n      fieldName: field.name,\n      minWidth: 70,\n      maxHeight: 90\n    }\n  });\n\n  return <div style={{maxHeight: 400, overflow: 'auto'}}>\n    <DetailsList items={dataSource} columns={columns} selectionMode={SelectionMode.none} />\n  </div>\n}\n\nexport default DataTable;","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Panel, PanelType, Toggle } from 'office-ui-fabric-react';\n\nimport { BIField, BIFieldType } from '../global';\n\ninterface FieldPanelProps {\n  show: boolean;\n  onClose: () => void;\n  onUpdateConfig: (fields: BIField[]) => void;\n  fields: BIField[];\n}\nconst FieldPanel: React.FC<FieldPanelProps> = (props) => {\n  const {\n    show = false,\n    // fields = [],\n    onUpdateConfig,\n    onClose\n  } = props;\n  const [fields, setFields] = useState<BIField[]>([])\n  useEffect(() => {\n    setFields(props.fields)\n  }, [props.fields])\n  \n  function updateFieldType(field: BIField, type: BIFieldType) {\n    setFields(fields => {\n      return fields.map(f => {\n        if (field.name === f.name) {\n          return {\n            name: field.name,\n            type\n          }\n        } else {\n          return f\n        }\n      })\n    })\n  }\n\n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig(fields); onClose(); }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Meta Config\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <div>\n      {\n        fields.map(field => <Toggle key={field.name} checked={field.type === 'dimension'} label={field.name} onText=\"dimension\" offText=\"measure\" onChange={(e, checked) => { updateFieldType(field, checked ? 'dimension' : 'measure')}} />)\n      }\n    </div>\n  </Panel>\n}\n\nexport default FieldPanel;\n","import { Cleaner } from 'visual-insights';\nimport { DataSource } from '../../global';\n\n// todo\n// cleanMethodList has redundency.\n// clean method type, cleanData(switch), cleanMethodList should be maintained in one structure.\nexport type CleanMethod = 'dropNull' | 'useMode' | 'simpleClean';\nexport function cleanData (dataSource: DataSource, dimensions: string[], measures: string[], method: CleanMethod): DataSource {\n  // hint: dropNull works really bad when we test titanic dataset.\n  // useMode fails when there are more null values than normal values;\n  switch (method) {\n    case 'dropNull':\n      return Cleaner.dropNull(dataSource, dimensions, measures);\n    case 'useMode':\n      // todo: bad props design\n      return Cleaner.useMode(dataSource, dimensions.concat(measures));  \n    case 'simpleClean':\n    default:\n      return Cleaner.simpleClean(dataSource, dimensions, measures);\n  }\n}\n\nexport const cleanMethodList: Array<{ key: CleanMethod; text: string }> = [\n  { key: 'dropNull', text: 'drop null records' },\n  { key: 'useMode', text: 'replace null with mode' },\n  { key: 'simpleClean', text: 'simple cleaning' }\n]\n","import React, { useMemo } from 'react';\nimport { BIField, DataSource, Record } from '../../global';\nimport { Transform } from '../../utils/index'\nimport {  cleanData,  CleanMethod } from './clean';\nimport { deepcopy } from '../../utils/index';\n\n\nexport function useDataSource (rawData: DataSource, fields: BIField[], cleanMethod: CleanMethod): [DataSource, DataSource] {\n  const dimensions = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'dimension').map(field => field.name)\n  }, [fields])\n\n  const measures = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'measure').map(field => field.name)\n  }, [fields])\n\n  const dataSource = useMemo<DataSource>(() => {\n    return rawData.map(row => {\n      let record: Record = {}\n      fields.forEach(field => {\n        record[field.name] = field.type === 'dimension' ? row[field.name] : Transform.transNumber(row[field.name])\n      })\n      return record\n    })\n  }, [rawData, fields])\n\n  const preparedData = useMemo<DataSource>(() => {\n    return cleanData(deepcopy(dataSource), dimensions, measures, cleanMethod);\n  }, [dimensions, measures, dataSource, cleanMethod])\n\n  return [dataSource, preparedData]\n}","// todo replace the deepcopy with a safe and faster one.\nexport default function deepcopy(dataSource: any) {\n  return JSON.parse(JSON.stringify(dataSource))\n}","import React, { useState, useRef, useCallback } from \"react\";\nimport { useGlobalState } from \"../../state\";\nimport { FileLoader, useComposeState } from '../../utils/index';\nimport { ComboBox, PrimaryButton, IconButton, Callout, Stack, CommandBar, ChoiceGroup, IChoiceGroupOption, Slider, Label, Checkbox } from 'office-ui-fabric-react';\nimport DataTable from '../../components/table';\nimport FieldPanel from '../../components/fieldConfig';\nimport { DataSource,  BIField, Record } from '../../global';\nimport {  cleanMethodList, CleanMethod } from './clean';\nimport { Cleaner, Sampling } from 'visual-insights';\nimport { useDataSource } from './useDataSource';\nimport { useId } from '@uifabric/react-hooks';\n\nenum SampleKey {\n  none = 'none',\n  reservoir = 'reservoir',\n}\n\nconst SampleOptions = [\n  {\n    key: SampleKey.none,\n    text: 'none'\n  },\n  {\n    key: SampleKey.reservoir,\n    text: 'reservoir'\n  }\n];\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  }\n}\n\ninterface DataSourceBoardProps {\n  onExtractInsights: () => void;\n}\n\nconst DataSourceBoard: React.FC<DataSourceBoardProps> = (props) => {\n  const [state,updateState, dispatch] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  })\n  const [cleanMethod, setCleanMethod] = useState<CleanMethod>('dropNull');\n  const [fixUnicodeField, setFixUnicodeField] = useState<boolean>(true);\n  const [sampleMethod, setSampleMethod] = useState<SampleKey>(SampleKey.none)\n  const [sampleSize, setSampleSize] = useState<number>(0.2);\n\n  const dataSetting = useRef<HTMLDivElement>(null);\n  const fileEle = useRef<HTMLInputElement>(null);\n\n  const [dataSource, preparedData] = useDataSource(state.rawData, state.fields, cleanMethod);\n\n  const labelId = useId('labelElement');\n\n  async function fileUploadHanlder () {\n    if (fileEle.current !== null && fileEle.current.files !== null) {\n      const file = fileEle.current.files[0];\n      /**\n       * tmpFields is fields cat by specific rules, the results is not correct sometimes, waitting for human's input\n       */\n      let tmpFields: BIField[] = [];\n      let rawData: DataSource = [];\n\n      if (file.type === 'text/csv' || file.type === 'application/vnd.ms-excel') {\n        rawData = await FileLoader.csvLoader(file);\n      } else if (file.type === 'application/json') {\n        rawData = await FileLoader.jsonLoader(file);\n      } else {\n        throw new Error(`unsupported file type=${file.type} `)\n      }\n      if (sampleMethod === SampleKey.reservoir) {\n        rawData = Sampling.reservoirSampling(rawData, Math.round(rawData.length * sampleSize));\n      }\n      rawData = Cleaner.dropNullColumn(rawData, Object.keys(rawData[0])).dataSource;\n      let keys = Object.keys(rawData[0]);\n      tmpFields = keys.map((fieldName, index) => {\n        return {\n          name: fieldName,\n          type: rawData.every(row => {\n            return !isNaN(row[fieldName]) || row[fieldName] === undefined;\n          }) ? 'measure' : 'dimension'\n        }\n      });\n      if (fixUnicodeField) {\n        tmpFields.forEach((f, i) => {\n          f.name = `${f.name}-rid-${i}`\n        })\n        rawData = rawData.map(record => {\n          let fixedRecord: Record = {};\n          for (let i = 0; i < keys.length; i++) {\n            fixedRecord[tmpFields[i].name] = record[keys[i]]\n          }\n          return fixedRecord\n        })\n      }\n      updateState(draft => {\n        draft.fields = tmpFields;\n        draft.rawData = rawData;\n      })\n      setPageStatus(draft => {\n        draft.show.dataConfig = false;\n      });\n    }\n  }\n  // const analysisHandler = startAnalysis(preparedData, state.fields);\n\n  const commandBarList = [\n    {\n      key: 'upload',\n      name: 'Upload',\n      iconProps: { iconName: 'Upload' },\n      onClick: () => {\n        if (fileEle.current) {\n          fileEle.current.click();\n        }\n      }\n    }\n  ]\n\n  return (\n    <div className=\"content-container\">\n      <FieldPanel\n        fields={state.fields}\n        show={pageStatus.show.fieldConfig}\n        onUpdateConfig={fields => {\n          updateState(draft => {\n            draft.fields = fields;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.fieldConfig = false;\n          });\n        }}\n      />\n      <div className=\"card\">\n        <Stack horizontal>\n          <PrimaryButton\n            disabled={dataSource.length === 0}\n            iconProps={{ iconName: \"Financial\" }}\n            text=\"Extract Insights\"\n            onClick={() => {\n              dispatch(\"extractInsights\", {\n                dataSource: preparedData,\n                fields: state.fields\n              });\n              props.onExtractInsights();\n            }}\n          />\n          <div ref={dataSetting}>\n            <IconButton\n              iconProps={{ iconName: \"ExcelDocument\" }}\n              title=\"Upload\"\n              ariaLabel=\"upload data\"\n              onClick={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = true;\n                });\n              }}\n            />\n            <Callout\n              style={{ maxWidth: 300 }}\n              className=\"vi-callout-callout\"\n              role=\"alertdialog\"\n              gapSpace={0}\n              target={dataSetting.current}\n              onDismiss={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = false;\n                });\n              }}\n              setInitialFocus={true}\n              hidden={!pageStatus.show.dataConfig}\n            >\n              <div className=\"vi-callout-header\">\n                <p className=\"vi-callout-title\">Upload Your own dataset</p>\n              </div>\n              <div className=\"vi-callout-inner\">\n                <div className=\"vi-callout-content\">\n                  <p className=\"vi-callout-subTex\">\n                    .csv, .json are supportted.\n                  </p>\n                </div>\n                <div>\n                  <Checkbox\n                    label=\"fix unicode fields\"\n                    checked={fixUnicodeField}\n                    onChange={(\n                      ev?: React.FormEvent<HTMLElement>,\n                      checked?: boolean\n                    ) => {\n                      setFixUnicodeField(!!checked);\n                    }}\n                  />\n                  <Label id={labelId} required={true}>\n                    Sampling\n                  </Label>\n                  <ChoiceGroup\n                    defaultSelectedKey=\"B\"\n                    options={SampleOptions}\n                    selectedKey={sampleMethod}\n                    onChange={(\n                      ev: any,\n                      option: IChoiceGroupOption | undefined\n                    ) => {\n                      if (option) {\n                        setSampleMethod(option.key as SampleKey);\n                      }\n                    }}\n                    ariaLabelledBy={labelId}\n                  />\n                  {sampleMethod !== SampleKey.none && (\n                    <Slider\n                      label=\"sample size(percent)\"\n                      min={0}\n                      max={1}\n                      step={0.001}\n                      value={sampleSize}\n                      showValue={true}\n                      valueFormat={(value: number) =>\n                        `${(value * 100).toFixed(1)}%`\n                      }\n                      onChange={(val: number) => {\n                        setSampleSize(val);\n                      }}\n                    />\n                  )}\n                </div>\n                <div className=\"vi-callout-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileEle}\n                    multiple\n                    accept=\"*\"\n                    style={{ display: \"none\" }}\n                    onChange={fileUploadHanlder}\n                  />\n                  <CommandBar\n                    overflowButtonProps={{ name: \"More\" }}\n                    items={commandBarList}\n                  />\n                </div>\n              </div>\n            </Callout>\n          </div>\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Field Setting\"\n            ariaLabel=\"field setting\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.fieldConfig = true;\n              });\n            }}\n          />\n        </Stack>\n        <div style={{ margin: \"20px 0px\" }}>\n          <ComboBox\n            styles={{ root: { maxWidth: \"180px\" } }}\n            selectedKey={cleanMethod}\n            label=\"Clean Method\"\n            allowFreeform={true}\n            autoComplete=\"on\"\n            options={cleanMethodList}\n            onChange={(e, option) => {\n              option && setCleanMethod(option.key as CleanMethod);\n            }}\n          />\n        </div>\n        <p style={{ fontSize: 12, fontWeight: 400, color: \"#595959\" }}>\n          Remember to adjust the fields' types and cleaning strategy before\n          extracting insights.\n        </p>\n        <i style={{ fontSize: 12, fontWeight: 300, color: \"#595959\" }}>\n          Number of records {preparedData.length}\n        </i>\n        <DataTable fields={state.fields} dataSource={preparedData} />\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceBoard;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { DataSource } from \"../../global\";\nimport datalib from \"datalib\";\n\nfunction numberWithCommas(x: number): string {\n  let parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\nconst Card = styled.div`\n  display: inline-block;\n  padding: 1rem;\n  border: 1px solid #f5f5f5;\n  margin: 1rem;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB',\n  'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n  'Segoe UI Emoji', 'Segoe UI Symbol';\n  .indicator-card.header {\n    color: #8c8c8c;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    font-size: 20px;\n    line-height: 28px;\n    font-weight: 400;\n  }\n  .indicator-card.content {\n    color: #0078d4;\n    font-size: 56px;\n    line-height: 64px;\n    font-weight: 400;\n    margin: 0px;\n  }\n`;\ninterface IndicatorProps {\n  dataSource: DataSource;\n  measures: string[];\n  operator?: 'sum' | 'mean' | 'max' | 'min';\n}\nconst IndicatorCard: React.FC<IndicatorProps> = props => {\n  const { dataSource = [], measures = [], operator = 'sum' } = props;\n  const value = useMemo(() => {\n    if (measures.length === 0 || dataSource.length === 0) {\n      return '-'\n    }\n    let ans = 0;\n    try {\n      ans = datalib[operator](dataSource.map(d => d[measures[0]]));\n    } catch (error) {\n      console.log('operator does not exist or not in vega/datalib.')\n    }\n    if (Math.abs(ans - Math.round(ans)) > 0.00001) {\n      ans = Number(ans.toFixed(2));\n    }\n    return numberWithCommas(ans);\n  }, [dataSource, measures]);\n\n  return (\n    <Card>\n      <h4 className=\"indicator-card header\">{measures[0]} {operator && `(${operator})`}</h4>\n      <h1 className=\"indicator-card content\">{ value }</h1>\n    </Card>\n  );\n};\n\nexport default IndicatorCard;\n","import React, { useRef, useEffect, useState } from 'react';\nimport embed, { vega, Result } from 'vega-embed';\nimport { Spec } from 'vega';\n// import { Result } from 'vega-embed';\n\ninterface ReactVegaProps {\n  dataSource: any[];\n  spec: Spec;\n  signalHandler?: {\n    [key: string]: (name: any, value: any) => void\n  }\n}\nconst ReactVega: React.FC<ReactVegaProps> = props => {\n  const { spec, dataSource, signalHandler = {} } = props\n  const container = useRef<HTMLDivElement>(null);\n  const [view, setView] = useState<Result['view']>()\n  useEffect(() => {\n    if (container.current) {\n      embed(container.current, spec).then(res => {\n        setView(res.view);\n      })\n    }\n  }, [spec])\n  useEffect(() => {\n    if (view && signalHandler) {\n      for (let key in signalHandler) {\n        view.addSignalListener('sl', signalHandler[key]);\n      }\n    }\n    return () => {\n      if (view && signalHandler) {\n        for (let key in signalHandler) {\n          view.removeSignalListener('sl', signalHandler[key]);\n        }\n      }\n    }\n  }, [view, signalHandler])\n  useEffect(() => {\n    view && view.change('dataSource', vega.changeset().remove(() => true).insert(dataSource))\n    view && view.resize();\n    view && view.runAsync();\n  }, [view, dataSource])\n  return <div ref={container} />\n}\n\nexport default ReactVega;\n","import React, { useMemo, useEffect, useState } from \"react\";\nimport { DashBoard } from \"../../service\";\nimport { DataSource, Field, FieldType } from \"../../global\";\nimport { specification } from \"visual-insights\";\nimport { useComposeState } from \"../../utils/index\";\nimport { IconButton } from \"office-ui-fabric-react\";\nimport IndicatorCard from \"./indicatorCard\";\nimport ReactVega from '../../components/react-vega';\nimport { DataField, featureVis, targetVis } from '../../queries/index';\n\nconst IndicatorCardType = \"indicator\" as const;\n\ninterface CombinedChartProps {\n  dashBoard: DashBoard;\n  dataSource: DataSource;\n  dimScores: [string, number, number, Field][];\n}\n\ninterface GlobalFilters {\n  [key: string]: any[];\n}\n\nconst CombinedChart: React.FC<CombinedChartProps> = props => {\n  const { dashBoard = [], dataSource = [], dimScores = [] } = props;\n  const [globalFilters, setGlobalFilters] = useComposeState<GlobalFilters>({});\n  const [chartStateList, setChartStateList] = useState<boolean[]>([]);\n  useEffect(() => {\n    setChartStateList(dashBoard.map(() => false));\n  }, [dashBoard]);\n  const filedDomains = useMemo(() => {\n    const fieldList = dimScores.map(f => f[0]);\n    let domainDict: {[key: string]: any[]} = {};\n    let dsLen = dataSource.length;\n    let fLen = fieldList.length;\n    for (let i = 0; i < fLen; i++) {\n      if (dimScores[i][3].type !== 'quantitative') {\n        continue;\n        // tmp\n      }\n      let fieldName = fieldList[i];\n      domainDict[fieldName] = [0, 100];\n      let min = Infinity;\n      let max = -Infinity;\n      for (let j = 0; j < dsLen; j++) {\n        min = Math.min(dataSource[j][fieldName], min)\n        max = Math.max(dataSource[j][fieldName], max)\n      }\n      domainDict[fieldName] = [min, max];\n    }\n    return domainDict;\n  }, [dataSource, dimScores])\n  const chartSpecList = useMemo(() => {\n    if (!dashBoard || !dataSource || !dimScores) {\n      return [];\n    }\n    return dashBoard.map(board => {\n      const { dimensions, measures, type } = board;\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measures.includes(field[0]);\n      });\n      let { schema } = specification(\n        fieldScores,\n        dataSource,\n        dimensions,\n        measures\n      );\n      schema.position = schema.position || [];\n      schema.color = schema.color || [];\n      schema.opacity = schema.opacity || [];\n      schema.size = schema.size || [];\n      schema.shape = schema.shape || [];\n      schema.geomType = schema.geomType || [];\n      schema.highFacets = schema.highFacets || [];\n      schema.facets = schema.facets || [];\n      return {\n        dimensions,\n        measures,\n        type,\n        schema\n      };\n    });\n  }, [dashBoard, dataSource, dimScores]);\n\n  const fieldFeatures = dimScores.map(dim => dim[3]);\n\n  const specList = useMemo<any[]>(() => {\n    return chartSpecList.map((spec, index) => {\n      const { dimensions, measures, schema, type } = spec;\n      let dataFields: DataField[] = [];\n      for (let dim of dimensions) {\n        let targetField = fieldFeatures.find(f => f.name === dim);\n\n        dataFields.push({\n          name: dim,\n          semanticType: (targetField ? targetField.type : 'nominal'),\n          type: 'dimension'\n        })\n      }\n      for (let mea of measures) {\n        let targetField = fieldFeatures.find(f => f.name === mea);\n\n        dataFields.push({\n          name: mea,\n          semanticType: (targetField ? targetField.type : 'nominal'),\n          type: 'measure'\n        })\n      }\n    \n      if (type === \"target\" && measures.length === 1) {\n        return {\n          specIndex: index,\n          type: IndicatorCardType,\n          measures: measures,\n          operator: \"sum\"\n        };\n      }\n      let vegaSpec: any = {}\n      if (type === 'target') {\n        vegaSpec = targetVis(schema, dataFields)\n      }\n\n      if (type === 'feature') {\n        vegaSpec = featureVis(schema, dataFields)\n      }\n      vegaSpec.specIndex = index\n      return vegaSpec\n    }) as any;\n  }, [chartSpecList, filedDomains]);\n\n  const signalHandler = useMemo(() => {\n    return dashBoard.map((d, index) => {\n      return {\n        sl: (name: any, values: any) => {\n          if (chartStateList[index]) {\n            setGlobalFilters(draft => {\n              if (Object.keys(values).length === 0) {\n                for (let key in draft) {\n                  // delete draft[key]\n                  draft[key] = [];\n                }\n              } else {\n                for (let key in values) {\n                  draft[key] = values[key];\n                }\n              }\n            });\n          }\n        }\n      };\n    });\n  }, [dashBoard, chartStateList, dimScores, specList]);\n\n  const vsourceList = useMemo<Array<DataSource>>(() => {\n    let ans = [];\n    const filters = Object.keys(globalFilters).map(fieldName => {\n      return {\n        fieldName: fieldName,\n        filter: globalFilters[fieldName],\n        // protentional risk\n        isRange:\n          globalFilters[fieldName].length === 2 &&\n          typeof globalFilters[fieldName][0] === \"number\" &&\n          typeof globalFilters[fieldName][1] === \"number\" &&\n          globalFilters[fieldName][0] < globalFilters[fieldName][1]\n      };\n    });\n    const ds = dataSource.filter(record => {\n      return filters.every(f => {\n        if (f.filter.length === 0) {\n          return true;\n        }\n        if (f.isRange) {\n          return (\n            record[f.fieldName] >= f.filter[0] &&\n            record[f.fieldName] <= f.filter[1]\n          );\n        } else {\n          return f.filter.includes(record[f.fieldName]);\n        }\n      });\n    });\n    for (let i = 0; i < dashBoard.length; i++) {\n      if (chartStateList[i]) {\n        ans.push(dataSource);\n        continue;\n      }\n      ans.push(ds);\n    }\n    return ans;\n  }, [\n    dashBoard,\n    globalFilters,\n    dataSource,\n    chartStateList,\n    dataSource\n  ]);\n  return (\n    <div>\n      <div>\n      {specList.filter(spec => spec.type === IndicatorCardType).map((spec, index) =>\n          <IndicatorCard\n            key={`ds-ind-chart-${index}`}\n            dataSource={vsourceList[spec.specIndex]}\n            measures={spec.measures}\n          />\n      )}\n      </div>\n      <div>\n      {specList.filter(spec => spec.type !== IndicatorCardType).map((spec, index) =>\n          <div\n            key={`ds-chart-${index}`}\n            style={{\n              display: 'inline-block',\n              padding: \"4px\",\n              margin: \"2px\",\n              height: \"380px\",\n              overflowY: \"auto\"\n            }}\n          >\n            <div\n              style={{ float: \"left\", minWidth: \"300px\", minHeight: \"300px\" }}\n            >\n              {/* <div ref={node => { rendererRef(node, spec.specIndex) }}></div> */}\n              <ReactVega\n                dataSource={vsourceList[spec.specIndex]}\n                spec={spec}\n                signalHandler={\n                  chartStateList[spec.specIndex] && (signalHandler[spec.specIndex] as any)\n                }\n              />\n            </div>\n            <div style={{ float: \"left\" }}>\n              <IconButton\n                title=\"use as filter\"\n                ariaLabel=\"use as filter\"\n                iconProps={{\n                  iconName: chartStateList[spec.specIndex] ? \"FilterSolid\" : \"Filter\"\n                }}\n                onClick={() => {\n                  setChartStateList(list => {\n                    let nextList = [...list];\n                    nextList[spec.specIndex] = !nextList[spec.specIndex];\n                    if (!nextList[spec.specIndex]) {\n                      setGlobalFilters(draft => {\n                        for (let key in draft) {\n                          draft[key] = [];\n                        }\n                      });\n                    }\n                    return nextList;\n                  });\n                }}\n              />\n            </div>\n          </div>\n      )}\n      </div>\n    </div>\n  );\n};\n\nexport default CombinedChart;\n","import React, { useState } from \"react\";\nimport { PrimaryButton, DefaultButton, Stack, Separator, ProgressIndicator } from \"office-ui-fabric-react\";\nimport { useGlobalState } from \"../../state\";\nimport CombinedChart from \"./combinedChart\";\n\nconst DashBoardPage: React.FC = props => {\n  const [state, updateState, dispatch, getters] = useGlobalState();\n  const [dashBoardIndex, setDashBoardIndex] = useState(0);\n  const {\n    subspaceList,\n    cookedDataSource,\n    cookedDimensions,\n    cookedMeasures,\n    dashBoardList\n  } = state;\n  const { dimScores } = getters;\n  return (\n    <div className=\"content-container\">\n      <div className=\"card\">\n        <PrimaryButton\n          text=\"Generate Dashboard\"\n          disabled={subspaceList.length === 0}\n          iconProps={{ iconName: \"AreaChart\" }}\n          onClick={() => {\n            dispatch(\"getDashBoard\", {\n              dataSource: cookedDataSource,\n              dimensions: cookedDimensions,\n              measures: cookedMeasures\n            });\n          }}\n        />\n        { state.loading.dashBoard && <ProgressIndicator description=\"generating dashboard\" /> }\n        <Separator>current page no: {dashBoardIndex + 1} of {dashBoardList.length}</Separator>\n        <Stack horizontal tokens={{ childrenGap: 20 }}>\n          <DefaultButton\n            text=\"Last\"\n            onClick={() => {\n              setDashBoardIndex(index => (index + dashBoardList.length - 1) % dashBoardList.length)\n            }}\n            allowDisabledFocus\n          />\n          <DefaultButton\n            text=\"Next\"\n            onClick={() => {\n              setDashBoardIndex(index => (index + 1) % dashBoardList.length)\n            }}\n            allowDisabledFocus\n          />\n        </Stack>\n        <p className=\"state-description\">\n          Double click the chart with selection to clear selection(filter).\n        </p>\n        <div\n          style={{\n            overflowX: \"auto\",\n            margin: \"1rem\",\n            border: \"1px solid #e8e8e8\"\n          }}\n        >\n          {dashBoardList[dashBoardIndex] && dashBoardList[dashBoardIndex].length > 0 && (\n            <CombinedChart\n              dataSource={cookedDataSource}\n              dashBoard={dashBoardList[dashBoardIndex]}\n              dimScores={dimScores}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoardPage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { SearchBox } from 'office-ui-fabric-react';\nimport { useGlobalState } from '../../state';\nimport Fuse, { FuseOptions } from 'fuse.js';\nimport { specification } from 'visual-insights';\nimport { ViewSpace } from '../../service';\nimport BaseChart from \"../../visBuilder/vegaBase\";\nimport styled from 'styled-components';\n\nconst VisCard = styled.div`\n  padding: 1rem;\n  overflow-x: auto;\n  margin: 1rem;\n`\n\nconst PageLinkButton = styled.a`\n  margin-right: 1rem;\n  cursor: pointer;\n  color: rgb(16, 110, 190);\n`\n\nconst PAGE_SIZE = 4;\nconst PAGE_OFFSET = 2;\n\nfunction usePageController (size: number) {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    setCurrentPage(0)\n  }, [size])\n  const maxPageNumber = Math.ceil(size / PAGE_SIZE);\n  const gotoPage = (num: number) => {\n    let fixPageNum = (num + maxPageNumber) % maxPageNumber;\n    setCurrentPage(num)\n  }\n\n  const lastPage = () => {\n    setCurrentPage(p => (p + maxPageNumber - 1) % maxPageNumber)\n  }\n  const nextPage = () => {\n    setCurrentPage(p => (p + maxPageNumber + 1) % maxPageNumber)\n  }\n  const minVisPage = Math.max(currentPage - PAGE_OFFSET, 0);\n  const maxVisPage = Math.min(currentPage + PAGE_OFFSET, maxPageNumber);\n  const itemRange = useMemo(() => {\n    return [currentPage * PAGE_SIZE, Math.min((currentPage + 1) * PAGE_SIZE, size)]\n  }, [size, currentPage])\n  const visPageRange = [...new Array(maxVisPage - minVisPage + 1)].map((n, i) => minVisPage + i)\n  return {\n    currentPage,\n    visPageRange,\n    itemRange,\n    gotoPage,\n    lastPage,\n    nextPage\n  }\n}\n\nconst SearchPage: React.FC = props => {\n  const [state, updateState, dispatch, getters] = useGlobalState();\n  const [targetViewSpaces, setTargetViewSpaces] = useState<ViewSpace[]>([]);\n  const { subspaceList, viewSpaces } = state;\n  const { dimScores } = getters;\n  useEffect(() => {\n    dispatch('getViewSpaces', {})\n  }, [subspaceList])\n  const fuse = useMemo(() => {\n    const options: FuseOptions<ViewSpace> = {\n      keys: [\n        'dimensions',\n        'measures'\n      ]\n    }\n    return new Fuse(viewSpaces, options)\n  }, [viewSpaces])\n  const searchHandler = (newValue: string) => {\n    const result: any[] = fuse.search(newValue)\n    setTargetViewSpaces(result);\n  }\n\n  const {  currentPage, visPageRange, itemRange, gotoPage, lastPage, nextPage } = usePageController(targetViewSpaces.length);\n\n  const specList = useMemo(() => {\n    return targetViewSpaces.slice(itemRange[0], itemRange[1]).map(space => {\n      const { dimensions, measures } = space;\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measures.includes(field[0]);\n      });\n      let { schema } = specification(\n        fieldScores,\n        state.cookedDataSource,\n        dimensions,\n        measures\n      );\n      return {\n        schema,\n        fieldFeatures: fieldScores.map(f => f[3]),\n        aggData: state.cookedDataSource,\n        dimensions,\n        measures\n      }\n    })\n  }, [state.cookedDataSource, targetViewSpaces, itemRange])\n  \n  return (\n    <div className=\"content-container\">\n      <div className=\"card\">\n        <SearchBox\n          placeholder=\"Search\"\n          onSearch={searchHandler}\n          underlined={true}\n        />\n        <p className=\"state-description\">{targetViewSpaces.length} results are found. current page is {currentPage + 1}</p>\n        <div>\n          <PageLinkButton onClick={lastPage}>Last Page</PageLinkButton>\n          {\n            targetViewSpaces.length > 0 && visPageRange.map(n => <PageLinkButton key={`page-btn-${n}`} onClick={() => { gotoPage(n) }}>{ n + 1 }</PageLinkButton>)\n          }\n          <PageLinkButton onClick={nextPage}>Next Page</PageLinkButton>\n        </div>\n        <div>\n          {specList.map((spec, index) => (\n            <VisCard key={`result-${index}`}>\n              <BaseChart\n                aggregator={\"sum\"}\n                defaultAggregated={true}\n                defaultStack={true}\n                dimensions={spec.dimensions}\n                measures={spec.measures}\n                dataSource={spec.aggData}\n                schema={spec.schema}\n                fieldFeatures={spec.fieldFeatures}\n              />\n            </VisCard>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchPage\n","import React, { useRef, useState } from \"react\";\nimport { Callout, ActionButton, Toggle, DirectionalHint } from \"office-ui-fabric-react\";\nimport { useGlobalState } from \"../state\";\n\nconst UserSettings: React.FC = props => {\n  const target = useRef<HTMLDivElement>(null);\n  const [show, setShow] = useState<boolean>(false);\n  const [state, updateState] = useGlobalState();\n  return (\n    <div>\n      <div ref={target}>\n        <ActionButton text=\"Preference\" iconProps={{ iconName: 'PlayerSettings' }} onClick={() => {setShow(true)}}></ActionButton>\n      </div>\n\n      {show && (\n        <Callout\n          target={target.current}\n          directionalHint={DirectionalHint.bottomLeftEdge}\n          onDismiss={() => {\n            setShow(false);\n          }}\n        >\n          <div style={{ padding: '1rem' }}>\n            <Toggle\n              label=\"use server\"\n              checked={state.useServer}\n              onText=\"On\"\n              offText=\"Off\"\n              onChange={(\n                ev: React.MouseEvent<HTMLElement>,\n                checked?: boolean\n              ) => {\n                updateState(draft => {\n                  draft.useServer = checked || false;\n                });\n              }}\n            />\n          </div>\n        </Callout>\n      )}\n    </div>\n  );\n};\n\nexport default UserSettings;\n\n","import React from \"react\";\nimport { useGlobalState, GlobalStateProvider } from \"./state\";\nimport { Pivot, PivotItem } from \"office-ui-fabric-react\";\nimport { useComposeState } from \"./utils/index\";\nimport \"./App.css\";\n\nimport Gallery from \"./pages/gallery/index\";\nimport NoteBook from \"./pages/notebook/index\";\nimport DataSourceBoard from \"./pages/dataSource/index\";\nimport DashBoardPage from './pages/dashBoard/index';\nimport SearchPage from './pages/search/index';\nimport UserSettings from './components/userSettings';\n\nconst pivotList = [\n  'DataSource',\n  'NoteBook',\n  'Explore',\n  'DashBoard',\n  'Search'\n].map((page, index) => {\n  return { title: page, itemKey: 'pivot-' + (index + 1)}\n});\n\nconst getLogoSrc = (withGlasses: boolean) => {\n  return withGlasses\n    ? \"https://ch-rath.oss-ap-northeast-1.aliyuncs.com/assets/rath-glasses.png\"\n    : \"https://ch-rath.oss-ap-northeast-1.aliyuncs.com/assets/rath.png\";\n};\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n  current: {\n    pivotKey: string;\n  };\n}\n\nfunction App() {\n  const [state, ] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    },\n    current: {\n      pivotKey: pivotList[0].itemKey\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"header-bar\">\n        <div className=\"ms-Grid-row\">\n          <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg1\">\n            <a\n              href=\"https://github.com/ObservedObserver/visual-insights\"\n              className=\"logo\"\n            >\n              <img src={ getLogoSrc(state.useServer) } alt=\"rath\" />\n            </a>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg8\">\n            <Pivot\n              selectedKey={pageStatus.current.pivotKey}\n              onLinkClick={item => {\n                item &&\n                  item.props.itemKey &&\n                  setPageStatus(draft => {\n                    draft.current.pivotKey = item.props.itemKey!;\n                  });\n              }}\n              headersOnly={true}\n            >\n              {pivotList.map(pivot => (\n                <PivotItem\n                  key={pivot.itemKey}\n                  headerText={pivot.title}\n                  itemKey={pivot.itemKey}\n                />\n              ))}\n            </Pivot>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\">\n          <div className=\"header-toolbar\">\n              <UserSettings />\n            </div>\n          </div>\n        </div>\n      </div>\n      {pageStatus.current.pivotKey === \"pivot-3\" && (\n        <Gallery\n          subspaceList={state.subspaceList}\n          dataSource={state.cookedDataSource}\n          summary={state.summary}\n        />\n      )}\n      {pageStatus.current.pivotKey === \"pivot-1\" && <DataSourceBoard onExtractInsights={() => {\n        setPageStatus(draft => {\n          draft.current.pivotKey = \"pivot-2\";\n          draft.show.insightBoard = true;\n        });\n      }\n      } />}\n      {pageStatus.current.pivotKey === \"pivot-2\" && (\n        <div className=\"content-container\">\n          <div className=\"card\">\n            <NoteBook\n              summary={state.summary}\n              subspaceList={state.subspaceList}\n              dataSource={state.cookedDataSource}\n            />\n          </div>\n        </div>\n      )}\n      {\n        pageStatus.current.pivotKey === 'pivot-4' && <DashBoardPage />\n      }\n      {\n        pageStatus.current.pivotKey === 'pivot-5' && <SearchPage />\n      }\n    </div>\n  );\n}\n\nexport default function() {\n  return (\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { initializeIcons } from '@uifabric/icons';\nimport * as serviceWorker from './serviceWorker';\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}