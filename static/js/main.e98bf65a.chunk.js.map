{"version":3,"sources":["service.ts","actions.ts","state.tsx","utils/fileParser.ts","utils/transform.ts","utils/useComposeState.tsx","components/preference.tsx","demo/vegaBase.tsx","../../visual-insights/build/esm/utils.js","../../visual-insights/build/esm/specification.js","../../visual-insights/build/esm/insights/cluster.js","../../visual-insights/build/esm/cleaner/index.js","plugins/visSummary/index.tsx","plugins/visSummary/description.tsx","pages/gallery/association/digDimension.tsx","pages/gallery/association/index.tsx","pages/gallery/index.tsx","pages/notebook/distributionChart.tsx","pages/notebook/fieldAnalysis.tsx","pages/notebook/subspaces.tsx","pages/notebook/cluster.tsx","pages/notebook/index.tsx","components/table.tsx","components/fieldConfig.tsx","pages/dataSource/clean.ts","pages/dataSource/useDataSource.tsx","utils/deepcopy.ts","pages/dataSource/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["server","getFieldsSummaryService","dataSource","fields","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","fieldSummaryList","data","Error","message","console","error","getGroupFieldsService","groupedData","newFields","combineFieldsService","dimensions","measures","operator","subspaceList","maxGroupNumber","combinedSpaces","viewSpaces","spaces","map","v","i","index","univariateSummary","state","updateState","params","filter","field","type","name","f","originSummary","fieldWithTypeList","includes","fieldName","groupedResult","newBIFields","groupedField","find","newDimensions","groupedSummary","draft","cookedDataSource","summary","origin","grouped","loading","concat","subspaceSearch","subspaceSearching","orderedDimensions","d","target","g","entropy","Infinity","sort","b","cookedDimensions","cookedMeasures","selectedDimensions","slice","Math","round","length","topK","dimensionSize","extractInsights","gallery","univariateResult","actions","setAutoFreeze","initState","currentPage","rawData","subspacePercentSize","GloalStateContext","createContext","GlobalStateProvider","children","useState","setState","stateUpdater","produce","draftState","Provider","value","actionName","useGlobalState","useContext","csvLoader","file","Promise","resolve","reject","Papa","parse","complete","results","row","record","forEach","jsonLoader","reader","FileReader","readAsText","onload","ev","onerror","transNumber","num","isNaN","Number","useComposeState","nextState","checkboxStyles","root","marginTop","aggregationList","key","text","PreferencePanel","props","show","onUpdateConfig","onClose","config","aggregator","setAggregator","defaultAggregated","setDefaultAggregated","defaultStack","setDefaultStack","useEffect","Panel","isOpen","PanelType","smallFixedFar","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","Label","Stack","verticalFill","tokens","childrenGap","padding","ComboBox","selectedKey","label","allowFreeform","autoComplete","options","onChange","e","option","Checkbox","styles","checked","isChecked","geomTypeMap","interval","line","point","density","BaseChart","schema","position","color","opacity","size","shape","geomType","facets","page","fieldFeatures","container","useRef","getFieldType","targetField","aggregatedMeasures","mea","op","as","table","aggregate","asFields","adjustField","aggField","getSpecification","log","current","offsetWidth","fieldMap","x","y","column","spec","width","values","basicSpec","mark","encoding","channel","stack","transform","selection","groupby","dim","Boolean","sliderSpec","brush","encodings","vconcat","embed","ref","memberCount","counter","Map","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","undefined","_step4","_iterator4","Symbol","iterator","next","done","member","has","set","get","err","return","entries","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","geomTypes","area","path","findBestField","fieldRankList","choosen","aestheticMapping","dimFields","visualElements","highFacets","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","priority","fieldLeft","typeIndex","channelList","dimScores","aggData","dimIndex","dimMembers","geom","turnAdjMatrix2List","matrix","edges","j","abs","parents","n","union","n1","n2","p1","p2","dropNullColumn","keepFields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","finalFields","ans","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dropNull","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","keep","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_loop","every","isFieldNumeric","toString","isNullValue","useMode","fieldNames","countMap","modeMap","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_fieldName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_counter","members","max","maxPos","newDataSource","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_record","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_fieldName2","simpleClean","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","StoryTeller","space","spaceList","isTeachingBubbleVisible","setIsTeachingBubbleVisible","sortedFieldsScores","useMemo","mostInfluencedDimension","sp","some","bestMeasure","measuresInView","min","minPos","countDiffField","join","DefaultButton","id","TeachingBubble","calloutProps","directionalHint","DirectionalHint","bottomCenter","isWide","hasCloseIcon","headline","VisDescription","similarityThrehold","topKRelatedSpace","measuresRelatedScore","measures1","measures2","meaSet","Set","meaSet1","meaSet2","meaVec1","meaVec2","score","sqrt","useDigDimension","interestedViewSpace","fieldScores","relatedSpaces","visualConfig","subDim","rankedRelatedSpaces","measureSimilarity","relatedScore","spaceFieldScores","specification","Association","digDimensionProps","onSelectView","relatedCharts","className","view","currentSpace","dimensions1","dimensions2","dim1","style","border","margin","overflow","fontSize","horizontal","IconButton","iconProps","iconName","title","Gallery","setCurrentPage","insightBoard","fieldConfig","configPanel","dataConfig","pageStatus","setPageStatus","showAssociation","setShowAssociation","setVisualConfig","setViewSpaces","dataView","setDataView","gotoPage","pageNo","clusterMeasures","correlationMatrix","then","maxEntropy","viewState","subspace","ProgressIndicator","description","marginBottom","ariaLabel","dir","allowDisabledFocus","pos","findIndex","DistributionChart","chart","fieldType","hasIndex","test","memberName","exec","groups","left","sortBy","background","height","axis","columns","minWidth","maxWidth","getIconNameByFieldType","contrastColor","FieldAnalsis","entropyRange","originEntropy","s","onRenderCompactCard","item","toFixed","distribution","onRenderExpandedCard","DetailsList","compact","items","selectionMode","SelectionMode","none","onRenderItemColumn","expandingCardProps","renderData","compactCardHeight","expandedCardHeight","fieldContent","bgColor","Icon","range","chroma","scale","domain","rgb","bgColorStr","fontColorStr","HoverCard","expandedCardOpenDelay","instantOpenOnClick","boxShadow","backgroundColor","encodeArr","arr","Subspaces","onSpaceChange","curIndex","setCurIndex","spaceChart","relationChart","measureName","measureValue","on","reverse","condition","addEventListener","datum","targetSpace","m","correlation","scheme","ClusterBoard","adjMatrix","onFocusGroup","clusterResult","edgesInMST","inCutEdge","edge","kruskalMST","treeData","nodes","group","signal","NoteBook","isAggregated","setIsAggregated","clusterState","setClusterState","setMeasuresInView","Slider","valueFormat","showValue","subspaces","step","measInView","Toggle","defaultChecked","onText","offText","DataTable","maxHeight","FieldPanel","setFields","updateFieldType","cleanMethodList","useDataSource","cleanMethod","Transform","preparedData","Cleaner","cleanData","deepcopy","DataSourceBoard","dispatch","setCleanMethod","dataSetting","fileEle","files","tmpFields","FileLoader","commandBarList","click","disabled","onExtractInsights","Callout","role","gapSpace","setInitialFocus","hidden","multiple","accept","display","CommandBar","overflowButtonProps","fontWeight","pivotList","itemKey","App","pivotKey","href","src","Pivot","onLinkClick","headersOnly","pivot","PivotItem","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e98bf65a.chunk.js","sourcesContent":["import { DataSource,  Field, FieldType, OperatorType } from './global';\nlet server = '//lobay.moe:8443';\n\nif (process.env.NODE_ENV !== 'production') {\n  console.log('using dev server');\n  server = '//localhost:8000';\n}\n\ninterface SuccessResult<T> {\n  success: true;\n  data: T;\n}\ninterface FailResult<T> {\n  success: false;\n  message: string;\n}\n\ntype Result<T> = SuccessResult<T> | FailResult<T>;\n\ninterface FieldAnalysisResponse {\n  dimScores: Array<[string, number, number, Field]>;\n  aggData: DataSource;\n}\nexport interface FieldAnalysisResult extends FieldAnalysisResponse {\n  newDimensions: string[];\n}\nexport async function fieldsAnalysisService (cleanData: DataSource, dimensions: string[], measures: string[]): Promise<FieldAnalysisResult> {\n  const res = await fetch(server + '/api/service/fieldsAnalysis', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      dataSource: cleanData,\n      dimensions,\n      measures\n    })\n  });\n  const result: Result<FieldAnalysisResponse> = await res.json();\n  if (result.success === true) {\n    const { dimScores, aggData } = result.data;\n    const newDimensions = dimScores.map(dim => dim[0]).filter(dim => !measures.includes(dim));\n    return {\n      dimScores,\n      aggData,\n      newDimensions\n    }\n  } else {\n    throw new Error('fieldsAnalysisService failed' + result.message);\n  }\n}\nexport interface View {\n  groups: string[][];\n  detail: [string[], any, number[][]];\n  score: number;\n}\n\nexport async function getInsightViewsService (aggData: DataSource, newDimensions: string[], measures: string[]): Promise<View[]> {\n  const res = await fetch(server + '/api/service/getInsightViews', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      dataSource: aggData,\n      dimensions: newDimensions,\n      measures\n    })\n  });\n  const result: Result<View[]> = await res.json();\n  if (result.success === true) {\n    const views = result.data;\n    return views;\n  } else {\n    throw new Error('getInsightView service fail' + result.message);\n  }\n}\n/**\n * statistic description for a field\n */\nexport interface FieldSummary {\n  fieldName: string;\n  entropy: number;\n  maxEntropy: number;\n  distribution: Array<{ memberName: string; count: number }>\n  type: FieldType\n}\nexport async function getFieldsSummaryService (dataSource: DataSource, fields: string[] | Field[]): Promise<FieldSummary[] | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/fieldsSummary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        fields\n      })\n    })\n    const result: Result<FieldSummary[]> = await res.json();\n    if (result.success === true) {\n      const fieldSummaryList = result.data;\n      return fieldSummaryList\n    } else {\n      throw new Error('[fields summary failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\ninterface GroupFieldsResponse {\n  groupedData: DataSource;\n  newFields: Field[];\n  fields: Field[];\n}\nexport async function getGroupFieldsService (dataSource: DataSource, fields: Field[]): Promise<GroupFieldsResponse | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/groupFields', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        fields\n      })\n    })\n    const result: Result<GroupFieldsResponse> = await res.json();\n    if (result.success === true) {\n      const { groupedData, newFields, fields } = result.data;\n      return { groupedData, newFields, fields }\n    } else {\n      throw new Error('[group fields failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport interface Subspace {\n  score: number;\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  correlationMatrix: number[][];\n}\nexport async function combineFieldsService (dataSource: DataSource, dimensions: string[], measures: string[], operator: OperatorType): Promise<Subspace[] | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/combineFields', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        dimensions,\n        measures,\n        operator\n      })\n    })\n    const result: Result<Subspace[]> = await res.json();\n    if (result.success === true) {\n      const subspaceList = result.data;\n      return subspaceList\n    } else {\n      throw new Error('[combine fields failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport interface ViewCombinedSpace {\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  matrix: number[][];\n}\n\nexport interface ViewSpace {\n  index: number;\n  dimensions: string[];\n  measures: string[];\n  score: number;\n}\n\nexport async function clusterMeasures (maxGroupNumber: number, combinedSpaces: ViewCombinedSpace[]): Promise<ViewSpace[]> {\n  let viewSpaces: ViewSpace[] = [];\n  try {\n    const res = await fetch(server + '/api/service/clusterMeasures', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        maxGroupNumber,\n        spaces: combinedSpaces\n      })\n    });\n    const result: Result<ViewSpace[]> = await res.json();\n    if (result.success === true) {\n      viewSpaces = result.data.map((v, i) => {\n        return {\n          ...v,\n          index: i\n        }\n      });\n    } else {\n      throw new Error('[cluster measures]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n  return viewSpaces;\n}","import { DataSource, BIField, Field, OperatorType } from \"./global\";\nimport {\n  getFieldsSummaryService,\n  FieldSummary,\n  getGroupFieldsService,\n  combineFieldsService,\n  clusterMeasures,\n  Subspace\n} from \"./service\";\nimport { GlobalState, StateUpdater } from './state';\n\n\n\ntype Action<T> = (state: GlobalState, updateState: (updater:StateUpdater<GlobalState>) => void, params: T) => any;\n\n\nconst univariateSummary: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  const dimensions = fields\n    .filter(field => field.type === \"dimension\")\n    .map(field => field.name);\n  const measures = fields\n    .filter(field => field.type === \"measure\")\n    .map(field => field.name);\n  // updateState(draft => { draft.loading.univariateSummary = true })\n  try {\n    /**\n     * get summary of the orignal dataset(fields without grouped)\n     */\n    const originSummary = await getFieldsSummaryService(\n      dataSource,\n      fields.map(f => f.name)\n    );\n    // todo only group dimension.\n    let fieldWithTypeList: Field[] = originSummary\n      ? originSummary\n          .filter(f => dimensions.includes(f.fieldName))\n          .map(f => {\n            return {\n              name: f.fieldName,\n              type: f.type\n            };\n          })\n      : [];\n    /**\n     * bug:\n     * should not group measures!!!\n     */\n    const groupedResult = await getGroupFieldsService(\n      dataSource,\n      fieldWithTypeList\n    );\n    const { groupedData, newFields } = groupedResult\n      ? groupedResult\n      : { groupedData: dataSource, newFields: fieldWithTypeList };\n    /**\n     * `newBIFields` shares the same length (size) with fields.\n     * It repalces some of the fields with high entropy with a grouped new field.\n     * newBIFields does not contain field before grouped.\n     */\n    const newBIFields: BIField[] = fields.map(field => {\n      let groupedField = newFields.find(\n        f => f.name === field.name + \"(group)\"\n      );\n      return {\n        name: groupedField ? groupedField.name : field.name,\n        type: field.type\n      };\n    });\n    const newDimensions: string[] = newBIFields\n      .filter(f => f.type === \"dimension\")\n      .map(f => f.name);\n\n    /**\n     * groupedSummary only contains newFields generated during `groupFieldsService`.\n     */\n    const groupedSummary = await getFieldsSummaryService(\n      groupedData,\n      newFields\n    );\n    \n    updateState(draft => {\n      draft.cookedDataSource = groupedData;\n      draft.summary = {\n        origin: originSummary || [],\n        grouped: groupedSummary || []\n      }\n      draft.loading.univariateSummary = false;\n    });\n    // setFields(newBIFields);\n    // tmp solutions\n    let summary = (groupedSummary || []).concat(originSummary || []);\n    return {\n      groupedData,\n      summary,\n      newDimensions,\n      measures\n    }\n    // await SubspaceSeach(groupedData, summary, newDimensions, measures, \"sum\");\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.univariateSummary = false;\n    });\n  }\n}\n\n\n\ninterface SubspaceSeachParams {\n  groupedData: DataSource;\n  summary: FieldSummary[];\n  dimensions: string[];\n  measures: string[];\n  operator: OperatorType\n}\nconst subspaceSearch: Action<SubspaceSeachParams> = async (state, updateState, params) => {\n  const { groupedData: dataSource, summary, dimensions, measures, operator } = params;\n  updateState(draft => {\n    draft.loading.subspaceSearching = true;\n  });\n  let orderedDimensions: Array<{ name: string; entropy: number }> = [];\n  orderedDimensions = dimensions.map(d => {\n    let target = summary.find(g => g.fieldName === d);\n    return {\n      name: d,\n      entropy: target ? target.entropy : Infinity\n    };\n  });\n\n  orderedDimensions.sort((a, b) => a.entropy - b.entropy);\n  updateState(draft => {\n    draft.cookedDimensions = orderedDimensions.map(d => d.name);\n    draft.cookedMeasures = measures;\n  });\n  const selectedDimensions = orderedDimensions\n    .map(d => d.name)\n    .slice(\n      0,\n      Math.round(orderedDimensions.length * state.topK.dimensionSize)\n    );\n  try {\n    const subspaceList = await combineFieldsService(\n      dataSource,\n      selectedDimensions,\n      measures,\n      operator\n    );\n    if (subspaceList) {\n      updateState(draft => {\n        draft.subspaceList = subspaceList;\n      });\n    }\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  }\n}\n\nconst extractInsights: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  updateState(draft => {\n    draft.loading.gallery = true\n  })\n  try {\n    const univariateResult = await univariateSummary(state, updateState, {\n      dataSource, fields\n    });\n      if (univariateResult) {\n        const {\n          groupedData,\n          summary,\n          newDimensions,\n          measures\n        } = univariateResult;\n        await subspaceSearch(state, updateState, {\n          groupedData, summary, dimensions: newDimensions, measures, operator: \"sum\"\n        });\n      }\n  } catch (error) {\n  } finally {\n    updateState(draft => {\n      draft.loading.gallery = false\n      draft.loading.gallery = false\n    })\n  }\n}\nconst actions = {\n  univariateSummary,\n  subspaceSearch,\n  extractInsights\n}\nexport type Actions =  typeof actions\n\ntype valueof<T> = T[keyof T]\n\ntype Foo = Parameters<typeof subspaceSearch> // ReturnType\nexport type Test = valueof<{  [key in keyof Actions]: {\n  name: key,\n  params: Parameters<Actions[key]>[2]\n}}>\n\nexport default actions;\n","import produce, { Draft, setAutoFreeze } from 'immer';\nimport React, { useState, useMemo, createContext, useContext } from 'react';\nimport { DataSource, BIField } from './global';\nimport { Subspace, FieldSummary, ViewSpace } from './service';\nimport actions, { Test, Actions } from './actions';\n\nsetAutoFreeze(false)\n\nexport interface GlobalState {\n  /**\n   * `currentPage` is the current page number of visualization in explore board.\n   */\n  currentPage: number;\n  /**\n   * raw data is fetched and parsed data or uploaded data without any other changes.\n   * computed value `dataSource` will be calculated \n   */\n  rawData: DataSource;\n  /**\n   * fields contains fields with `dimension` or `measure` type.\n   * currently, this kind of type is not computed property unlike 'quantitative', 'nominal'...\n   * This is defined by user's purpose or domain knowledge.\n   */\n  fields: BIField[];\n  /**\n   * dataSource been cleaned and grouped which is readly for exploration.\n   */\n  cookedDataSource: DataSource;\n  cookedDimensions: string[];\n  cookedMeasures: string[];\n  /**\n   * subspaceList is ordered list by it score.\n   */\n  // subspaceList: Subspace[]\n  /**\n   * loading status for some service\n   * todo: \n   * manage the loading status in pages intead of globally.\n   */\n  loading: {\n    univariateSummary: boolean;\n    subspaceSearching: boolean;\n    gallery: boolean;\n  };\n  \n  topK: {\n    /**\n     * top k percent subspace it will fetch.\n     */\n    subspacePercentSize: number;\n    dimensionSize: number;\n  }\n  maxGroupNumber: number;\n  subspaceList: Subspace[];\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n  viewSpaces: ViewSpace[]\n}\n\ninterface GlobalComputed {\n  /**\n   * `dataSource` is computed data based on fields' property(dimension or measure).\n   * sometimes, uploaded data contains contains some measure field but they are parsed into string value, which is raw data.\n   * dataSource transform these fields into what they should be for future computation.\n   * This is usually happened when a csv file is uploaded.\n   */\n  dataSource: DataSource;\n}\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n\n// function createStore<S>(initState: S) {\n//   const [state, setState] = useState<S>(initState)\n\n//   return function useGlobalState(): [S, (stateUpdater: StateUpdater<S>) => void] {\n//     const updateState = (stateUpdater: StateUpdater<S>) => {\n//       const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n//       setState(nextState)\n//     }\n//     return [state, updateState]\n//   }\n// }\n\nconst initState: GlobalState = {\n  currentPage: 0,\n  fields: [],\n  rawData: [],\n  cookedDataSource: [],\n  cookedDimensions: [],\n  cookedMeasures: [],\n  loading: {\n    univariateSummary: false,\n    subspaceSearching: false,\n    gallery: false\n  },\n  topK: {\n    subspacePercentSize: 0.3,\n    dimensionSize: 0.72\n  },\n  maxGroupNumber: 4,\n  subspaceList: [],\n  summary: {\n    origin: [],\n    grouped: []\n  },\n  viewSpaces: []\n};\ntype Dispatch<T> = (actionName: string, params: T) => void;\ntype valueof<T> = T[keyof T]\nconst GloalStateContext = createContext<[GlobalState, (updater:StateUpdater<GlobalState>) => void, <P extends Test>(actionName: P['name'], params: P['params']) => void]>(null!)\n\nexport function GlobalStateProvider({ children }: { children: React.ReactNode }) {\n  const [state, setState] = useState<GlobalState>(initState)\n\n  const updateState = (stateUpdater: StateUpdater<GlobalState>) => {\n    setState(state => {\n      const nextState = produce<GlobalState>(state, draftState => stateUpdater(draftState))\n      return nextState;\n    })\n  }\n\n  const dispatch: <P extends Test>(actionName: P['name'], params: P['params']) => void = (actionName, params) => {\n    if (typeof actions[actionName] === 'function') {\n\n      // todo: fix the any type\n      \n      actions[actionName](state, updateState, params as any);\n      // actions['subspaceSearch'](state, updateState, params)\n    }\n  }\n\n\n\n  return (\n    <GloalStateContext.Provider value={[state, updateState, dispatch]}>\n      {children}\n    </GloalStateContext.Provider>\n  )\n}\nexport function useGlobalState() {\n  return useContext(GloalStateContext)\n}","import { Record, DataSource } from '../global';\nimport Papa from 'papaparse';\n\nexport function csvLoader (file: File) {\n  return new Promise<DataSource>((resolve, reject) => {\n    Papa.parse(file, {\n      complete (results, file) {\n        let data: string[][] = results.data;\n        let fields: string[] = data[0];\n        let rawData = data.slice(1).map(row => {\n          let record: Record = {};\n          fields.forEach((field, index) => {\n            record[field] = row[index]\n          })\n          return record\n        })\n        resolve(rawData)\n      },\n      error (error, file) {\n        reject(error)\n      }\n    })\n  })\n}\n\nexport function jsonLoader (file: File): Promise<DataSource> {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = (ev) => {\n      if (ev.target) {\n        try {\n          const rawData: DataSource = JSON.parse(ev.target.result as string);\n          resolve(rawData);\n        } catch (error) {\n          reject(error)\n        }\n      } else {\n        reject(ev)\n      }\n    }\n    reader.onerror = reject\n  })\n}","export function transNumber(num: any): number | null {\n  if (isNaN(num)) {\n    return null\n  }\n  return Number(num)\n}","import React, { useState } from 'react';\nimport produce, { Draft } from 'immer';\n/**\n * @param S type of the composed state\n */\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n/**\n * \n * @param initState\n * useComposeState helps you manage several state together, provided with immutable state change api\n * \n * example:\n * ```js\n * const [state, setState] = useComposeState({foo: 12, bar: { foo: 20}})\n * setState(draft => {\n *  draft.bar.foo = 100;\n * })\n * ```\n */\nexport default function useComposeState<S>(initState: S): [S, (stateUpdater: StateUpdater<S>) => void] {\n  const [state, setState] = useState<S>(initState)\n  const updateState = (stateUpdater: StateUpdater<S>) => {\n    const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n    setState(nextState)\n  }\n  return [state, updateState]\n}","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Stack, Checkbox, Panel, PanelType, ComboBox, Label } from 'office-ui-fabric-react';\nimport { Aggregator } from '../global';\nconst checkboxStyles = () => {\n  return {\n    root: {\n      marginTop: '10px'\n    }\n  };\n}\n\n// todo: import aggregators list from cube-core\nconst aggregationList: Array<{ key: Aggregator; text: string }> = [\n  { key: 'sum', text: 'Sum' },\n  { key: 'count', text: 'Count' },\n  { key: 'mean', text: 'Mean' }\n]\nexport interface PreferencePanelConfig {\n  aggregator: Aggregator;\n  defaultAggregated: boolean;\n  defaultStack: boolean\n}\nexport interface PreferencePanelProps {\n  show: boolean;\n  onUpdateConfig: (props: PreferencePanelConfig) => void;\n  onClose: () => void;\n  config: PreferencePanelConfig\n}\n\nconst PreferencePanel: React.FC<PreferencePanelProps> = (props) => {\n  const {\n    show = false,\n    onUpdateConfig,\n    onClose,\n    config\n  } = props;\n  \n  const [aggregator, setAggregator] = useState<Aggregator>('sum');\n  const [defaultAggregated, setDefaultAggregated] = useState(true);\n  const [defaultStack, setDefaultStack] = useState(true);\n  \n  useEffect(() => {\n    const { aggregator, defaultAggregated, defaultStack } = config;\n    setAggregator(aggregator);\n    setDefaultAggregated(defaultAggregated);\n    setDefaultStack(defaultStack);\n  }, [config, show])\n  \n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig({ aggregator, defaultAggregated, defaultStack }) }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Preference\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <Label>Preference</Label>\n    <Stack verticalFill tokens={{ childrenGap: 50, padding: 6}}>\n      <ComboBox\n        selectedKey={aggregator}\n        label=\"Aggregator\"\n        allowFreeform={true}\n        autoComplete=\"on\"\n        options={aggregationList}\n        onChange={(e, option) => {option && setAggregator(option.key as Aggregator)}}\n      />\n      <Checkbox styles={checkboxStyles} label=\"measurement aggregation\" checked={defaultAggregated} onChange={(e, isChecked) => {setDefaultAggregated(isChecked || false)}} />\n      <Checkbox styles={checkboxStyles} label=\"measurement stack\" checked={defaultStack} onChange={(e, isChecked) => {setDefaultStack(isChecked || false)}} />\n    </Stack>\n  </Panel>\n}\n\nexport default PreferencePanel;","import React, { useEffect, useRef } from 'react';\nimport aggregate from 'cube-core';\nimport embed from 'vega-embed';\nimport { DataSource, Field, FieldType } from '../global'\nconst geomTypeMap: {[key: string]: any} = {\n  interval: 'bar',\n  line: 'line',\n  point: 'point',\n  density: 'rect'\n}\nexport interface Specification {\n  position?: string[];\n  color?: string[];\n  opacity?: string[];\n  size?: string[];\n  shape?: string[];\n  geomType?: string[];\n  facets?: string[];\n  page?: string[];\n  filter?: string[]\n}\ninterface BaseChartProps {\n  defaultAggregated: boolean;\n  defaultStack: boolean;\n  aggregator: 'sum' | 'mean' | 'count';\n  dataSource: DataSource;\n  dimensions: string[];\n  measures: string[];\n  fieldFeatures: Field[];\n  schema: Specification;\n}\n\nconst BaseChart: React.FC<BaseChartProps> = (props) => {\n  const {\n    defaultAggregated,\n    defaultStack,\n    aggregator,\n    dataSource = [],\n    dimensions = [],\n    measures = [],\n    schema: {\n      position = [],\n      color = [],\n      opacity = [],\n      size = [],\n      shape = [],\n      geomType = [],\n      facets = [],\n      page = [],\n      filter = []\n    },\n    fieldFeatures = []\n  } = props;\n\n  const container = useRef<HTMLDivElement>(null);\n\n  function getFieldType (field: string): FieldType {\n    let targetField = fieldFeatures.find(f => f.name === field);\n    return targetField ? targetField.type : 'nominal';\n  }\n\n  const aggregatedMeasures = measures.map(mea => {\n    return {\n      op: aggregator,\n      field: mea,\n      as: `${mea}_${aggregator}`\n    }\n  })\n  let table = defaultAggregated ? aggregate({ dataSource, dimensions, measures, operator: aggregator, asFields: aggregatedMeasures.map(mea => mea.as)}) : dataSource;\n  function adjustField (fieldName: string): string {\n    if (defaultAggregated && measures.includes(fieldName)) {\n      let aggField = aggregatedMeasures.find(mea => {\n        return mea.field === fieldName;\n      });\n      return aggField ? aggField.as : fieldName;\n    }\n    return fieldName;\n  }\n  // todo for slider\n  // function getDomain (field) {\n  //   let fieldType = fieldFeatures.find(f => f.name === field).type;\n  //   let values = table.map(row => row[field]);\n  //   if (fieldType === 'quantitative') {\n  //     let min = Math.min(0, ...values)\n  //     let max = Math.max(...values)\n  //     return [min, max]\n  //   }\n  //   return [...new Set(values)];\n  // }\n  function getSpecification () {\n    console.log( container.current && container.current.offsetWidth)\n    let chartWidth = 600; //container.current ? container.current.offsetWidth * 0.8 : 600;\n    const fieldMap: any = {\n      x: position[0],\n      y: position[1],\n      color: color[0],\n      size: size[0],\n      opacity: opacity[0],\n      row: facets[0],\n      column: facets[1]\n    }\n    let spec: any = {\n      width: chartWidth,\n      data: {\n        values: table\n      }\n    }\n    let basicSpec: any = {\n      width: chartWidth,\n      mark: (geomType[0] && geomTypeMap[geomType[0]]) ? geomTypeMap[geomType[0]] : geomType[0],\n      encoding: {}\n    };\n    for (let channel in fieldMap) {\n      if (fieldMap[channel]) {\n        basicSpec.encoding[channel] = {\n          field: adjustField(fieldMap[channel]),\n          type: getFieldType(fieldMap[channel])\n        }\n        if (['x', 'y'].includes(channel) && getFieldType(fieldMap[channel]) === 'quantitative' && !defaultStack) {\n          basicSpec.encoding[channel].stack = null;\n        }\n      }\n    }\n    if (!defaultStack && opacity.length === 0) {\n      basicSpec.encoding.opacity = { value: 0.7 }\n    }\n    if (page.length === 0) {\n      spec = {\n        ...spec,\n        ...basicSpec\n      }\n    } else if (page.length > 0) {\n      basicSpec.transform = [\n        {filter: {selection: 'brush'}},\n        defaultAggregated ? {\n          aggregate: aggregatedMeasures,\n          groupby: dimensions.filter(dim => dim !== page[0])\n        } : null\n      ].filter(Boolean);\n      let sliderSpec = {\n        width: chartWidth,\n        mark: 'tick',\n        selection: { brush: { encodings: ['x'], type: 'interval'}},\n        encoding: {\n          x: { field: page[0], type: getFieldType(page[0]) }\n        }\n      }\n      spec.vconcat = [basicSpec, sliderSpec];\n    }\n    return spec;\n  }\n  useEffect(() => {\n    if (container.current !== null) {\n      if (position.length > 0 && geomType.length > 0) {\n        let spec = getSpecification()\n        // console.log(spec)\n        embed(container.current, spec);\n      }\n    }\n  })\n  return <div ref={container}></div>\n  \n}\n\nexport default BaseChart;","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar JOIN_SYMBOL = '_';\nvar MAGIC_NUMBER = 5;\n\nfunction deepcopy(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nfunction isFieldCategory(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'string' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldContinous(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'number' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldNumeric(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldTime(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(Date.parse(record[fieldName])) && typeof record[fieldName] === 'string' && /[0-9]{0,4}-[0-9]{0,2}(-[0-9]{0,2})?/.test(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction aggregate(_ref) {\n  var dataSource = _ref.dataSource,\n      fields = _ref.fields,\n      bys = _ref.bys,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'sum' : _ref$method;\n  var tmp = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = bys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var by = _step.value;\n      var map = new Map();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var record = _step2.value;\n          var key = JSON.stringify(fields.map(function (field) {\n            return record[field];\n          }));\n\n          if (!map.has(key)) {\n            map.set(key, 0);\n          }\n\n          map.set(key, map.get(key) + record[by]);\n        };\n\n        for (var _iterator2 = dataSource[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref4 = _step3.value;\n\n          var _ref3 = _slicedToArray(_ref4, 2);\n\n          var key = _ref3[0];\n          var value = _ref3[1];\n\n          var row = _defineProperty({\n            index: key\n          }, by, value);\n\n          var dims = JSON.parse(key);\n\n          for (var i = 0; i < fields.length; i++) {\n            row[fields[i]] = dims[i];\n          }\n\n          tmp.push(row);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var ans = new Map();\n\n  for (var _i = 0, _tmp = tmp; _i < _tmp.length; _i++) {\n    var record = _tmp[_i];\n\n    if (!ans.has(record.index)) {\n      ans.set(record.index, {});\n    }\n\n    ans.set(record.index, _objectSpread({}, ans.get(record.index), {}, record));\n  }\n\n  return _toConsumableArray(ans.values());\n}\n\nfunction memberCount(dataSource, field) {\n  var counter = new Map();\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = dataSource[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var row = _step4.value;\n      var member = row[field];\n\n      if (!counter.has(member)) {\n        counter.set(member, 0);\n      }\n\n      counter.set(member, counter.get(member) + 1);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return _toConsumableArray(counter.entries());\n}\n\nfunction groupContinousField(_ref5) {\n  var dataSource = _ref5.dataSource,\n      field = _ref5.field,\n      _ref5$newField = _ref5.newField,\n      newField = _ref5$newField === void 0 ? \"\".concat(field, \"(con-group)\") : _ref5$newField,\n      groupNumber = _ref5.groupNumber;\n  // const members = memberCount(dataSource, field);\n  // todo: outlier detection\n  var values = dataSource.map(function (item) {\n    return item[field];\n  });\n  var max = Math.max.apply(Math, _toConsumableArray(values)); // Number.EPSILON * ;\n\n  var min = Math.min.apply(Math, _toConsumableArray(values));\n  var segWidth = (max - min) / groupNumber;\n  var ranges = [];\n\n  for (var i = 0; i < groupNumber; i++) {\n    var left = min + i * segWidth;\n    var right = min + (i + 1) * segWidth;\n    ranges.push([left, right]);\n  }\n\n  ranges[0][0] = -Infinity;\n  ranges[ranges.length - 1][1] = Infinity;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    var _loop2 = function _loop2() {\n      var record = _step5.value;\n      var range = ranges.find(function (r) {\n        return r[0] <= record[field] && record[field] < r[1];\n      });\n\n      if (typeof range !== 'undefined') {\n        record[newField] = \"[\".concat(range[0], \", \").concat(range[1], \")\");\n      } else {\n        record[newField] = 'null';\n      }\n    };\n\n    for (var _iterator5 = dataSource[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      _loop2();\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return dataSource;\n}\n\nfunction groupCategoryField(_ref6) {\n  var dataSource = _ref6.dataSource,\n      field = _ref6.field,\n      _ref6$newField = _ref6.newField,\n      newField = _ref6$newField === void 0 ? \"\".concat(field, \"(cat-group)\") : _ref6$newField,\n      groupNumber = _ref6.groupNumber;\n  // auto category should obey Power law distrubution.\n  var members = memberCount(dataSource, field);\n  members.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var sum = members.map(function (v) {\n    return v[1];\n  });\n  groupNumber = members.length;\n\n  for (var i = sum.length - 2; i >= 0; i--) {\n    sum[i] = sum[i + 1] + sum[i];\n  }\n\n  for (var _i2 = 0; _i2 < members.length - 2; _i2++) {\n    // strict mode\n    // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n    if (members[_i2][1] * MAGIC_NUMBER >= sum[_i2 + 1] && members[_i2 + 1][1] / MAGIC_NUMBER < sum[_i2 + 2]) {\n      groupNumber = _i2 + 2;\n      break;\n    }\n  } // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n\n\n  if (groupNumber === members.length) {\n    return dataSource.map(function (record) {\n      return _objectSpread({}, record, _defineProperty({}, newField, record[field]));\n    });\n  }\n\n  var set = new Set();\n\n  for (var _i3 = groupNumber - 1; _i3 < members.length; _i3++) {\n    set.add(members[_i3][0]);\n  }\n\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = dataSource[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var record = _step6.value;\n\n      if (set.has(record[field])) {\n        record[newField] = 'others';\n      } else {\n        record[newField] = record[field];\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return dataSource;\n}\n\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL };","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { // isFieldCategory,\n// isFieldContinous,\nmemberCount } from './utils';\n\nfunction getVisualElements() {\n  return {\n    position: 2,\n    color: 1,\n    size: 1,\n    shape: 1,\n    opacity: 1,\n    facets: 2,\n    page: 1,\n    filter: 1,\n    highFacets: Infinity\n  };\n}\n\nvar geomTypes = {\n  interval: [0, 20],\n  line: [21, Infinity],\n  area: [21, Infinity],\n  point: [0, 10000000],\n  path: [0, 100],\n  density: [1001, Infinity]\n};\n\nfunction findBestField(type, fieldRankList) {\n  for (var i = fieldRankList.length - 1; i >= 0; i--) {\n    if (fieldRankList[i].type === type && !fieldRankList[i].choosen) {\n      return fieldRankList[i];\n    }\n  }\n\n  return false;\n}\n/**\n *\n * @param dimFields ranked dimension by entropy. asc\n * todo: not clear enough implementation for using asc and desc\n */\n\n\nfunction aestheticMapping(dimFields) {\n  var spec = {};\n  var visualElements = getVisualElements();\n  var fieldRankList = dimFields.map(function (field) {\n    return _objectSpread({}, field, {\n      choosen: false\n    });\n  });\n  var priority = [['quantitative', ['position', 'size', 'opacity', 'color', 'page', 'filter', 'hightFacets']], ['ordinal', ['position', 'opacity', 'color', 'facets', 'size', 'page', 'filter', 'highFacets']], ['nominal', ['position', 'color', 'facets', 'shape', 'page', 'filter', 'hightFacets']], ['temporal', ['position', 'page', 'filter']]];\n  var fieldLeft = fieldRankList.length;\n\n  for (var typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n    var type = priority[typeIndex][0];\n    var channelList = priority[typeIndex][1];\n\n    for (var i = 0; i < channelList.length && fieldLeft > 0; i++) {\n      var channel = channelList[i];\n      var field = void 0;\n\n      while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n        if (typeof spec[channel] === 'undefined') {\n          spec[channel] = [];\n        }\n\n        spec[channel].push(field.name);\n        visualElements[channel]--;\n        fieldLeft--;\n        field.choosen = true;\n      }\n    }\n  }\n\n  return spec;\n} // todo:\n// don't use dimScores: FieldImpurity.\n// it's a structure with redundency design.\n\n\nfunction specification(dimScores, aggData, dimensions, measures) {\n  var rankedFields = dimScores.sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (dim) {\n    return dim[3];\n  });\n  var spec = aestheticMapping(rankedFields); // todo: design a better rule for choosing geom type.\n\n  if (spec.position.length === 2) {\n    if (dimensions.includes(spec.position[0]) && measures.includes(spec.position[1]) || dimensions.includes(spec.position[1]) && measures.includes(spec.position[0])) {\n      var dimIndex = dimensions.includes(spec.position[0]) ? 0 : 1;\n      var dim = spec.position[dimIndex];\n      var mea = spec.position[(dimIndex + 1) % 2];\n      spec.position = [dim, mea];\n      var dimMembers = memberCount(aggData, dim);\n      spec.geomType = ['interval', 'line', 'area'].filter(function (geom) {\n        return dimMembers.length >= geomTypes[geom][0] && dimMembers.length <= geomTypes[geom][1];\n      });\n      var x = dimScores.find(function (dim) {\n        return dim[0] === spec.position[0];\n      })[3];\n      var y = dimScores.find(function (dim) {\n        return dim[0] === spec.position[1];\n      })[3];\n\n      if (x.type === 'nominal' || y.type === 'nominal') {\n        spec.geomType = ['interval'];\n      }\n    } else {\n      // ['point', 'path', 'heatmap']\n      spec.geomType = ['point', 'density'].filter(function (geom) {\n        return aggData.length >= geomTypes[geom][0] && aggData.length <= geomTypes[geom][1];\n      });\n    }\n  }\n\n  return {\n    schema: spec,\n    aggData: aggData\n  };\n}\n\nexport default specification;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n  // only for the special matrix here(corelational matrix)\n  var edges = [];\n\n  for (var i = 0; i < matrix.length; i++) {\n    for (var j = i + 1; j < matrix[i].length; j++) {\n      edges.push([[i, j], Math.abs(matrix[i][j])]);\n    }\n  }\n\n  return edges;\n}\n\nfunction find(parents, n) {\n  return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\n\nfunction union(parents, n1, n2) {\n  var p1 = find(parents, n1);\n  var p2 = find(parents, n2);\n  parents[p1] = p2; // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n  // may check and prove whether it's necessary.\n\n  find(parents, n1);\n  find(parents, n2);\n}\n\nfunction kruskal(_ref) {\n  var matrix = _ref.matrix,\n      groupMaxSize = _ref.groupMaxSize;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = edges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var edge = _step.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i = 0; _i < parents.length; _i++) {\n        parents[_i] = find(parents, _i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size <= groupMaxSize) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n\nfunction kruskalMST(matrix) {\n  var maxGroupNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n\n  var groups = _toConsumableArray(parents);\n\n  var inCutEdge = false;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = edges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var edge = _step2.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], inCutEdge]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = find(parents, i);\n      }\n\n      var set = new Set(parents); // TODO:\n      // + use kruskalMST instead of kruskal.\n\n      if (set.size <= maxGroupNumber) {\n        inCutEdge = true;\n      } else {\n        groups = _toConsumableArray(parents);\n      }\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: groups\n  };\n}\n\nfunction cluster(_ref2) {\n  var matrix = _ref2.matrix,\n      measures = _ref2.measures,\n      _ref2$method = _ref2.method,\n      method = _ref2$method === void 0 ? 'kruskal' : _ref2$method,\n      _ref2$groupMaxSize = _ref2.groupMaxSize,\n      groupMaxSize = _ref2$groupMaxSize === void 0 ? 4 : _ref2$groupMaxSize;\n  var groups = kruskal({\n    matrix: matrix,\n    groupMaxSize: groupMaxSize\n  });\n  var ans = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = groups.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var meas = _step3.value;\n      ans.push(meas.map(function (meaIndex) {\n        return measures[meaIndex];\n      }));\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return ans;\n}\n\nexport default cluster;\nexport { kruskalMST };","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { deepcopy, isFieldNumeric, memberCount } from '../utils';\n\nfunction dropNullColumn(dataSource, fields) {\n  var keepFields = fields.map(function () {\n    return false;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = dataSource[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var record = _step.value;\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n\n        if (typeof record[field] !== 'undefined' && record[field] !== '' && record[field] !== null) {\n          keepFields[i] = true;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var finalFields = fields.filter(function (field, index) {\n    return keepFields[index];\n  });\n  return {\n    fields: finalFields,\n    dataSource: dataSource.map(function (record) {\n      var ans = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = finalFields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var field = _step2.value;\n          ans[field] = record[field];\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return ans;\n    })\n  };\n}\n\nfunction dropNull(dataSource, dimensions, measures) {\n  var data = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = dataSource[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var record = _step3.value;\n      var keep = true;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = dimensions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var dim = _step5.value;\n\n          if (typeof record[dim] === 'undefined' || record[dim] === '' || record[dim] === null) {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = measures[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var mea = _step6.value;\n\n          if (typeof record[mea] !== 'number') {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (keep) {\n        data.push(record);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var dim = _step4.value;\n\n      if (isFieldNumeric(data, dim)) {\n        var members = memberCount(data, dim);\n\n        if (members.length > 20) {\n          data.forEach(function (record) {\n            record[dim] = Number(record[dim]) || 0;\n          });\n        } else {\n          data.forEach(function (record) {\n            record[dim] = (Number(record[dim]) || 0).toString();\n          });\n        }\n      }\n    };\n\n    for (var _iterator4 = dimensions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isNullValue(value) {\n  return ['', null, undefined].includes(value);\n}\n/**\n * use mode of one field to replace its null value\n * @param dataSource\n * @param fieldNames name list of fields you want to clean with useMode function.\n * problem: some field may regard the null value as the most common value... sad : (.\n * I am dead.\n */\n\n\nfunction useMode(dataSource, fieldNames) {\n  /**\n   * map to count each member's times of apperance in fields.\n   */\n  var countMap = new Map();\n  /**\n   * map to get the mode member of each field.\n   */\n\n  var modeMap = new Map();\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = fieldNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var fieldName = _step7.value;\n      countMap.set(fieldName, new Map());\n      modeMap.set(fieldName, 0);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = dataSource[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var record = _step8.value;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = fieldNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _fieldName = _step11.value;\n          var counter = countMap.get(_fieldName);\n\n          if (!isNullValue(record[_fieldName])) {\n            if (!counter.has(record[_fieldName])) {\n              counter.set(record[_fieldName], 0);\n            }\n\n            counter.set(record[_fieldName], counter.get(record[_fieldName]) + 1);\n          }\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = countMap.keys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var key = _step9.value;\n\n      var _counter = countMap.get(key);\n\n      var members = _toConsumableArray(_counter.entries());\n\n      var max = 0;\n      var maxPos = 0;\n\n      for (var i = 0; i < members.length; i++) {\n        var member = members[i];\n\n        if (member[1] > max) {\n          max = member[1];\n          maxPos = i;\n        }\n      }\n\n      modeMap.set(key, members[maxPos][0]);\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = newDataSource[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _record = _step10.value;\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = fieldNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var _fieldName2 = _step12.value;\n\n          if (isNullValue(_record[_fieldName2])) {\n            _record[_fieldName2] = modeMap.get(_fieldName2);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nfunction simpleClean(dataSource, dimensions, measures) {\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = dataSource[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var record = _step13.value;\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = dimensions[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var dim = _step14.value;\n\n          if (isNullValue(record[dim])) {\n            record[dim] = 'null';\n          }\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = measures[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var mea = _step15.value;\n\n          if (isNullValue(record[mea])) {\n            record[mea] = 0;\n          }\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nexport { simpleClean, dropNull, useMode, dropNullColumn };","import React, { useMemo, useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace, FieldSummary } from '../../service';\nimport { DefaultButton, TeachingBubble, DirectionalHint } from 'office-ui-fabric-react';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../demo/vegaBase';\n\ninterface StoryTellerProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst StoryTeller: React.FC<StoryTellerProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n  const [isTeachingBubbleVisible, setIsTeachingBubbleVisible] = useState(false);\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <div>\n      <DefaultButton id=\"vis-summary\" text=\"Summary\" onClick={() => { setIsTeachingBubbleVisible(true) }} />\n      {isTeachingBubbleVisible ? (\n          <div>\n            <TeachingBubble\n              calloutProps={{ directionalHint: DirectionalHint.bottomCenter }}\n              isWide={true}\n              hasCloseIcon={true}\n              closeButtonAriaLabel=\"Close\"\n              target={'#vis-summary'}\n              onDismiss={() => { setIsTeachingBubbleVisible(false) }}\n              headline=\"Chart Description\"\n            >\n              <ReactMarkdown source={result} />\n            </TeachingBubble>\n          </div>\n        ) : null}\n    </div>\n  )\n}\n\nexport default StoryTeller","import React, { useMemo, useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace, FieldSummary } from '../../service';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../demo/vegaBase';\n\ninterface VisDescriptionProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst VisDescription: React.FC<VisDescriptionProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <ReactMarkdown source={result} />\n  )\n}\n\nexport default VisDescription","import React, { useMemo } from 'react';\nimport {\n  ViewSpace\n} from '../../../service';\nimport { Field, DataSource } from '../../../global';\nimport { specification } from 'visual-insights';\nimport { PreferencePanelConfig } from '../../../components/preference';\nconst similarityThrehold = 0.2;\nconst topKRelatedSpace = 5;\n\nfunction measuresRelatedScore (measures1: string[], measures2: string[]) {\n  let meaSet = new Set([...measures1, ...measures2])\n  let meaSet1 = new Set(measures1)\n  let meaSet2 = new Set(measures2)\n  let meaVec1: number[] = [];\n  let meaVec2: number[] = [];\n  for (let mea of meaSet) {\n    meaVec1.push(Number(meaSet1.has(mea)))\n    meaVec2.push(Number(meaSet2.has(mea)))\n  }\n  let score = 0;\n  for (let i = 0; i < meaVec1.length; i++) {\n    score += meaVec1[i] * meaVec2[i];\n  }\n  score /= (Math.sqrt(measures1.length) * Math.sqrt(measures2.length))\n  // console.log(measures1, measures2, score)\n  return score;\n}\ninterface RelatedViewSpace extends ViewSpace {\n  relatedScore: number;\n}\nexport interface DigDimensionProps {\n  /**\n   * we suppose that viewSpaces here is a ranked space list\n   */\n  viewSpaces: ViewSpace[];\n  interestedViewSpace: ViewSpace;\n  fieldScores: Array<[string, number, number, Field]>;\n  dataSource: DataSource;\n  visualConfig: PreferencePanelConfig\n}\n\nfunction useDigDimension(props: DigDimensionProps) {\n  const { viewSpaces, interestedViewSpace, fieldScores, dataSource, visualConfig } = props;\n  const relatedSpaces = useMemo<ViewSpace[]>(() => {\n    let ans: ViewSpace[] = []\n    for (let space of viewSpaces) {\n      if (space.dimensions.length > interestedViewSpace.dimensions.length && space.dimensions.length - interestedViewSpace.dimensions.length <= 2) {\n        let isSubset = interestedViewSpace.dimensions.every(subDim => {\n          return space.dimensions.find(dim => subDim === dim)\n        })\n        if (isSubset) {\n          ans.push(space)\n        }\n      }\n    }\n    return ans;\n  }, [interestedViewSpace, viewSpaces])\n  const rankedRelatedSpaces = useMemo(() => {\n    let ans: RelatedViewSpace[] = [];\n    for (let space of relatedSpaces) {\n      let measureSimilarity = measuresRelatedScore(interestedViewSpace.measures, space.measures);\n      if (measureSimilarity > similarityThrehold) {\n        // console.log({ measureSimilarity })\n        ans.push({\n          ...space,\n          relatedScore: space.score / Math.sqrt(measureSimilarity)\n        })\n      }\n    }\n    return ans.sort((a, b) => a.relatedScore - b.relatedScore);\n  }, [relatedSpaces]);\n\n  const viewList = useMemo(() => {\n    const ans = rankedRelatedSpaces.slice(0, topKRelatedSpace).map(space => {\n      let spaceFieldScores = fieldScores.filter(field => {\n        return space.dimensions.includes(field[0]) || space.measures.includes(field[0])\n      })\n      return {\n        ...space,\n        schema: specification(spaceFieldScores, dataSource, space.dimensions, space.measures).schema\n      };\n    })\n    return ans;\n  }, [rankedRelatedSpaces, fieldScores])\n\n  return viewList\n}\n\nexport default useDigDimension;\n","import React, { useMemo } from \"react\";\nimport VisDescription from \"../../../plugins/visSummary/description\";\nimport useDigDimension, { DigDimensionProps } from \"./digDimension\";\nimport BaseChart, { Specification } from \"../../../demo/vegaBase\";\nimport { Subspace } from \"../../../service\";\nimport { IconButton, Stack } from \"office-ui-fabric-react\";\n\nfunction isDimensionEqual(dimensions1: string[], dimensions2: string[]) {\n  if (dimensions1.length !== dimensions2.length) {\n    return false;\n  }\n  return dimensions1.every(dim1 => {\n    return dimensions2.includes(dim1);\n  });\n}\ninterface AssociationProps {\n  digDimensionProps: DigDimensionProps;\n  subspaceList: Subspace[];\n  onSelectView: (index: number) => void\n}\nconst Association: React.FC<AssociationProps> = props => {\n  const { digDimensionProps, subspaceList, onSelectView } = props;\n  const { dataSource, visualConfig, fieldScores } = digDimensionProps;\n  const relatedCharts = useDigDimension(digDimensionProps);\n  const fieldFeatures = fieldScores.map(f => f[3]);\n  return (\n    <div>\n      <div className=\"ms-Grid\">\n        {relatedCharts.map((view, i) => {\n          let currentSpace = subspaceList.find(space => {\n            return isDimensionEqual(space.dimensions, view.dimensions);\n          });\n          return (\n            <div key={`associate-row-${i}`}\n              className=\"ms-Grid-row\"\n              style={{\n                border: \"solid 1px #bfbfbf\",\n                margin: \"1em\",\n                padding: \"1em\"\n              }}\n            >\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg9\"\n                style={{ overflow: 'auto' }}\n              >\n                <BaseChart\n                  aggregator={visualConfig.aggregator}\n                  defaultAggregated={view.schema.geomType && view.schema.geomType.includes(\"point\") ? false : true}\n                  defaultStack={visualConfig.defaultStack}\n                  dimensions={view.dimensions}\n                  measures={view.measures}\n                  dataSource={dataSource}\n                  schema={view.schema}\n                  fieldFeatures={fieldFeatures}\n                />\n              </div>\n              <div\n                className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg3\"\n                style={{ fontSize: 14, color: \"#8a8886\", overflow: \"auto\" }}\n              >\n                <div>\n                  \n                  <Stack tokens={{ childrenGap: 8 }} horizontal>\n                    <IconButton iconProps={{ iconName: 'Lightbulb' }} title=\"Interested\" onClick={() => {\n                      onSelectView(view.index)\n                    }} />\n                  </Stack>\n                </div>\n                {currentSpace && (\n                  <VisDescription\n                    dimensions={view.dimensions}\n                    measures={view.measures}\n                    dimScores={fieldScores}\n                    space={currentSpace}\n                    spaceList={subspaceList}\n                    schema={view.schema}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Association;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  DefaultButton,\n  IconButton,\n  Stack,\n  ProgressIndicator\n} from \"office-ui-fabric-react\";\nimport PreferencePanel, {\n  PreferencePanelConfig\n} from \"../../components/preference\";\nimport { useComposeState } from \"../../utils/index\";\nimport BaseChart, { Specification } from \"../../demo/vegaBase\";\nimport { DataSource, Field } from \"../../global\";\nimport { specification } from \"visual-insights\";\nimport VisSummary from \"../../plugins/visSummary/index\";\nimport { useGlobalState } from \"../../state\";\nimport Association from \"./association/index\";\nimport {\n  Subspace,\n  clusterMeasures,\n  ViewSpace,\n  FieldSummary\n} from \"../../service\";\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n}\ninterface DataView {\n  schema: Specification;\n  aggData: DataSource;\n  fieldFeatures: Field[];\n  dimensions: string[];\n  measures: string[];\n}\n\ninterface GalleryProps {\n  subspaceList: Subspace[];\n  /**\n   * dataSource here should be cookedData.\n   */\n  dataSource: DataSource;\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n}\n\nconst Gallery: React.FC<GalleryProps> = props => {\n  const { dataSource, summary, subspaceList } = props;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  });\n  const [showAssociation, setShowAssociation] = useState(false);\n  const [visualConfig, setVisualConfig] = useState<PreferencePanelConfig>({\n    aggregator: \"sum\",\n    defaultAggregated: true,\n    defaultStack: true\n  });\n  const [viewSpaces, setViewSpaces] = useState<ViewSpace[]>([]);\n\n  const [dataView, setDataView] = useState<DataView>({\n    schema: {\n      position: [],\n      color: [],\n      opacity: [],\n      geomType: []\n    },\n    fieldFeatures: [],\n    aggData: [],\n    dimensions: [],\n    measures: []\n  });\n\n  const gotoPage = (pageNo: number) => {\n    setCurrentPage(pageNo);\n  };\n\n  useEffect(() => {\n    updateState(draft => {\n      draft.loading.gallery = true;\n    });\n    // todo:\n    // should group number be the same for different subspaces?\n    clusterMeasures(\n      state.maxGroupNumber,\n      subspaceList.map(space => {\n        return {\n          dimensions: space.dimensions,\n          measures: space.measures,\n          matrix: space.correlationMatrix\n        };\n      })\n    ).then(viewSpaces => {\n      setViewSpaces(viewSpaces);\n      updateState(draft => {\n        draft.loading.gallery = false;\n      });\n    });\n  }, [subspaceList, dataSource, state.maxGroupNumber]);\n\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [\n        field.fieldName,\n        field.entropy,\n        field.maxEntropy,\n        { name: field.fieldName, type: field.type }\n      ];\n    });\n  }, [summary.origin, summary.grouped]);\n\n  useEffect(() => {\n    const viewState = viewSpaces[currentPage];\n    if (viewState) {\n      const { dimensions, measures } = viewState;\n      try {\n        // todo: find the strict confition instead of using try catch\n        const fieldScores = dimScores.filter(field => {\n          return dimensions.includes(field[0]) || measures.includes(field[0]);\n        });\n        const { schema } = specification(\n          fieldScores,\n          dataSource,\n          dimensions,\n          measures\n        );\n        setDataView({\n          schema,\n          fieldFeatures: fieldScores.map(f => f[3]),\n          aggData: dataSource,\n          dimensions,\n          measures\n        });\n        // ugly code\n        // todo:\n        // implement this in specification\n        // + check geomType\n        // + check geom number and aggregated geom number\n        if (schema.geomType && schema.geomType.includes(\"point\")) {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: false\n            };\n          });\n        } else {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: true\n            };\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [viewSpaces, currentPage]);\n  const currentSpace = useMemo<Subspace>(() => {\n    return subspaceList.find(subspace => {\n      return subspace.dimensions.join(\",\") === dataView.dimensions.join(\",\");\n    })!;\n  }, [subspaceList, currentPage, dataView]);\n  useEffect(() => {\n    setShowAssociation(false);\n  }, [currentPage]);\n  return (\n    <div className=\"content-container\">\n      <PreferencePanel\n        show={pageStatus.show.configPanel}\n        config={visualConfig}\n        onUpdateConfig={config => {\n          setVisualConfig(config);\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.configPanel = false;\n          });\n        }}\n      />\n\n      <div className=\"card\">\n        {(state.loading.gallery ||\n          state.loading.subspaceSearching ||\n          state.loading.univariateSummary) && (\n          <ProgressIndicator description=\"calculating\" />\n        )}\n        <h2 style={{ marginBottom: 0 }}>\n          Visual Insights{\" \"}\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Preference\"\n            ariaLabel=\"preference\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.configPanel = true;\n              });\n            }}\n          />\n          <IconButton\n            iconProps={{ iconName: \"Lightbulb\" }}\n            title=\"Dig In\"\n            ariaLabel=\"digIn\"\n            onClick={() => {\n              setShowAssociation(true);\n            }}\n          />\n        </h2>\n        <p className=\"state-description\">\n          Page No. {currentPage + 1} of {viewSpaces.length}\n        </p>\n        <p className=\"state-description\">\n          Details of the recommendation process can be seen in <b>NoteBook</b>{\" \"}\n          Board. You can adjust some of the parameters and operators and see how\n          it influence recommendation results.\n        </p>\n        <p className=\"state-description\">\n          Try to use the setting button beside the \"visual insight\" title to\n          adjust the visualization settings to get a view you prefer better.\n        </p>\n        <div className=\"ms-Grid\" dir=\"ltr\">\n          <div className=\"ms-Grid-row\">\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\"\n              style={{ overflow: \"auto\" }}\n            >\n              <Stack horizontal tokens={{ childrenGap: 20 }}>\n                <DefaultButton\n                  text=\"Last\"\n                  onClick={() => {\n                    gotoPage(\n                      (currentPage - 1 + viewSpaces.length) % viewSpaces.length\n                    );\n                  }}\n                  allowDisabledFocus\n                />\n                <DefaultButton\n                  text=\"Next\"\n                  onClick={() => {\n                    gotoPage((currentPage + 1) % viewSpaces.length);\n                  }}\n                  allowDisabledFocus\n                />\n              </Stack>\n              <h3>Specification</h3>\n              <pre>{JSON.stringify(dataView.schema, null, 2)}</pre>\n              <VisSummary\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dimScores={dimScores}\n                space={currentSpace}\n                spaceList={subspaceList}\n                schema={dataView.schema}\n              />\n            </div>\n            <div\n              className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg9\"\n              style={{ overflow: \"auto\" }}\n            >\n              <BaseChart\n                aggregator={visualConfig.aggregator}\n                defaultAggregated={visualConfig.defaultAggregated}\n                defaultStack={visualConfig.defaultStack}\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dataSource={dataView.aggData}\n                schema={dataView.schema}\n                fieldFeatures={dataView.fieldFeatures}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {showAssociation && (\n        <div className=\"card\">\n          <h2> Related Views </h2>\n          <Association\n            onSelectView={(index) => {\n              let pos = viewSpaces.findIndex(v => v.index === index)\n              if (pos > -1) {\n                gotoPage(pos);\n              }\n            }}\n            subspaceList={subspaceList}\n            digDimensionProps={{\n              visualConfig,\n              dataSource,\n              viewSpaces,\n              fieldScores: dimScores,\n              interestedViewSpace: viewSpaces[currentPage]\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React, { useRef, useEffect } from 'react';\nimport embed from 'vega-embed';\nimport { FieldType, DataSource } from '../../global';\nexport interface DistributionChartProps {\n  fieldType: FieldType;\n  x: string;\n  y: string;\n  dataSource: DataSource\n}\n\nconst DistributionChart: React.FC<DistributionChartProps> = (props) => {\n  const chart = useRef<HTMLDivElement>(null);\n  const { x, y, dataSource, fieldType } = props;\n    useEffect(() => {\n      if (chart.current) {\n        let values: typeof dataSource = [];\n        let hasIndex = false;\n        if (fieldType === 'ordinal' && dataSource.some(member => {\n          return /(\\[|\\()-?([0-9.]+|Infinity),\\s*([0-9.]+|Infinity)(\\]|\\))/.test(member.memberName)\n        })) {\n          values = dataSource.map(member => {\n            hasIndex = true;\n            let result = /(\\[|\\()(?<left>-?([0-9.]+|Infinity)),\\s*([0-9.]+|Infinity)(\\]|\\))/.exec(member.memberName);\n            \n            return {\n              ...member,\n              index: result === null ? member.name : Number(result.groups!.left)\n            }\n          })\n        } else {\n          values = dataSource\n        }\n        let sortBy: string | undefined | any = undefined;\n        if (fieldType === 'nominal') {\n          sortBy = '-y'\n        } else if (fieldType === 'ordinal' && hasIndex) {\n          sortBy = { field: 'index' }\n        }\n        embed(chart.current, {\n          background: '#fff',\n          data: {\n            values\n          },\n          height: 120,\n          width: 200,\n          mark: ['quantitative', 'temporal'].includes(fieldType) ? 'line' : 'bar',\n          encoding: {\n            x: {\n              field: x,\n              axis: dataSource.length > 16 ? null : undefined,\n              type: fieldType, sort: sortBy\n            },\n            y: { field: y, type: 'quantitative', aggregate: 'sum' }\n          }\n        }, {\n          actions: false\n        })\n      }\n    }, [x, y, dataSource])\n  return <div ref={chart}></div>\n}\n\nexport default DistributionChart;","import React, { useMemo } from 'react';\nimport { DetailsList, SelectionMode, IColumn, Icon, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport chroma, { Color } from 'chroma-js';\nimport { FieldSummary } from '../../service';\nimport DistributionChart from './distributionChart';\nimport { FieldType, Record } from '../../global';\n\nimport './fieldAnalysis.css';\n\n// todo: distribution info\n\ninterface FieldAnalsisProps {\n  originSummary: FieldSummary[];\n  groupedSummary: FieldSummary[];\n}\nconst columns: IColumn[] = [\n  {\n    key: 'fieldName',\n    name: 'fieldName',\n    fieldName: 'fieldName',\n    minWidth: 70,\n    maxWidth: 150\n  },\n  {\n    key: 'type',\n    name: 'type',\n    fieldName: 'type',\n    minWidth: 50\n  },\n  {\n    key: 'entropy',\n    name: 'entropy',\n    fieldName: 'entropy',\n    minWidth: 120\n  },\n  {\n    key: 'maxEntropy',\n    name: 'maxEntropy',\n    fieldName: 'maxEntropy',\n    minWidth: 120\n  }\n];\nfunction getIconNameByFieldType (type: string): string {\n  switch (type) {\n    case 'nominal':\n      return 'TextField';\n    case 'quantitative':\n      return 'NumberField';\n    case 'ordinal':\n      return 'Breadcrumb';\n    case 'temporal':\n      return 'EventDate';\n    default:\n      return ''\n  }\n}\n\nfunction getValueColor (value: number, range: [number, number]): [number, number, number] {\n  return chroma.scale('YlGnBu').domain([range[1], range[0]])(value).rgb();\n}\n\n/**\n * \n * @param color rgb array\n * algorithm provided by https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color\n */\nfunction contrastColor(color: [number, number, number]): [number, number, number] {\n  let luminance = (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  return luminance > 0.5 ? [0, 0, 0] : [255, 255, 255]\n}\nconst FieldAnalsis: React.FC<FieldAnalsisProps> = (props) => {\n\n  const { originSummary, groupedSummary } = props;\n\n  const entropyRange = useMemo<[number, number]>(() => {\n    const originEntropy = originSummary.map(s => s.maxEntropy);\n    return [0, Math.max(...originEntropy)];\n  }, [originSummary])\n\n  const onRenderCompactCard = (item: Record) => {\n    return (\n      <div className=\"field-hover-card\">\n        <h2>{item.fieldName}</h2>\n        <div>Field entropy is { Number(item.entropy).toFixed(2) }</div>\n        <div className=\"chart-vertical-margin-container\" >\n          <DistributionChart x=\"memberName\" y=\"count\" fieldType={item.type as FieldType} dataSource={item.distribution} />\n        </div>\n        \n      </div>\n    )\n  }\n  const onRenderExpandedCard = (item: Record) => {\n    const name = item.fieldName;\n    const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n    return (\n      <div className=\"field-hover-card\">\n        {\n          target ? <div>\n            <h3>{target.fieldName}</h3>\n            <div>Field entropy is { Number(target.entropy).toFixed(2) }</div>\n            <div className=\"chart-vertical-margin-container\">\n              <DistributionChart x=\"memberName\" y=\"count\" fieldType={target.type as FieldType} dataSource={target.distribution} />\n            </div>\n          </div> : <div>This field is not grouped.</div>\n        }\n      </div>\n    )\n  }\n\n\n\n  const renderItemColumn = (item: Record, index?: number, column?: IColumn) => {\n    if (column !== undefined) {\n      const name = item.fieldName;\n      const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n      const expandingCardProps: IExpandingCardProps = {\n        onRenderCompactCard,\n        onRenderExpandedCard,\n        renderData: item,\n        compactCardHeight: 320,\n        expandedCardHeight: target ? 320 : 40\n      }\n      const fieldContent = item[column.fieldName!];\n      let bgColor: [number, number, number] = [255, 255, 255];\n      switch (column.key) {\n        case 'type':\n          return <div>\n            <Icon iconName={getIconNameByFieldType(fieldContent)} /> {fieldContent}\n          </div>\n        case 'entropy':\n        case 'maxEntropy':\n          bgColor = getValueColor(item[column.key], entropyRange);\n          let fontColor = contrastColor(bgColor)\n          let bgColorStr = `rgb(${bgColor.join(',')})`\n          let fontColorStr = `rgb(${contrastColor(bgColor).join(',')})`\n          return (\n            <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n              <div style={{ boxShadow: `${bgColorStr} 0px 0px 0px 10px`, backgroundColor: bgColorStr, color: fontColorStr }}>{fieldContent}</div>\n            </HoverCard>\n          )\n        default:\n          return <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n          <div>{fieldContent}</div>\n        </HoverCard>\n      }\n    }\n  }\n\n  // const onRenderRow: IRenderFunction<any> = (props) => {\n  //   const customStyles: Partial<IDetailsRowStyles> = {};\n  //   customStyles.root = { backgroundColor: getValueColor(props.item['entropy'], entropyRange), color: '#fff' }\n  //   return <DetailsRow {...props} styles={customStyles} />;\n  // };\n\n  return <DetailsList compact={true} columns={columns} items={originSummary} selectionMode={SelectionMode.none} onRenderItemColumn={renderItemColumn} />\n}\n\nexport default FieldAnalsis;","import React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Subspace } from '../../service';\nimport { DetailsList, SelectionMode, IColumn, Icon, IDetailsRowProps, IDetailsRowStyles, DetailsRow, IRenderFunction, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport embed from 'vega-embed';\nimport { DataSource } from '../../global';\n\nfunction encodeArr (arr: any[]): string {\n  return arr.join(',')\n}\ninterface IndexSubspace extends Subspace {\n  index: number\n}\ninterface SubspacesProps {\n  subspaceList: Subspace[];\n  onSpaceChange: (dimensions: string[], measures: string[], matrix: number[][]) => void\n}\nconst Subspaces: React.FC<SubspacesProps> = (props) => {\n  const { subspaceList, onSpaceChange } = props;\n  console.log(subspaceList)\n  const [curIndex, setCurIndex] = useState(0);\n  const spaceChart = useRef<HTMLDivElement>(null)\n  const relationChart = useRef<HTMLDivElement>(null)\n  // const subspaces = useMemo<IndexSubspace[]>(() => {\n  //   return subspaceList.map((space, index) => {\n  //     return {\n  //       ...space,\n  //       index\n  //     }\n  //   })\n  // }, [subspaceList]);\n  const range = useMemo<[number, number]>(() => {\n    let max = 0;\n    let min = Infinity;\n    for (let space of subspaceList) {\n      for (let { name, value } of space.measures) {\n        max = Math.max(max, value);\n        min = Math.min(min, value);\n      }\n    }\n    return [min, max]\n  }, [subspaceList])\n  const values = useMemo<DataSource>(() => {\n    let ans = [];\n    // todos:\n    // the fold operation here is a tmp solution. it is designed when I don't there is a api in vega to handle event listener.\n    // the fold operation here can caused a wasted of time and space.\n    // I suggested to divied it into two charts and connect the logic throgh a state manager outside the charts.\n    for (let i = 0; i < subspaceList.length; i++) {\n      let space = subspaceList[i];\n      let dimensions = encodeArr(space.dimensions)\n      for (let { name, value } of space.measures) {\n        let record: any = {\n          test: i,\n          score: space.score,\n          dimensions,\n          measureName: name,\n          measureValue: value,\n        };\n        ans.push(record)\n      }\n    }\n    return ans\n  }, [subspaceList, range])\n  useEffect(() => {\n    if (spaceChart.current && subspaceList.length > 0) {\n      embed(spaceChart.current, {\n        data: {\n          values\n        },\n        vconcat: [\n          {\n            mark: 'rect',\n            selection: {\n              dim: {\n                type: 'single',\n                on: 'click',\n                encodings: ['y']\n              }\n            },\n            encoding: {\n              x: { field: 'measureName', type: 'nominal' },\n              y: {\n                field: 'dimensions',\n                type: 'ordinal',\n                sort: { field: 'score' }\n              },\n              color: { field: 'measureValue', type: 'quantitative', aggregate: 'mean', scale: { reverse: true } },\n              opacity: {\n                condition: {selection: 'dim', value: 1},\n                value: 0.72\n              },\n            }\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            /**\n             * record is the data record(defiend in `values`) the event contains.\n             */\n            let record = item.datum;\n            let index = subspaceList.findIndex(space => encodeArr(space.dimensions) === record.dimensions)\n\n            if (index > -1) {\n              let targetSpace = subspaceList[index];\n              onSpaceChange(targetSpace.dimensions, targetSpace.measures.map(m => m.name), targetSpace.correlationMatrix);\n              setCurIndex(index);\n            }\n          }\n        })\n      })\n    }\n  }, [subspaceList, values])\n  useEffect(() => {\n    let space = subspaceList[curIndex];\n    if (relationChart.current && subspaceList.length > 0 && space) {\n      let matrix: DataSource = [];\n      \n      for (let i = 0; i < space.correlationMatrix.length; i++) {\n          for (let j = 0; j < space.correlationMatrix[i].length; j++) {\n            matrix.push({\n              x: space.measures[i].name,\n              y: space.measures[j].name,\n              correlation: space.correlationMatrix[i][j]\n            })\n          }\n        }\n      embed(relationChart.current, {\n        data: {\n          values: matrix\n        },\n        mark: 'rect',\n        encoding: {\n          x: { field: 'x', type: 'nominal' },\n          y: { field: 'y', type: 'nominal' },\n          color: { field: 'correlation', type: 'quantitative', aggregate: 'mean' , scale: { scheme: 'redyellowgreen', domain: [-1, 1] } }\n        }\n      })\n    }\n    \n  }, [subspaceList, curIndex])\n  return <div>\n    <div ref={spaceChart}></div>\n    <div ref={relationChart}></div>\n  </div>\n}\n\nexport default Subspaces;","import React, { useEffect, useMemo, useRef } from 'react';\nimport { kruskalMST } from 'visual-insights';\nimport { useGlobalState } from '../../state';\nimport embed from 'vega-embed';\n// cluster should be used for small graph because the number of measure is limited. \n// Browser may be more likely crashed by other algorithm or data structure or memory used in the whole analysis pipline.\n/**\n * adjMatrix and measures share a common index system;\n */\ninterface ClusterBoardProps {\n  adjMatrix: number[][];\n  measures: string[];\n  onFocusGroup: (measuresInView: string[]) => void;\n}\n\ninterface VegaEdge {\n  source: number | string;\n  target: number | string;\n  value: number;\n  inCutEdge: boolean;\n}\ninterface VegaNode {\n  name: string;\n  index: number;\n  value: number;\n  group: number;\n}\ninterface TreeData { \n  nodes: VegaNode[];\n  edges: VegaEdge[]\n}\nconst ClusterBoard: React.FC<ClusterBoardProps> = (props) => {\n  const { adjMatrix, measures, onFocusGroup } = props;\n  const [state, updateState] = useGlobalState();\n  const chart = useRef<HTMLDivElement>(null);\n  // const groups = useMemo<string[][]>(() => {\n  //   return clusterMeasures({\n  //     matrix: adjMatrix,\n  //     measures,\n  //   })\n  // }, [adjMatrix, measures]);\n  const clusterResult = useMemo(() => {\n    /**\n     * todo: \n     * maxGroupNumber = the measures length / max visual channel for measure.\n     */\n    let maxGroupNumber = state.maxGroupNumber\n    let { edgesInMST, groups } = kruskalMST(adjMatrix, maxGroupNumber);\n    return { edgesInMST, groups }\n  }, [adjMatrix, state.maxGroupNumber])\n  const treeData = useMemo<TreeData>(() => {\n    let { edgesInMST, groups } = clusterResult;\n    const edges: VegaEdge[] = edgesInMST.map(edge => {\n      return {\n        source: edge[0][0],\n        target: edge[0][1],\n        value: 1 / edge[1],\n        inCutEdge: edge[2]\n      }\n    });\n    const nodes: VegaNode[] = [];\n    for (let i = 0; i < groups.length; i++) {\n      nodes.push({\n        name: measures[i],\n        index: i,\n        value: 1,\n        group: groups[i]\n      })\n    }\n    return {\n      nodes,\n      edges\n    }\n  }, [measures, clusterResult])\n  useEffect(() => {\n    if (chart.current && measures.length > 0) {\n      embed(chart.current, {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"width\": 700,\n        \"height\": 500,\n        \"padding\": 0,\n        \"autosize\": \"none\",\n      \n        \"signals\": [\n          { \"name\": \"cx\", \"update\": \"width / 2\" },\n          { \"name\": \"cy\", \"update\": \"height / 2\" },\n          {\n            \"description\": \"State variable for active node fix status.\",\n            \"name\": \"fix\", \"value\": false,\n            \"on\": [\n              {\n                \"events\": \"text:mouseout[!event.buttons], window:mouseup\",\n                \"update\": \"false\"\n              },\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix || true\"\n              },\n              {\n                \"events\": \"[text:mousedown, window:mouseup] > window:mousemove!\",\n                \"update\": \"xy()\",\n                \"force\": true\n              }\n            ]\n          },\n          {\n            \"description\": \"Graph node most recently interacted with.\",\n            \"name\": \"node\", \"value\": null,\n            \"on\": [\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix === true ? item() : node\"\n              }\n            ]\n          },\n          {\n            \"description\": \"Flag to restart Force simulation upon data changes.\",\n            \"name\": \"restart\", \"value\": false,\n            \"on\": [\n              {\"events\": {\"signal\": \"fix\"}, \"update\": \"fix && fix.length\"}\n            ]\n          }\n        ],\n      \n        \"data\": [\n          {\n            \"name\": \"node-data\",\n            values: treeData.nodes,\n          },\n          {\n            \"name\": \"link-data\",\n            values: treeData.edges\n          }\n        ],\n      \n        \"scales\": [\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"domain\": {\"data\": \"node-data\", \"field\": \"group\"},\n            \"range\": {\"scheme\": \"tableau20\"}\n          }\n        ],\n      \n        \"marks\": [\n          {\n            \"name\": \"nodes\",\n            \"type\": \"text\",\n            \"zindex\": 1,\n      \n            \"from\": {\"data\": \"node-data\"},\n            \"on\": [\n              {\n                \"trigger\": \"fix\",\n                \"modify\": \"node\",\n                \"values\": \"fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}\"\n              },\n              {\n                \"trigger\": \"!fix\",\n                \"modify\": \"node\", \"values\": \"{fx: null, fy: null}\"\n              }\n            ],\n      \n            \"encode\": {\n              \"enter\": {\n                \"fill\": {\"scale\": \"color\", \"field\": \"group\"},\n                \"text\": {\"field\": \"name\"},\n                \"fontSize\": {\"value\": 14},\n                \"fontWeight\": {\"value\": 600}\n              },\n              \"update\": {\n                \"cursor\": {\"value\": \"pointer\"}\n              }\n            },\n      \n            \"transform\": [\n              {\n                \"type\": \"force\",\n                \"iterations\": 300,\n                \"restart\": {\"signal\": \"restart\"},\n                \"signal\": \"force\",\n                \"forces\": [\n                  {\"force\": \"center\", \"x\": {\"signal\": \"cx\"}, \"y\": {\"signal\": \"cy\"}},\n                  {\"force\": \"collide\" },\n                  {\"force\": \"nbody\" },\n                  {\"force\": \"link\", \"links\": \"link-data\" }\n                ]\n              }\n            ]\n          },\n          {\n            \"type\": \"path\",\n            \"from\": {\"data\": \"link-data\"},\n            \"interactive\": false,\n            \"encode\": {\n              \"update\": {\n                \"stroke\": {\n                  signal: \"datum.inCutEdge == true ? '#f5f5f5' : '#d9d9d9' \"\n                },\n                \"strokeWidth\": {\"value\": 0.8}\n              },\n            },\n            \"transform\": [\n              {\n                \"type\": \"linkpath\",\n                \"require\": {\"signal\": \"force\"},\n                \"shape\": \"line\",\n                \"sourceX\": \"datum.source.x\", \"sourceY\": \"datum.source.y\",\n                \"targetX\": \"datum.target.x\", \"targetY\": \"datum.target.y\"\n              }\n            ]\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            let record = item.datum;\n            let group = record.group;\n            let measuresInView = measures.filter((mea, index) => {\n              return clusterResult.groups[index] === group\n            });\n            onFocusGroup(measuresInView);\n          }\n        })\n      })\n    }\n  }, [treeData, measures])\n  return <div ref={chart}>\n  </div>\n}\n\nexport default ClusterBoard;","import React, { useMemo, useState, useEffect } from 'react';\nimport { DataSource, Field } from '../../global';\nimport FieldAnalysisBoard from './fieldAnalysis';\nimport Subspaces from './subspaces';\nimport { FieldSummary, Subspace, combineFieldsService } from '../../service';\nimport ClusterBoard from './cluster';\nimport { specification } from 'visual-insights';\nimport { ProgressIndicator, Toggle, Slider } from 'office-ui-fabric-react';\nimport { useGlobalState } from '../../state';\nimport VegaBase from '../../demo/vegaBase';\nimport './index.css';\nconst maxMeasureInView = 4;\ninterface NoteBookProps {\n  dataSource: DataSource;\n  // dimScores: [string, number, number, Field][],\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[]\n  };\n  subspaceList: Subspace[]\n}\nconst NoteBook: React.FC<NoteBookProps> = (props) => {\n  const { summary, subspaceList, dataSource } = props;\n  const [state, updateState] = useGlobalState();\n  const [isAggregated, setIsAggregated] = useState(false);\n  interface ClusterState {\n    measures: string[];\n    dimensions: string[];\n    matrix: number[][];\n  }\n  const [clusterState, setClusterState] = useState<ClusterState>({\n    measures: [],\n    dimensions: [],\n    matrix: []\n  })\n\n  const [measuresInView, setMeasuresInView] = useState<string[]>([]);\n\n\n  // todo:\n  // should be updated after designing new specification api\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [field.fieldName, field.entropy, field.maxEntropy, { name: field.fieldName, type: field.type }]\n    });\n  }, [summary.origin, summary.grouped])\n\n  const spec = useMemo(() => {\n    const { dimensions, measures } = clusterState;\n    // todo\n    // this condition is not strict enough. dimScores should share same elements with dimensions and measures.\n    // maybe use try catch in future\n    try {\n      /**\n       * fieldScores is the scores info for the dims and meas in current view.\n       * dimensions should get the grouped new field.\n       * measures shall never use the grouped field.\n       */\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measuresInView.includes(field[0])\n      })\n      const { schema } = specification(fieldScores, dataSource, dimensions, measuresInView)\n      return schema;\n    } catch (error) {\n      console.log(error)\n      return {\n        position: []\n      }\n    }\n\n  }, [dimScores, clusterState, dataSource, measuresInView])\n  useEffect(() => {\n    updateState(draft => {\n      draft.maxGroupNumber = Math.round(state.cookedMeasures.length / maxMeasureInView)\n    })\n  }, [state.cookedMeasures])\n  return <div>\n    <h3 className=\"notebook header\">Univariate Summary</h3>\n    <p className=\"state-description\">Hover your mouse over the fields and see the distails and entropy reducing strategy.</p>\n    {state.loading.univariateSummary && <ProgressIndicator description=\"analyzing\" />}\n    <div className=\"notebook content container\">\n      <FieldAnalysisBoard originSummary={summary.origin} groupedSummary={summary.grouped} />\n    </div>\n\n    <h3 className=\"notebook header\">Subspace Searching</h3>\n    <p className=\"state-description\">Try to choose one row(combination of dimensions) of the subspace and see the changes of the processes below.</p>\n    {state.loading.subspaceSearching && <ProgressIndicator description=\"analyzing\" />}\n    {!state.loading.subspaceSearching && <Slider value={state.topK.dimensionSize * 100} label=\"top k percent dimension used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n      onChange={(value: number) => {\n        updateState(draft => {\n          draft.topK.dimensionSize = value / 100;\n        })\n        const selectedDimensions = state.cookedDimensions.slice(0, Math.round(state.cookedDimensions.length * value / 100));\n        combineFieldsService(dataSource, selectedDimensions, state.cookedMeasures, 'sum')\n          .then(subspaces => {\n            if (subspaces) {\n              updateState(draft => {\n                draft.subspaceList = subspaces\n              })\n            }\n          })\n      }}/>}\n      {\n        !state.loading.subspaceSearching && <Slider value={state.topK.subspacePercentSize * 100} label=\"top k percent subspace used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n        onChange={(value: number) => {\n          updateState(draft => {\n            draft.topK.subspacePercentSize = value / 100;\n          })\n        }}/>\n      }\n    <div className=\"notebook content center container\">\n      <Subspaces subspaceList={subspaceList.slice(0, Math.round(subspaceList.length * state.topK.subspacePercentSize))} onSpaceChange={(dimensions, measures, matrix) => {\n        setClusterState({\n          dimensions,\n          measures,\n          matrix\n        })\n      }} />\n    </div>\n\n    <h3 className=\"notebook header\">Measurement Clustering</h3>\n    <p className=\"state-description\">Try to choose one group to visualize them.</p>\n    <Slider\n      label=\"Max Group Number\"\n      min={1}\n      max={state.cookedMeasures.length || 4}\n      step={1}\n      // defaultValue={clusterState.measures.length / 4}\n      value={state.maxGroupNumber}\n      showValue={true}\n      onChange={(value: number) => { updateState(draft => {\n        draft.maxGroupNumber = value\n      })}}\n    />\n    <div className=\"notebook content center container\">\n      <ClusterBoard adjMatrix={clusterState.matrix} measures={clusterState.measures} onFocusGroup={(measInView) => { setMeasuresInView(measInView); console.log('view in measures', measInView) }} />\n    </div>\n\n    <h3 className=\"notebook header\">Visualization</h3>\n    <p className=\"state-description\">\n      If there is no result here, try to click one group of measures in <b>Clustering</b> process above.\n    </p>\n    <Toggle checked={isAggregated} label=\"aggregate measures\" defaultChecked onText=\"On\" offText=\"Off\" onChange={(e, checked: boolean | undefined) => {setIsAggregated(!!checked)}} />\n    <div className=\"notebook content center container\">\n      <VegaBase defaultAggregated={isAggregated} defaultStack={true} aggregator={'sum'}\n        schema={spec}\n        fieldFeatures={dimScores.map(dim => dim[3])}\n        dataSource={dataSource}\n        dimensions={clusterState.dimensions} measures={measuresInView} />\n    </div>\n\n  </div>\n}\n\nexport default NoteBook;","import React from 'react';\nimport { DetailsList, SelectionMode } from 'office-ui-fabric-react';\nimport { DataSource, BIField, BIFieldType } from '../global';\nexport interface DataTableProps {\n  dataSource: DataSource,\n  fields: BIField[]\n}\nconst DataTable: React.FC<DataTableProps> = (props) => {\n  const { dataSource = [], fields = [] } = props;\n  let columns = fields.map(field => {\n    return {\n      key: field.name,\n      name: field.name,\n      fieldName: field.name,\n      minWidth: 70,\n      maxHeight: 90\n    }\n  });\n\n  return <div style={{maxHeight: 400, overflow: 'auto'}}>\n    <DetailsList items={dataSource} columns={columns} selectionMode={SelectionMode.none} />\n  </div>\n}\n\nexport default DataTable;","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Panel, PanelType, Toggle } from 'office-ui-fabric-react';\n\nimport { BIField, BIFieldType } from '../global';\n\ninterface FieldPanelProps {\n  show: boolean;\n  onClose: () => void;\n  onUpdateConfig: (fields: BIField[]) => void;\n  fields: BIField[];\n}\nconst FieldPanel: React.FC<FieldPanelProps> = (props) => {\n  const {\n    show = false,\n    // fields = [],\n    onUpdateConfig,\n    onClose\n  } = props;\n  const [fields, setFields] = useState<BIField[]>([])\n  useEffect(() => {\n    setFields(props.fields)\n  }, [props.fields])\n  \n  function updateFieldType(field: BIField, type: BIFieldType) {\n    setFields(fields => {\n      return fields.map(f => {\n        if (field.name === f.name) {\n          return {\n            name: field.name,\n            type\n          }\n        } else {\n          return f\n        }\n      })\n    })\n  }\n\n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig(fields); onClose(); }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Meta Config\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <div>\n      {\n        fields.map(field => <Toggle key={field.name} checked={field.type === 'dimension'} label={field.name} onText=\"dimension\" offText=\"measure\" onChange={(e, checked) => { updateFieldType(field, checked ? 'dimension' : 'measure')}} />)\n      }\n    </div>\n  </Panel>\n}\n\nexport default FieldPanel;\n","import { Cleaner } from 'visual-insights';\nimport { DataSource } from '../../global';\n\n// todo\n// cleanMethodList has redundency.\n// clean method type, cleanData(switch), cleanMethodList should be maintained in one structure.\nexport type CleanMethod = 'dropNull' | 'useMode' | 'simpleClean';\nexport function cleanData (dataSource: DataSource, dimensions: string[], measures: string[], method: CleanMethod): DataSource {\n  // hint: dropNull works really bad when we test titanic dataset.\n  // useMode fails when there are more null values than normal values;\n  switch (method) {\n    case 'dropNull':\n      return Cleaner.dropNull(dataSource, dimensions, measures);\n    case 'useMode':\n      // todo: bad props design\n      return Cleaner.useMode(dataSource, dimensions.concat(measures));  \n    case 'simpleClean':\n    default:\n      return Cleaner.simpleClean(dataSource, dimensions, measures);\n  }\n}\n\nexport const cleanMethodList: Array<{ key: CleanMethod; text: string }> = [\n  { key: 'dropNull', text: 'drop null records' },\n  { key: 'useMode', text: 'replace null with mode' },\n  { key: 'simpleClean', text: 'simple cleaning' }\n]\n","import React, { useMemo } from 'react';\nimport { BIField, DataSource, Record } from '../../global';\nimport { Transform } from '../../utils/index'\nimport {  cleanData,  CleanMethod } from './clean';\nimport { deepcopy } from '../../utils/index';\n\n\nexport function useDataSource (rawData: DataSource, fields: BIField[], cleanMethod: CleanMethod): [DataSource, DataSource] {\n  const dimensions = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'dimension').map(field => field.name)\n  }, [fields])\n\n  const measures = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'measure').map(field => field.name)\n  }, [fields])\n\n  const dataSource = useMemo<DataSource>(() => {\n    return rawData.map(row => {\n      let record: Record = {}\n      fields.forEach(field => {\n        record[field.name] = field.type === 'dimension' ? row[field.name] : Transform.transNumber(row[field.name])\n      })\n      return record\n    })\n  }, [rawData, fields])\n\n  const preparedData = useMemo<DataSource>(() => {\n    return cleanData(deepcopy(dataSource), dimensions, measures, cleanMethod);\n  }, [dimensions, measures, dataSource, cleanMethod])\n\n  return [dataSource, preparedData]\n}","// todo replace the deepcopy with a safe and faster one.\nexport default function deepcopy(dataSource: any) {\n  return JSON.parse(JSON.stringify(dataSource))\n}","import React, { useState, useRef } from \"react\";\nimport { useGlobalState } from \"../../state\";\nimport { FileLoader, useComposeState } from '../../utils/index';\nimport { ComboBox, DefaultButton, IconButton, Callout, Stack, CommandBar } from 'office-ui-fabric-react';\nimport DataTable from '../../components/table';\nimport FieldPanel from '../../components/fieldConfig';\nimport { DataSource,  BIField } from '../../global';\nimport {  cleanMethodList, CleanMethod } from './clean';\nimport { Cleaner } from 'visual-insights';\nimport { useDataSource } from './useDataSource';\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  }\n}\n\ninterface DataSourceBoardProps {\n  onExtractInsights: () => void;\n}\n\nconst DataSourceBoard: React.FC<DataSourceBoardProps> = (props) => {\n  const [state,updateState, dispatch] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  })\n  const [cleanMethod, setCleanMethod] = useState<CleanMethod>('dropNull');\n\n  const dataSetting = useRef<HTMLDivElement>(null);\n  const fileEle = useRef<HTMLInputElement>(null);\n\n  const [dataSource, preparedData] = useDataSource(state.rawData, state.fields, cleanMethod);\n\n  async function fileUploadHanlder () {\n    if (fileEle.current !== null && fileEle.current.files !== null) {\n      const file = fileEle.current.files[0];\n      /**\n       * tmpFields is fields cat by specific rules, the results is not correct sometimes, waitting for human's input\n       */\n      let tmpFields: BIField[] = [];\n      let rawData: DataSource = [];\n\n      if (file.type === 'text/csv' || file.type === 'application/vnd.ms-excel') {\n        rawData = await FileLoader.csvLoader(file);\n      } else if (file.type === 'application/json') {\n        rawData = await FileLoader.jsonLoader(file);\n      } else {\n        throw new Error(`unsupported file type=${file.type} `)\n      }\n      rawData = Cleaner.dropNullColumn(rawData, Object.keys(rawData[0])).dataSource;\n      tmpFields = Object.keys(rawData[0]).map(fieldName => {\n        return {\n          name: fieldName,\n          type: rawData.every(row => {\n            return !isNaN(row[fieldName]) || row[fieldName] === undefined;\n          }) ? 'measure' : 'dimension'\n        }\n      });\n      updateState(draft => {\n        draft.fields = tmpFields;\n        draft.rawData = rawData;\n      })\n    }\n  }\n  // const analysisHandler = startAnalysis(preparedData, state.fields);\n\n  const commandBarList = [\n    {\n      key: 'upload',\n      name: 'Upload',\n      iconProps: { iconName: 'Upload' },\n      onClick: () => {\n        if (fileEle.current) {\n          fileEle.current.click();\n        }\n      }\n    }\n  ]\n\n  return (\n    <div className=\"content-container\">\n      <FieldPanel\n        fields={state.fields}\n        show={pageStatus.show.fieldConfig}\n        onUpdateConfig={fields => {\n          updateState(draft => {\n            draft.fields = fields;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.fieldConfig = false;\n          });\n        }}\n      />\n      <div className=\"card\">\n        <Stack horizontal>\n          <DefaultButton\n            disabled={dataSource.length === 0}\n            iconProps={{ iconName: \"Financial\" }}\n            text=\"Extract Insights\"\n            onClick={() => {\n              dispatch('extractInsights', {\n                dataSource: preparedData,\n                fields: state.fields\n              })\n              props.onExtractInsights();\n            }}\n          />\n          <div ref={dataSetting}>\n            <IconButton\n              iconProps={{ iconName: \"ExcelDocument\" }}\n              title=\"Upload\"\n              ariaLabel=\"upload data\"\n              onClick={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = true;\n                });\n              }}\n            />\n            <Callout\n              style={{ maxWidth: 300 }}\n              className=\"vi-callout-callout\"\n              role=\"alertdialog\"\n              gapSpace={0}\n              target={dataSetting.current}\n              onDismiss={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = false;\n                });\n              }}\n              setInitialFocus={true}\n              hidden={!pageStatus.show.dataConfig}\n            >\n              <div className=\"vi-callout-header\">\n                <p className=\"vi-callout-title\">Upload Your own dataset</p>\n              </div>\n              <div className=\"vi-callout-inner\">\n                <div className=\"vi-callout-content\">\n                  <p className=\"vi-callout-subTex\">\n                    .csv, .json, .txt are supportted.\n                  </p>\n                </div>\n                <div className=\"vi-callout-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileEle}\n                    multiple\n                    accept=\"*\"\n                    style={{ display: \"none\" }}\n                    onChange={fileUploadHanlder}\n                  />\n                  <CommandBar\n                    overflowButtonProps={{ name: \"More\" }}\n                    items={commandBarList}\n                  />\n                </div>\n              </div>\n            </Callout>\n          </div>\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            title=\"Field Setting\"\n            ariaLabel=\"field setting\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.fieldConfig = true;\n              });\n            }}\n          />\n        </Stack>\n        <div style={{ margin: \"20px 0px\" }}>\n          <ComboBox\n            styles={{ root: { maxWidth: \"180px\" } }}\n            selectedKey={cleanMethod}\n            label=\"Clean Method\"\n            allowFreeform={true}\n            autoComplete=\"on\"\n            options={cleanMethodList}\n            onChange={(e, option) => {\n              option && setCleanMethod(option.key as CleanMethod);\n            }}\n          />\n        </div>\n        <p style={{ fontSize: 12, fontWeight: 400, color: \"#595959\" }}>\n          Remember to adjust the fields' types and cleaning strategy before\n          extracting insights.\n        </p>\n        <i style={{ fontSize: 12, fontWeight: 300, color: \"#595959\" }}>\n          Number of records {preparedData.length}\n        </i>\n        <DataTable fields={state.fields} dataSource={preparedData} />\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceBoard;\n","import React from \"react\";\nimport { useGlobalState, GlobalStateProvider } from \"./state\";\nimport { Pivot, PivotItem } from \"office-ui-fabric-react\";\nimport { useComposeState } from \"./utils/index\";\nimport \"./App.css\";\n\nimport Gallery from \"./pages/gallery/index\";\nimport NoteBook from \"./pages/notebook/index\";\nimport DataSourceBoard from \"./pages/dataSource/index\";\n\nconst pivotList = [\n  {\n    title: \"DataSource\",\n    itemKey: \"pivot-\" + 1\n  },\n  {\n    title: \"NoteBook\",\n    itemKey: \"pivot-\" + 2\n  },\n  {\n    title: \"Explore\",\n    itemKey: \"pivot-\" + 3\n  }\n];\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n  current: {\n    pivotKey: string;\n  };\n}\n\nfunction App() {\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    },\n    current: {\n      pivotKey: pivotList[0].itemKey\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"header-bar\">\n        <div className=\"ms-Grid-row\">\n          <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg1\">\n            <a\n              href=\"https://github.com/ObservedObserver/visual-insights\"\n              className=\"logo\"\n            >\n              <img src=\"/logo.png\" />\n            </a>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg11\">\n            <Pivot\n              selectedKey={pageStatus.current.pivotKey}\n              onLinkClick={item => {\n                item &&\n                  item.props.itemKey &&\n                  setPageStatus(draft => {\n                    draft.current.pivotKey = item.props.itemKey!;\n                  });\n              }}\n              headersOnly={true}\n            >\n              {pivotList.map(pivot => (\n                <PivotItem\n                  key={pivot.itemKey}\n                  headerText={pivot.title}\n                  itemKey={pivot.itemKey}\n                />\n              ))}\n            </Pivot>\n          </div>\n        </div>\n      </div>\n      {pageStatus.current.pivotKey === \"pivot-3\" && (\n        <Gallery\n          subspaceList={state.subspaceList}\n          dataSource={state.cookedDataSource}\n          summary={state.summary}\n        />\n      )}\n      {pageStatus.current.pivotKey === \"pivot-1\" && <DataSourceBoard onExtractInsights={() => {\n        setPageStatus(draft => {\n          draft.current.pivotKey = \"pivot-3\";\n          draft.show.insightBoard = true;\n        });\n      }\n      } />}\n      {pageStatus.current.pivotKey === \"pivot-2\" && (\n        <div className=\"content-container\">\n          <div className=\"card\">\n            <NoteBook\n              summary={state.summary}\n              subspaceList={state.subspaceList}\n              dataSource={state.cookedDataSource}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function() {\n  return (\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { initializeIcons } from '@uifabric/icons';\nimport * as serviceWorker from './serviceWorker';\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}